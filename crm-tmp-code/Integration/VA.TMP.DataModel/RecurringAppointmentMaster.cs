//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using VA.TMP.OptionSets;

namespace VA.TMP.DataModel
{
    /// <summary>
    /// The Master reserve resource of a recurring reserve resource series.
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("recurringappointmentmaster")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.1.0.71")]
    public partial class RecurringAppointmentMaster : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Default Constructor.
        /// </summary>
        public RecurringAppointmentMaster(): base(EntityLogicalName)
        {
        }

        public const string EntityLogicalName = "recurringappointmentmaster";
        public const string EntityLogicalCollectionName = "recurringappointmentmasters";
        public const string EntitySetName = "recurringappointmentmasters";
        public const int EntityTypeCode = 4251;
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
        private void OnPropertyChanged(string propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        private void OnPropertyChanging(string propertyName)
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
            }
        }

        /// <summary>
        /// Unique identifier of the recurring appointment series.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
        public System.Nullable<System.Guid> ActivityId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("activityid");
            }

            set
            {
                this.OnPropertyChanging("ActivityId");
                this.SetAttributeValue("activityid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }

                this.OnPropertyChanged("ActivityId");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
        public override System.Guid Id
        {
            get
            {
                return base.Id;
            }

            set
            {
                this.ActivityId = value;
            }
        }

        /// <summary>
        /// Type of activity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activitytypecode")]
        public string ActivityTypeCode
        {
            get
            {
                return this.GetAttributeValue<string>("activitytypecode");
            }
        }

        /// <summary>
        /// Type a category to identify the recurring appointment type, such as status meeting or service call, to tie the appointment to a business group or function.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("category")]
        public string Category
        {
            get
            {
                return this.GetAttributeValue<string>("category");
            }

            set
            {
                this.OnPropertyChanging("Category");
                this.SetAttributeValue("category", value);
                this.OnPropertyChanged("Category");
            }
        }

        /// <summary>
        /// Shows who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference CreatedBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        /// <summary>
        /// Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> CreatedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Shows who created the record on behalf of another user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
        }

        /// <summary>
        /// Unique identifier for Service Activity associated with Recurring Appointment.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cvt_serviceactivityid")]
        public Microsoft.Xrm.Sdk.EntityReference cvt_serviceactivityid
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cvt_serviceactivityid");
            }

            set
            {
                this.OnPropertyChanging("cvt_serviceactivityid");
                this.SetAttributeValue("cvt_serviceactivityid", value);
                this.OnPropertyChanged("cvt_serviceactivityid");
            }
        }

        /// <summary>
        /// The day of the month on which the recurring appointment occurs.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dayofmonth")]
        public System.Nullable<int> DayOfMonth
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("dayofmonth");
            }

            set
            {
                this.OnPropertyChanging("DayOfMonth");
                this.SetAttributeValue("dayofmonth", value);
                this.OnPropertyChanged("DayOfMonth");
            }
        }

        /// <summary>
        /// Bitmask that represents the days of the week on which the recurring appointment occurs.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("daysofweekmask")]
        public System.Nullable<int> DaysOfWeekMask
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("daysofweekmask");
            }

            set
            {
                this.OnPropertyChanging("DaysOfWeekMask");
                this.SetAttributeValue("daysofweekmask", value);
                this.OnPropertyChanged("DaysOfWeekMask");
            }
        }

        /// <summary>
        /// List of deleted instances of the recurring appointment series.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("deletedexceptionslist")]
        public string DeletedExceptionsList
        {
            get
            {
                return this.GetAttributeValue<string>("deletedexceptionslist");
            }
        }

        /// <summary>
        /// Type additional information to describe the recurring appointment, such as key talking points or objectives.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
        public string Description
        {
            get
            {
                return this.GetAttributeValue<string>("description");
            }

            set
            {
                this.OnPropertyChanging("Description");
                this.SetAttributeValue("description", value);
                this.OnPropertyChanged("Description");
            }
        }

        /// <summary>
        /// Duration of the recurring appointment series in minutes.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("duration")]
        public System.Nullable<int> Duration
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("duration");
            }

            set
            {
                this.OnPropertyChanging("Duration");
                this.SetAttributeValue("duration", value);
                this.OnPropertyChanged("Duration");
            }
        }

        /// <summary>
        /// Actual end date of the recurring appointment series based on the specified end date and recurrence pattern.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("effectiveenddate")]
        public System.Nullable<System.DateTime> EffectiveEndDate
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("effectiveenddate");
            }

            set
            {
                this.OnPropertyChanging("EffectiveEndDate");
                this.SetAttributeValue("effectiveenddate", value);
                this.OnPropertyChanged("EffectiveEndDate");
            }
        }

        /// <summary>
        /// Actual start date of the recurring appointment series based on the specified start date and recurrence pattern.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("effectivestartdate")]
        public System.Nullable<System.DateTime> EffectiveStartDate
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("effectivestartdate");
            }

            set
            {
                this.OnPropertyChanging("EffectiveStartDate");
                this.SetAttributeValue("effectivestartdate", value);
                this.OnPropertyChanged("EffectiveStartDate");
            }
        }

        /// <summary>
        /// End time of the associated activity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("endtime")]
        public System.Nullable<System.DateTime> EndTime
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("endtime");
            }

            set
            {
                this.OnPropertyChanging("EndTime");
                this.SetAttributeValue("endtime", value);
                this.OnPropertyChanged("EndTime");
            }
        }

        /// <summary>
        /// Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
        public System.Nullable<decimal> ExchangeRate
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
            }
        }

        /// <summary>
        /// State code to indicate whether the recurring appointment series is expanded fully or partially.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("expansionstatecode")]
        public System.Nullable<recurringappointmentmaster_expansionstatecode> ExpansionStateCode
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("expansionstatecode");
                if ((optionSet != null))
                {
                    return ((recurringappointmentmaster_expansionstatecode)(System.Enum.ToObject(typeof(recurringappointmentmaster_expansionstatecode), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }
        }

        /// <summary>
        /// First day of week for the recurrence pattern.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("firstdayofweek")]
        public System.Nullable<int> FirstDayOfWeek
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("firstdayofweek");
            }

            set
            {
                this.OnPropertyChanging("FirstDayOfWeek");
                this.SetAttributeValue("firstdayofweek", value);
                this.OnPropertyChanged("FirstDayOfWeek");
            }
        }

        /// <summary>
        /// Unique Outlook identifier to correlate recurring appointment series across Exchange mailboxes.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("globalobjectid")]
        public string GlobalObjectId
        {
            get
            {
                return this.GetAttributeValue<string>("globalobjectid");
            }

            set
            {
                this.OnPropertyChanging("GlobalObjectId");
                this.SetAttributeValue("globalobjectid", value);
                this.OnPropertyChanged("GlobalObjectId");
            }
        }

        /// <summary>
        /// Unique identifier of the recurring appointment series for which the recurrence information was updated. 
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("groupid")]
        public Microsoft.Xrm.Sdk.EntityReference GroupId
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("groupid");
            }
        }

        /// <summary>
        /// Unique identifier of the data import or data migration that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> ImportSequenceNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }

            set
            {
                this.OnPropertyChanging("ImportSequenceNumber");
                this.SetAttributeValue("importsequencenumber", value);
                this.OnPropertyChanged("ImportSequenceNumber");
            }
        }

        /// <summary>
        /// Specifies the recurring appointment series to occur on every Nth day of a month. Valid for monthly and yearly recurrence patterns only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("instance")]
        public System.Nullable<recurringappointmentmaster_instance> Instance
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("instance");
                if ((optionSet != null))
                {
                    return ((recurringappointmentmaster_instance)(System.Enum.ToObject(typeof(recurringappointmentmaster_instance), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("Instance");
                if ((value == null))
                {
                    this.SetAttributeValue("instance", null);
                }
                else
                {
                    this.SetAttributeValue("instance", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("Instance");
            }
        }

        /// <summary>
        /// Type of instance of a recurring appointment series.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("instancetypecode")]
        public System.Nullable<recurringappointmentmaster_instancetypecode> InstanceTypeCode
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("instancetypecode");
                if ((optionSet != null))
                {
                    return ((recurringappointmentmaster_instancetypecode)(System.Enum.ToObject(typeof(recurringappointmentmaster_instancetypecode), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }
        }

        /// <summary>
        /// Number of units of a given recurrence type between occurrences.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("interval")]
        public System.Nullable<int> Interval
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("interval");
            }

            set
            {
                this.OnPropertyChanging("Interval");
                this.SetAttributeValue("interval", value);
                this.OnPropertyChanged("Interval");
            }
        }

        /// <summary>
        /// Select whether the recurring appointment is an all-day event to make sure that the required resources are scheduled for the full day.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isalldayevent")]
        public System.Nullable<bool> IsAllDayEvent
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isalldayevent");
            }

            set
            {
                this.OnPropertyChanging("IsAllDayEvent");
                this.SetAttributeValue("isalldayevent", value);
                this.OnPropertyChanged("IsAllDayEvent");
            }
        }

        /// <summary>
        /// Indicates whether the recurring appointment series was billed as part of resolving a case.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isbilled")]
        public System.Nullable<bool> IsBilled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isbilled");
            }

            set
            {
                this.OnPropertyChanging("IsBilled");
                this.SetAttributeValue("isbilled", value);
                this.OnPropertyChanged("IsBilled");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismapiprivate")]
        public System.Nullable<bool> IsMapiPrivate
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ismapiprivate");
            }

            set
            {
                this.OnPropertyChanging("IsMapiPrivate");
                this.SetAttributeValue("ismapiprivate", value);
                this.OnPropertyChanged("IsMapiPrivate");
            }
        }

        /// <summary>
        /// Indicates whether the recurring appointment series should occur after every N months. Valid for monthly recurrence pattern only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isnthmonthly")]
        public System.Nullable<bool> IsNthMonthly
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isnthmonthly");
            }

            set
            {
                this.OnPropertyChanging("IsNthMonthly");
                this.SetAttributeValue("isnthmonthly", value);
                this.OnPropertyChanged("IsNthMonthly");
            }
        }

        /// <summary>
        /// Indicates whether the recurring appointment series should occur after every N years. Valid for yearly recurrence pattern only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isnthyearly")]
        public System.Nullable<bool> IsNthYearly
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isnthyearly");
            }

            set
            {
                this.OnPropertyChanging("IsNthYearly");
                this.SetAttributeValue("isnthyearly", value);
                this.OnPropertyChanged("IsNthYearly");
            }
        }

        /// <summary>
        /// Displays whether or not this is an online meeting.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isonlinemeeting")]
        public System.Nullable<bool> IsOnlineMeeting
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isonlinemeeting");
            }

            set
            {
                this.OnPropertyChanging("IsOnlineMeeting");
                this.SetAttributeValue("isonlinemeeting", value);
                this.OnPropertyChanged("IsOnlineMeeting");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isregenerate")]
        public System.Nullable<bool> IsRegenerate
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isregenerate");
            }

            set
            {
                this.OnPropertyChanging("IsRegenerate");
                this.SetAttributeValue("isregenerate", value);
                this.OnPropertyChanged("IsRegenerate");
            }
        }

        /// <summary>
        /// Indicates whether the activity is a regular activity type or event type.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isregularactivity")]
        public System.Nullable<bool> IsRegularActivity
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isregularactivity");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isunsafe")]
        public System.Nullable<int> IsUnsafe
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("isunsafe");
            }
        }

        /// <summary>
        /// Indicates whether the weekly recurrence pattern is a daily weekday pattern. Valid for weekly recurrence pattern only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isweekdaypattern")]
        public System.Nullable<bool> IsWeekDayPattern
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isweekdaypattern");
            }

            set
            {
                this.OnPropertyChanging("IsWeekDayPattern");
                this.SetAttributeValue("isweekdaypattern", value);
                this.OnPropertyChanged("IsWeekDayPattern");
            }
        }

        /// <summary>
        /// Indicates whether the recurring appointment series was created from a workflow rule.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isworkflowcreated")]
        public System.Nullable<bool> IsWorkflowCreated
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isworkflowcreated");
            }

            set
            {
                this.OnPropertyChanging("IsWorkflowCreated");
                this.SetAttributeValue("isworkflowcreated", value);
                this.OnPropertyChanged("IsWorkflowCreated");
            }
        }

        /// <summary>
        /// Date of last expanded instance of a recurring appointment series.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastexpandedinstancedate")]
        public System.Nullable<System.DateTime> LastExpandedInstanceDate
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastexpandedinstancedate");
            }
        }

        /// <summary>
        /// Type the location where the recurring appointment will take place, such as a conference room or customer office.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("location")]
        public string Location
        {
            get
            {
                return this.GetAttributeValue<string>("location");
            }

            set
            {
                this.OnPropertyChanging("Location");
                this.SetAttributeValue("location", value);
                this.OnPropertyChanged("Location");
            }
        }

        /// <summary>
        /// Shows who last updated the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        /// <summary>
        /// Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> ModifiedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Shows who last updated the record on behalf of another user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
        }

        /// <summary>
        /// Indicates the month of the year for the recurrence pattern.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("monthofyear")]
        public System.Nullable<recurrencerule_monthofyear> MonthOfYear
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("monthofyear");
                if ((optionSet != null))
                {
                    return ((recurrencerule_monthofyear)(System.Enum.ToObject(typeof(recurrencerule_monthofyear), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("MonthOfYear");
                if ((value == null))
                {
                    this.SetAttributeValue("monthofyear", null);
                }
                else
                {
                    this.SetAttributeValue("monthofyear", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("MonthOfYear");
            }
        }

        /// <summary>
        /// Date of the next expanded instance of a recurring appointment series.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("nextexpansioninstancedate")]
        public System.Nullable<System.DateTime> NextExpansionInstanceDate
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("nextexpansioninstancedate");
            }
        }

        /// <summary>
        /// Number of appointment occurrences in a recurring appointment series.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("occurrences")]
        public System.Nullable<int> Occurrences
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("occurrences");
            }

            set
            {
                this.OnPropertyChanging("Occurrences");
                this.SetAttributeValue("occurrences", value);
                this.OnPropertyChanged("Occurrences");
            }
        }

        /// <summary>
        /// Shows the online meeting chat id.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("onlinemeetingchatid")]
        public string OnlineMeetingChatId
        {
            get
            {
                return this.GetAttributeValue<string>("onlinemeetingchatid");
            }

            set
            {
                this.OnPropertyChanging("OnlineMeetingChatId");
                this.SetAttributeValue("onlinemeetingchatid", value);
                this.OnPropertyChanged("OnlineMeetingChatId");
            }
        }

        /// <summary>
        /// Shows the online meeting id.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("onlinemeetingid")]
        public string OnlineMeetingId
        {
            get
            {
                return this.GetAttributeValue<string>("onlinemeetingid");
            }

            set
            {
                this.OnPropertyChanging("OnlineMeetingId");
                this.SetAttributeValue("onlinemeetingid", value);
                this.OnPropertyChanged("OnlineMeetingId");
            }
        }

        /// <summary>
        /// Shows the online meeting join url.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("onlinemeetingjoinurl")]
        public string OnlineMeetingJoinUrl
        {
            get
            {
                return this.GetAttributeValue<string>("onlinemeetingjoinurl");
            }

            set
            {
                this.OnPropertyChanging("OnlineMeetingJoinUrl");
                this.SetAttributeValue("onlinemeetingjoinurl", value);
                this.OnPropertyChanged("OnlineMeetingJoinUrl");
            }
        }

        /// <summary>
        /// Displays the online meeting type.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("onlinemeetingtype")]
        public System.Nullable<OnlineMeetingType> OnlineMeetingType
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("onlinemeetingtype");
                if ((optionSet != null))
                {
                    return ((OnlineMeetingType)(System.Enum.ToObject(typeof(OnlineMeetingType), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("OnlineMeetingType");
                if ((value == null))
                {
                    this.SetAttributeValue("onlinemeetingtype", null);
                }
                else
                {
                    this.SetAttributeValue("onlinemeetingtype", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("OnlineMeetingType");
            }
        }

        /// <summary>
        /// Enter the account, contact, lead, user, or other equipment resources that are not needed at the recurring appointment, but can optionally attend.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("optionalattendees")]
        public System.Collections.Generic.IEnumerable<ActivityParty> OptionalAttendees
        {
            get
            {
                Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("optionalattendees");
                if (((collection != null) && (collection.Entities != null)))
                {
                    return System.Linq.Enumerable.Cast<ActivityParty>(collection.Entities);
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("OptionalAttendees");
                if ((value == null))
                {
                    this.SetAttributeValue("optionalattendees", value);
                }
                else
                {
                    this.SetAttributeValue("optionalattendees", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
                }

                this.OnPropertyChanged("OptionalAttendees");
            }
        }

        /// <summary>
        /// Enter the user who is in charge of coordinating or leading the recurring appointment to make sure the appointment is displayed in the user's My Activities view.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizer")]
        public System.Collections.Generic.IEnumerable<ActivityParty> Organizer
        {
            get
            {
                Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("organizer");
                if (((collection != null) && (collection.Entities != null)))
                {
                    return System.Linq.Enumerable.Cast<ActivityParty>(collection.Entities);
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("Organizer");
                if ((value == null))
                {
                    this.SetAttributeValue("organizer", value);
                }
                else
                {
                    this.SetAttributeValue("organizer", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
                }

                this.OnPropertyChanged("Organizer");
            }
        }

        /// <summary>
        /// Unique identifier of the Microsoft Office Outlook recurring appointment series owner that correlates to the PR_OWNER_APPT_ID MAPI property.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outlookownerapptid")]
        public System.Nullable<int> OutlookOwnerApptId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("outlookownerapptid");
            }

            set
            {
                this.OnPropertyChanging("OutlookOwnerApptId");
                this.SetAttributeValue("outlookownerapptid", value);
                this.OnPropertyChanged("OutlookOwnerApptId");
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> OverriddenCreatedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }

            set
            {
                this.OnPropertyChanging("OverriddenCreatedOn");
                this.SetAttributeValue("overriddencreatedon", value);
                this.OnPropertyChanged("OverriddenCreatedOn");
            }
        }

        /// <summary>
        /// Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference OwnerId
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }

            set
            {
                this.OnPropertyChanging("OwnerId");
                this.SetAttributeValue("ownerid", value);
                this.OnPropertyChanged("OwnerId");
            }
        }

        /// <summary>
        /// Unique identifier of the business unit that owns the recurring appointment series.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
        }

        /// <summary>
        /// Unique identifier of the team who owns the recurring appointment series.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference OwningTeam
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier of the user who owns the recurring appointment series.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference OwningUser
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// End date of the recurrence range.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("patternenddate")]
        public System.Nullable<System.DateTime> PatternEndDate
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("patternenddate");
            }

            set
            {
                this.OnPropertyChanging("PatternEndDate");
                this.SetAttributeValue("patternenddate", value);
                this.OnPropertyChanged("PatternEndDate");
            }
        }

        /// <summary>
        /// Select the type of end date for the recurring appointment, such as no end date or the number of occurrences.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("patternendtype")]
        public System.Nullable<recurringappointmentmaster_patternendtype> PatternEndType
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("patternendtype");
                if ((optionSet != null))
                {
                    return ((recurringappointmentmaster_patternendtype)(System.Enum.ToObject(typeof(recurringappointmentmaster_patternendtype), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("PatternEndType");
                if ((value == null))
                {
                    this.SetAttributeValue("patternendtype", null);
                }
                else
                {
                    this.SetAttributeValue("patternendtype", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("PatternEndType");
            }
        }

        /// <summary>
        /// Start date of the recurrence range.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("patternstartdate")]
        public System.Nullable<System.DateTime> PatternStartDate
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("patternstartdate");
            }

            set
            {
                this.OnPropertyChanging("PatternStartDate");
                this.SetAttributeValue("patternstartdate", value);
                this.OnPropertyChanged("PatternStartDate");
            }
        }

        /// <summary>
        /// Select the priority so that preferred customers or critical issues are handled quickly.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("prioritycode")]
        public System.Nullable<recurringappointmentmaster_prioritycode> PriorityCode
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("prioritycode");
                if ((optionSet != null))
                {
                    return ((recurringappointmentmaster_prioritycode)(System.Enum.ToObject(typeof(recurringappointmentmaster_prioritycode), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("PriorityCode");
                if ((value == null))
                {
                    this.SetAttributeValue("prioritycode", null);
                }
                else
                {
                    this.SetAttributeValue("prioritycode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("PriorityCode");
            }
        }

        /// <summary>
        /// Shows the ID of the process.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
        public System.Nullable<System.Guid> ProcessId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
            }

            set
            {
                this.OnPropertyChanging("ProcessId");
                this.SetAttributeValue("processid", value);
                this.OnPropertyChanged("ProcessId");
            }
        }

        /// <summary>
        /// Select the pattern type for the recurring appointment to indicate whether the appointment occurs daily, weekly, monthly, or yearly.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recurrencepatterntype")]
        public System.Nullable<recurringappointmentmaster_recurrencepatterntype> RecurrencePatternType
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("recurrencepatterntype");
                if ((optionSet != null))
                {
                    return ((recurringappointmentmaster_recurrencepatterntype)(System.Enum.ToObject(typeof(recurringappointmentmaster_recurrencepatterntype), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("RecurrencePatternType");
                if ((value == null))
                {
                    this.SetAttributeValue("recurrencepatterntype", null);
                }
                else
                {
                    this.SetAttributeValue("recurrencepatterntype", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("RecurrencePatternType");
            }
        }

        /// <summary>
        /// Unique identifier of the object with which the recurring appointment series is associated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        public Microsoft.Xrm.Sdk.EntityReference RegardingObjectId
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("regardingobjectid");
            }

            set
            {
                this.OnPropertyChanging("RegardingObjectId");
                this.SetAttributeValue("regardingobjectid", value);
                this.OnPropertyChanged("RegardingObjectId");
            }
        }

        /// <summary>
        /// Enter the account, contact, lead, user, or other equipment resources that are required to attend the recurring appointment.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("requiredattendees")]
        public System.Collections.Generic.IEnumerable<ActivityParty> RequiredAttendees
        {
            get
            {
                Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("requiredattendees");
                if (((collection != null) && (collection.Entities != null)))
                {
                    return System.Linq.Enumerable.Cast<ActivityParty>(collection.Entities);
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("RequiredAttendees");
                if ((value == null))
                {
                    this.SetAttributeValue("requiredattendees", value);
                }
                else
                {
                    this.SetAttributeValue("requiredattendees", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
                }

                this.OnPropertyChanged("RequiredAttendees");
            }
        }

        /// <summary>
        /// Unique identifier of the recurrence rule that is associated with the recurring appointment series.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ruleid")]
        public Microsoft.Xrm.Sdk.EntityReference RuleId
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ruleid");
            }
        }

        /// <summary>
        /// Scheduled end time of the recurring appointment series.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduledend")]
        public System.Nullable<System.DateTime> ScheduledEnd
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduledend");
            }
        }

        /// <summary>
        /// Scheduled start time of the recurring appointment series.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduledstart")]
        public System.Nullable<System.DateTime> ScheduledStart
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduledstart");
            }
        }

        /// <summary>
        /// Indicates whether the recurring appointment series is active or inactive.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("seriesstatus")]
        public System.Nullable<bool> SeriesStatus
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("seriesstatus");
            }

            set
            {
                this.OnPropertyChanging("SeriesStatus");
                this.SetAttributeValue("seriesstatus", value);
                this.OnPropertyChanged("SeriesStatus");
            }
        }

        /// <summary>
        /// service_recurringappointmentmasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serviceid")]
        public Microsoft.Xrm.Sdk.EntityReference ServiceId
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("serviceid");
            }

            set
            {
                this.OnPropertyChanging("ServiceId");
                this.SetAttributeValue("serviceid", value);
                this.OnPropertyChanged("ServiceId");
            }
        }

        /// <summary>
        /// Shows the date and time by which the activities are sorted.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sortdate")]
        public System.Nullable<System.DateTime> SortDate
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("sortdate");
            }

            set
            {
                this.OnPropertyChanging("SortDate");
                this.SetAttributeValue("sortdate", value);
                this.OnPropertyChanged("SortDate");
            }
        }

        /// <summary>
        /// Shows the ID of the stage.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
        public System.Nullable<System.Guid> StageId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
            }

            set
            {
                this.OnPropertyChanging("StageId");
                this.SetAttributeValue("stageid", value);
                this.OnPropertyChanged("StageId");
            }
        }

        /// <summary>
        /// Start time of the recurring appointment series.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("starttime")]
        public System.Nullable<System.DateTime> StartTime
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("starttime");
            }

            set
            {
                this.OnPropertyChanging("StartTime");
                this.SetAttributeValue("starttime", value);
                this.OnPropertyChanged("StartTime");
            }
        }

        /// <summary>
        /// Shows whether the recurring appointment is open, scheduled, completed, or canceled. Completed and canceled appointments are read-only and can't be edited.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public System.Nullable<recurringappointmentmaster_statecode> StateCode
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
                if ((optionSet != null))
                {
                    return ((recurringappointmentmaster_statecode)(System.Enum.ToObject(typeof(recurringappointmentmaster_statecode), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("StateCode");
                if ((value == null))
                {
                    this.SetAttributeValue("statecode", null);
                }
                else
                {
                    this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("StateCode");
            }
        }

        /// <summary>
        /// Select the recurring appointment's status.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public System.Nullable<recurringappointmentmaster_statuscode> StatusCode
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
                if ((optionSet != null))
                {
                    return ((recurringappointmentmaster_statuscode)(System.Enum.ToObject(typeof(recurringappointmentmaster_statuscode), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("StatusCode");
                if ((value == null))
                {
                    this.SetAttributeValue("statuscode", null);
                }
                else
                {
                    this.SetAttributeValue("statuscode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("StatusCode");
            }
        }

        /// <summary>
        /// Type a subcategory to identify the recurring appointment type and relate the activity to a specific product, sales region, business group, or other function.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subcategory")]
        public string Subcategory
        {
            get
            {
                return this.GetAttributeValue<string>("subcategory");
            }

            set
            {
                this.OnPropertyChanging("Subcategory");
                this.SetAttributeValue("subcategory", value);
                this.OnPropertyChanged("Subcategory");
            }
        }

        /// <summary>
        /// Type a short description about the objective or primary topic of the recurring appointment.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subject")]
        public string Subject
        {
            get
            {
                return this.GetAttributeValue<string>("subject");
            }

            set
            {
                this.OnPropertyChanging("Subject");
                this.SetAttributeValue("subject", value);
                this.OnPropertyChanged("Subject");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subscriptionid")]
        public System.Nullable<System.Guid> SubscriptionId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("subscriptionid");
            }

            set
            {
                this.OnPropertyChanging("SubscriptionId");
                this.SetAttributeValue("subscriptionid", value);
                this.OnPropertyChanged("SubscriptionId");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> TimeZoneRuleVersionNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }

            set
            {
                this.OnPropertyChanging("TimeZoneRuleVersionNumber");
                this.SetAttributeValue("timezoneruleversionnumber", value);
                this.OnPropertyChanged("TimeZoneRuleVersionNumber");
            }
        }

        /// <summary>
        /// Choose the local currency for the record to make sure budgets are reported in the correct currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
        public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
            }

            set
            {
                this.OnPropertyChanging("TransactionCurrencyId");
                this.SetAttributeValue("transactioncurrencyid", value);
                this.OnPropertyChanged("TransactionCurrencyId");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
        public string TraversedPath
        {
            get
            {
                return this.GetAttributeValue<string>("traversedpath");
            }

            set
            {
                this.OnPropertyChanging("TraversedPath");
                this.SetAttributeValue("traversedpath", value);
                this.OnPropertyChanged("TraversedPath");
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> UTCConversionTimeZoneCode
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }

            set
            {
                this.OnPropertyChanging("UTCConversionTimeZoneCode");
                this.SetAttributeValue("utcconversiontimezonecode", value);
                this.OnPropertyChanged("UTCConversionTimeZoneCode");
            }
        }

        /// <summary>
        /// 
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> VersionNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N cvt_recurringappointmentmaster_serviceappointment_recurringappointmentsmaster
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cvt_recurringappointmentmaster_serviceappointment_recurringappointmentsmaster")]
        public System.Collections.Generic.IEnumerable<ServiceAppointment> cvt_recurringappointmentmaster_serviceappointment_recurringappointmentsmaster
        {
            get
            {
                return this.GetRelatedEntities<ServiceAppointment>("cvt_recurringappointmentmaster_serviceappointment_recurringappointmentsmaster", null);
            }

            set
            {
                this.OnPropertyChanging("cvt_recurringappointmentmaster_serviceappointment_recurringappointmentsmaster");
                this.SetRelatedEntities<ServiceAppointment>("cvt_recurringappointmentmaster_serviceappointment_recurringappointmentsmaster", null, value);
                this.OnPropertyChanged("cvt_recurringappointmentmaster_serviceappointment_recurringappointmentsmaster");
            }
        }

        /// <summary>
        /// 1:N recurringappointmentmaster_activity_parties
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("recurringappointmentmaster_activity_parties")]
        public System.Collections.Generic.IEnumerable<ActivityParty> recurringappointmentmaster_activity_parties
        {
            get
            {
                return this.GetRelatedEntities<ActivityParty>("recurringappointmentmaster_activity_parties", null);
            }

            set
            {
                this.OnPropertyChanging("recurringappointmentmaster_activity_parties");
                this.SetRelatedEntities<ActivityParty>("recurringappointmentmaster_activity_parties", null, value);
                this.OnPropertyChanged("recurringappointmentmaster_activity_parties");
            }
        }

        /// <summary>
        /// 1:N RecurringAppointmentMaster_Annotation
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("RecurringAppointmentMaster_Annotation")]
        public System.Collections.Generic.IEnumerable<Annotation> RecurringAppointmentMaster_Annotation
        {
            get
            {
                return this.GetRelatedEntities<Annotation>("RecurringAppointmentMaster_Annotation", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringAppointmentMaster_Annotation");
                this.SetRelatedEntities<Annotation>("RecurringAppointmentMaster_Annotation", null, value);
                this.OnPropertyChanged("RecurringAppointmentMaster_Annotation");
            }
        }

        /// <summary>
        /// 1:N recurringappointmentmaster_appointment
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("recurringappointmentmaster_appointment")]
        public System.Collections.Generic.IEnumerable<Appointment> recurringappointmentmaster_appointment
        {
            get
            {
                return this.GetRelatedEntities<Appointment>("recurringappointmentmaster_appointment", null);
            }

            set
            {
                this.OnPropertyChanging("recurringappointmentmaster_appointment");
                this.SetRelatedEntities<Appointment>("recurringappointmentmaster_appointment", null, value);
                this.OnPropertyChanged("recurringappointmentmaster_appointment");
            }
        }

        /// <summary>
        /// 1:N RecurringAppointmentMaster_AsyncOperations
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("RecurringAppointmentMaster_AsyncOperations")]
        public System.Collections.Generic.IEnumerable<SystemJob> SystemJobs_Regarding
        {
            get
            {
                return this.GetRelatedEntities<SystemJob>("RecurringAppointmentMaster_AsyncOperations", null);
            }

            set
            {
                this.OnPropertyChanging("SystemJobs_Regarding");
                this.SetRelatedEntities<SystemJob>("RecurringAppointmentMaster_AsyncOperations", null, value);
                this.OnPropertyChanged("SystemJobs_Regarding");
            }
        }

        /// <summary>
        /// 1:N RecurringAppointmentMaster_BulkDeleteFailures
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("RecurringAppointmentMaster_BulkDeleteFailures")]
        public System.Collections.Generic.IEnumerable<BulkDeleteFailure> BulkDeleteFailures_Name
        {
            get
            {
                return this.GetRelatedEntities<BulkDeleteFailure>("RecurringAppointmentMaster_BulkDeleteFailures", null);
            }

            set
            {
                this.OnPropertyChanging("BulkDeleteFailures_Name");
                this.SetRelatedEntities<BulkDeleteFailure>("RecurringAppointmentMaster_BulkDeleteFailures", null, value);
                this.OnPropertyChanged("BulkDeleteFailures_Name");
            }
        }

        /// <summary>
        /// 1:N recurringappointmentmaster_campaignresponse
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("recurringappointmentmaster_campaignresponse")]
        public System.Collections.Generic.IEnumerable<CampaignResponse> CampaignResponses_OriginatingActivity
        {
            get
            {
                return this.GetRelatedEntities<CampaignResponse>("recurringappointmentmaster_campaignresponse", null);
            }

            set
            {
                this.OnPropertyChanging("CampaignResponses_OriginatingActivity");
                this.SetRelatedEntities<CampaignResponse>("recurringappointmentmaster_campaignresponse", null, value);
                this.OnPropertyChanged("CampaignResponses_OriginatingActivity");
            }
        }

        /// <summary>
        /// 1:N recurringappointmentmaster_connections1
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("recurringappointmentmaster_connections1")]
        public System.Collections.Generic.IEnumerable<Connection> Connections_ConnectedFrom
        {
            get
            {
                return this.GetRelatedEntities<Connection>("recurringappointmentmaster_connections1", null);
            }

            set
            {
                this.OnPropertyChanging("Connections_ConnectedFrom");
                this.SetRelatedEntities<Connection>("recurringappointmentmaster_connections1", null, value);
                this.OnPropertyChanged("Connections_ConnectedFrom");
            }
        }

        /// <summary>
        /// 1:N recurringappointmentmaster_connections2
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("recurringappointmentmaster_connections2")]
        public System.Collections.Generic.IEnumerable<Connection> Connections_ConnectedTo
        {
            get
            {
                return this.GetRelatedEntities<Connection>("recurringappointmentmaster_connections2", null);
            }

            set
            {
                this.OnPropertyChanging("Connections_ConnectedTo");
                this.SetRelatedEntities<Connection>("recurringappointmentmaster_connections2", null, value);
                this.OnPropertyChanged("Connections_ConnectedTo");
            }
        }

        /// <summary>
        /// 1:N recurringappointmentmaster_principalobjectattributeaccess
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("recurringappointmentmaster_principalobjectattributeaccess")]
        public System.Collections.Generic.IEnumerable<FieldSharing> FieldSharing_EntityInstance
        {
            get
            {
                return this.GetRelatedEntities<FieldSharing>("recurringappointmentmaster_principalobjectattributeaccess", null);
            }

            set
            {
                this.OnPropertyChanging("FieldSharing_EntityInstance");
                this.SetRelatedEntities<FieldSharing>("recurringappointmentmaster_principalobjectattributeaccess", null, value);
                this.OnPropertyChanged("FieldSharing_EntityInstance");
            }
        }

        /// <summary>
        /// 1:N RecurringAppointmentMaster_ProcessSessions
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("RecurringAppointmentMaster_ProcessSessions")]
        public System.Collections.Generic.IEnumerable<ProcessSession> ProcessSessions_Regarding
        {
            get
            {
                return this.GetRelatedEntities<ProcessSession>("RecurringAppointmentMaster_ProcessSessions", null);
            }

            set
            {
                this.OnPropertyChanging("ProcessSessions_Regarding");
                this.SetRelatedEntities<ProcessSession>("RecurringAppointmentMaster_ProcessSessions", null, value);
                this.OnPropertyChanged("ProcessSessions_Regarding");
            }
        }

        /// <summary>
        /// 1:N RecurringAppointmentMaster_QueueItem
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("RecurringAppointmentMaster_QueueItem")]
        public System.Collections.Generic.IEnumerable<QueueItem> QueueItems_Object
        {
            get
            {
                return this.GetRelatedEntities<QueueItem>("RecurringAppointmentMaster_QueueItem", null);
            }

            set
            {
                this.OnPropertyChanging("QueueItems_Object");
                this.SetRelatedEntities<QueueItem>("RecurringAppointmentMaster_QueueItem", null, value);
                this.OnPropertyChanged("QueueItems_Object");
            }
        }

        /// <summary>
        /// 1:N RecurringAppointmentMaster_SyncErrors
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("RecurringAppointmentMaster_SyncErrors")]
        public System.Collections.Generic.IEnumerable<SyncError> SyncErrors_Record
        {
            get
            {
                return this.GetRelatedEntities<SyncError>("RecurringAppointmentMaster_SyncErrors", null);
            }

            set
            {
                this.OnPropertyChanging("SyncErrors_Record");
                this.SetRelatedEntities<SyncError>("RecurringAppointmentMaster_SyncErrors", null, value);
                this.OnPropertyChanged("SyncErrors_Record");
            }
        }

        /// <summary>
        /// 1:N userentityinstancedata_recurringappointmentmaster
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("userentityinstancedata_recurringappointmentmaster")]
        public System.Collections.Generic.IEnumerable<UserEntityInstanceData> UserEntityInstanceData_ObjectId
        {
            get
            {
                return this.GetRelatedEntities<UserEntityInstanceData>("userentityinstancedata_recurringappointmentmaster", null);
            }

            set
            {
                this.OnPropertyChanging("UserEntityInstanceData_ObjectId");
                this.SetRelatedEntities<UserEntityInstanceData>("userentityinstancedata_recurringappointmentmaster", null, value);
                this.OnPropertyChanged("UserEntityInstanceData_ObjectId");
            }
        }

        /// <summary>
        /// N:1 Account_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Account_RecurringAppointmentMasters")]
        public Account Account_RecurringAppointmentMasters
        {
            get
            {
                return this.GetRelatedEntity<Account>("Account_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("Account_RecurringAppointmentMasters");
                this.SetRelatedEntity<Account>("Account_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("Account_RecurringAppointmentMasters");
            }
        }

        /// <summary>
        /// N:1 activity_pointer_recurringappointmentmaster
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("activity_pointer_recurringappointmentmaster")]
        public ActivityPointer activity_pointer_recurringappointmentmaster
        {
            get
            {
                return this.GetRelatedEntity<ActivityPointer>("activity_pointer_recurringappointmentmaster", null);
            }

            set
            {
                this.OnPropertyChanging("activity_pointer_recurringappointmentmaster");
                this.SetRelatedEntity<ActivityPointer>("activity_pointer_recurringappointmentmaster", null, value);
                this.OnPropertyChanged("activity_pointer_recurringappointmentmaster");
            }
        }

        /// <summary>
        /// N:1 bookableresourcebooking_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bookableresourcebooking_RecurringAppointmentMasters")]
        public BookableResourceBooking RecurringReserveResources_Regarding
        {
            get
            {
                return this.GetRelatedEntity<BookableResourceBooking>("bookableresourcebooking_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding");
                this.SetRelatedEntity<BookableResourceBooking>("bookableresourcebooking_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding");
            }
        }

        /// <summary>
        /// N:1 bookableresourcebookingheader_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bookableresourcebookingheader_RecurringAppointmentMasters")]
        public BookableResourceBookingHeader RecurringReserveResources_Regarding2
        {
            get
            {
                return this.GetRelatedEntity<BookableResourceBookingHeader>("bookableresourcebookingheader_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding2");
                this.SetRelatedEntity<BookableResourceBookingHeader>("bookableresourcebookingheader_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding2");
            }
        }

        /// <summary>
        /// N:1 BulkOperation_RecurringAppointmentMaster
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("BulkOperation_RecurringAppointmentMaster")]
        public QuickCampaign RecurringReserveResources_Regarding3
        {
            get
            {
                return this.GetRelatedEntity<QuickCampaign>("BulkOperation_RecurringAppointmentMaster", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding3");
                this.SetRelatedEntity<QuickCampaign>("BulkOperation_RecurringAppointmentMaster", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding3");
            }
        }

        /// <summary>
        /// N:1 business_unit_recurringappointmentmaster_activities
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_recurringappointmentmaster_activities")]
        public BusinessUnit business_unit_recurringappointmentmaster_activities
        {
            get
            {
                return this.GetRelatedEntity<BusinessUnit>("business_unit_recurringappointmentmaster_activities", null);
            }
        }

        /// <summary>
        /// N:1 Campaign_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Campaign_RecurringAppointmentMasters")]
        public Campaign RecurringReserveResources_Regarding4
        {
            get
            {
                return this.GetRelatedEntity<Campaign>("Campaign_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding4");
                this.SetRelatedEntity<Campaign>("Campaign_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding4");
            }
        }

        /// <summary>
        /// N:1 CampaignActivity_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("CampaignActivity_RecurringAppointmentMasters")]
        public CampaignActivity RecurringReserveResources_Regarding5
        {
            get
            {
                return this.GetRelatedEntity<CampaignActivity>("CampaignActivity_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding5");
                this.SetRelatedEntity<CampaignActivity>("CampaignActivity_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding5");
            }
        }

        /// <summary>
        /// N:1 Contact_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contact_RecurringAppointmentMasters")]
        public Contact Contact_RecurringAppointmentMasters
        {
            get
            {
                return this.GetRelatedEntity<Contact>("Contact_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("Contact_RecurringAppointmentMasters");
                this.SetRelatedEntity<Contact>("Contact_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("Contact_RecurringAppointmentMasters");
            }
        }

        /// <summary>
        /// N:1 Contract_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contract_RecurringAppointmentMasters")]
        public Contract RecurringReserveResources_Regarding6
        {
            get
            {
                return this.GetRelatedEntity<Contract>("Contract_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding6");
                this.SetRelatedEntity<Contract>("Contract_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding6");
            }
        }

        /// <summary>
        /// N:1 crme_person_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("crme_person_RecurringAppointmentMasters")]
        public crme_person crme_person_RecurringAppointmentMasters
        {
            get
            {
                return this.GetRelatedEntity<crme_person>("crme_person_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("crme_person_RecurringAppointmentMasters");
                this.SetRelatedEntity<crme_person>("crme_person_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("crme_person_RecurringAppointmentMasters");
            }
        }

        /// <summary>
        /// N:1 crme_personxref_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("crme_personxref_RecurringAppointmentMasters")]
        public PersonXRef RecurringReserveResources_Regarding7
        {
            get
            {
                return this.GetRelatedEntity<PersonXRef>("crme_personxref_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding7");
                this.SetRelatedEntity<PersonXRef>("crme_personxref_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding7");
            }
        }

        /// <summary>
        /// N:1 cvt_activitypartylist_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cvt_activitypartylist_RecurringAppointmentMasters")]
        public ActivityPartyList RecurringReserveResources_Regarding8
        {
            get
            {
                return this.GetRelatedEntity<ActivityPartyList>("cvt_activitypartylist_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding8");
                this.SetRelatedEntity<ActivityPartyList>("cvt_activitypartylist_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding8");
            }
        }

        /// <summary>
        /// N:1 cvt_componenttype_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cvt_componenttype_RecurringAppointmentMasters")]
        public cvt_componenttype cvt_componenttype_RecurringAppointmentMasters
        {
            get
            {
                return this.GetRelatedEntity<cvt_componenttype>("cvt_componenttype_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("cvt_componenttype_RecurringAppointmentMasters");
                this.SetRelatedEntity<cvt_componenttype>("cvt_componenttype_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("cvt_componenttype_RecurringAppointmentMasters");
            }
        }

        /// <summary>
        /// N:1 cvt_emailautomation_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cvt_emailautomation_RecurringAppointmentMasters")]
        public cvt_emailautomation cvt_emailautomation_RecurringAppointmentMasters
        {
            get
            {
                return this.GetRelatedEntity<cvt_emailautomation>("cvt_emailautomation_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("cvt_emailautomation_RecurringAppointmentMasters");
                this.SetRelatedEntity<cvt_emailautomation>("cvt_emailautomation_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("cvt_emailautomation_RecurringAppointmentMasters");
            }
        }

        /// <summary>
        /// N:1 cvt_facilityapproval_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cvt_facilityapproval_RecurringAppointmentMasters")]
        public cvt_facilityapproval cvt_facilityapproval_RecurringAppointmentMasters
        {
            get
            {
                return this.GetRelatedEntity<cvt_facilityapproval>("cvt_facilityapproval_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("cvt_facilityapproval_RecurringAppointmentMasters");
                this.SetRelatedEntity<cvt_facilityapproval>("cvt_facilityapproval_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("cvt_facilityapproval_RecurringAppointmentMasters");
            }
        }

        /// <summary>
        /// N:1 cvt_grouppatient_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cvt_grouppatient_RecurringAppointmentMasters")]
        public GroupPatient RecurringReserveResources_Regarding9
        {
            get
            {
                return this.GetRelatedEntity<GroupPatient>("cvt_grouppatient_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding9");
                this.SetRelatedEntity<GroupPatient>("cvt_grouppatient_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding9");
            }
        }

        /// <summary>
        /// N:1 cvt_kpi_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cvt_kpi_RecurringAppointmentMasters")]
        public KPI RecurringReserveResources_Regarding10
        {
            get
            {
                return this.GetRelatedEntity<KPI>("cvt_kpi_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding10");
                this.SetRelatedEntity<KPI>("cvt_kpi_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding10");
            }
        }

        /// <summary>
        /// N:1 cvt_manufacturer_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cvt_manufacturer_RecurringAppointmentMasters")]
        public cvt_manufacturer cvt_manufacturer_RecurringAppointmentMasters
        {
            get
            {
                return this.GetRelatedEntity<cvt_manufacturer>("cvt_manufacturer_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("cvt_manufacturer_RecurringAppointmentMasters");
                this.SetRelatedEntity<cvt_manufacturer>("cvt_manufacturer_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("cvt_manufacturer_RecurringAppointmentMasters");
            }
        }

        /// <summary>
        /// N:1 cvt_mastertsa_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cvt_mastertsa_RecurringAppointmentMasters")]
        public cvt_mastertsa cvt_mastertsa_RecurringAppointmentMasters
        {
            get
            {
                return this.GetRelatedEntity<cvt_mastertsa>("cvt_mastertsa_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("cvt_mastertsa_RecurringAppointmentMasters");
                this.SetRelatedEntity<cvt_mastertsa>("cvt_mastertsa_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("cvt_mastertsa_RecurringAppointmentMasters");
            }
        }

        /// <summary>
        /// N:1 cvt_model_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cvt_model_RecurringAppointmentMasters")]
        public cvt_model cvt_model_RecurringAppointmentMasters
        {
            get
            {
                return this.GetRelatedEntity<cvt_model>("cvt_model_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("cvt_model_RecurringAppointmentMasters");
                this.SetRelatedEntity<cvt_model>("cvt_model_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("cvt_model_RecurringAppointmentMasters");
            }
        }

        /// <summary>
        /// N:1 cvt_nonvaemail_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cvt_nonvaemail_RecurringAppointmentMasters")]
        public cvt_nonvaemail cvt_nonvaemail_RecurringAppointmentMasters
        {
            get
            {
                return this.GetRelatedEntity<cvt_nonvaemail>("cvt_nonvaemail_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("cvt_nonvaemail_RecurringAppointmentMasters");
                this.SetRelatedEntity<cvt_nonvaemail>("cvt_nonvaemail_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("cvt_nonvaemail_RecurringAppointmentMasters");
            }
        }

        /// <summary>
        /// N:1 cvt_oncallentry_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cvt_oncallentry_RecurringAppointmentMasters")]
        public OnCallEntry RecurringReserveResources_Regarding11
        {
            get
            {
                return this.GetRelatedEntity<OnCallEntry>("cvt_oncallentry_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding11");
                this.SetRelatedEntity<OnCallEntry>("cvt_oncallentry_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding11");
            }
        }

        /// <summary>
        /// N:1 cvt_participatingsite_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cvt_participatingsite_RecurringAppointmentMasters")]
        public cvt_participatingsite cvt_participatingsite_RecurringAppointmentMasters
        {
            get
            {
                return this.GetRelatedEntity<cvt_participatingsite>("cvt_participatingsite_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("cvt_participatingsite_RecurringAppointmentMasters");
                this.SetRelatedEntity<cvt_participatingsite>("cvt_participatingsite_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("cvt_participatingsite_RecurringAppointmentMasters");
            }
        }

        /// <summary>
        /// N:1 cvt_patientresourcegroup_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cvt_patientresourcegroup_RecurringAppointmentMasters")]
        public cvt_patientresourcegroup cvt_patientresourcegroup_RecurringAppointmentMasters
        {
            get
            {
                return this.GetRelatedEntity<cvt_patientresourcegroup>("cvt_patientresourcegroup_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("cvt_patientresourcegroup_RecurringAppointmentMasters");
                this.SetRelatedEntity<cvt_patientresourcegroup>("cvt_patientresourcegroup_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("cvt_patientresourcegroup_RecurringAppointmentMasters");
            }
        }

        /// <summary>
        /// N:1 cvt_ppefeedback_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cvt_ppefeedback_RecurringAppointmentMasters")]
        public cvt_ppefeedback cvt_ppefeedback_RecurringAppointmentMasters
        {
            get
            {
                return this.GetRelatedEntity<cvt_ppefeedback>("cvt_ppefeedback_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("cvt_ppefeedback_RecurringAppointmentMasters");
                this.SetRelatedEntity<cvt_ppefeedback>("cvt_ppefeedback_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("cvt_ppefeedback_RecurringAppointmentMasters");
            }
        }

        /// <summary>
        /// N:1 cvt_ppereview_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cvt_ppereview_RecurringAppointmentMasters")]
        public cvt_ppereview cvt_ppereview_RecurringAppointmentMasters
        {
            get
            {
                return this.GetRelatedEntity<cvt_ppereview>("cvt_ppereview_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("cvt_ppereview_RecurringAppointmentMasters");
                this.SetRelatedEntity<cvt_ppereview>("cvt_ppereview_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("cvt_ppereview_RecurringAppointmentMasters");
            }
        }

        /// <summary>
        /// N:1 cvt_processtrigger_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cvt_processtrigger_RecurringAppointmentMasters")]
        public ProcessTrigger RecurringReserveResources_Regarding12
        {
            get
            {
                return this.GetRelatedEntity<ProcessTrigger>("cvt_processtrigger_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding12");
                this.SetRelatedEntity<ProcessTrigger>("cvt_processtrigger_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding12");
            }
        }

        /// <summary>
        /// N:1 cvt_providerresourcegroup_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cvt_providerresourcegroup_RecurringAppointmentMasters")]
        public cvt_providerresourcegroup cvt_providerresourcegroup_RecurringAppointmentMasters
        {
            get
            {
                return this.GetRelatedEntity<cvt_providerresourcegroup>("cvt_providerresourcegroup_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("cvt_providerresourcegroup_RecurringAppointmentMasters");
                this.SetRelatedEntity<cvt_providerresourcegroup>("cvt_providerresourcegroup_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("cvt_providerresourcegroup_RecurringAppointmentMasters");
            }
        }

        /// <summary>
        /// N:1 cvt_qualitycheck_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cvt_qualitycheck_RecurringAppointmentMasters")]
        public cvt_qualitycheck cvt_qualitycheck_RecurringAppointmentMasters
        {
            get
            {
                return this.GetRelatedEntity<cvt_qualitycheck>("cvt_qualitycheck_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("cvt_qualitycheck_RecurringAppointmentMasters");
                this.SetRelatedEntity<cvt_qualitycheck>("cvt_qualitycheck_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("cvt_qualitycheck_RecurringAppointmentMasters");
            }
        }

        /// <summary>
        /// N:1 cvt_resourcebooking_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cvt_resourcebooking_RecurringAppointmentMasters")]
        public ResourceBooking RecurringReserveResources_Regarding13
        {
            get
            {
                return this.GetRelatedEntity<ResourceBooking>("cvt_resourcebooking_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding13");
                this.SetRelatedEntity<ResourceBooking>("cvt_resourcebooking_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding13");
            }
        }

        /// <summary>
        /// N:1 cvt_resourcepackage_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cvt_resourcepackage_RecurringAppointmentMasters")]
        public cvt_resourcepackage cvt_resourcepackage_RecurringAppointmentMasters
        {
            get
            {
                return this.GetRelatedEntity<cvt_resourcepackage>("cvt_resourcepackage_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("cvt_resourcepackage_RecurringAppointmentMasters");
                this.SetRelatedEntity<cvt_resourcepackage>("cvt_resourcepackage_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("cvt_resourcepackage_RecurringAppointmentMasters");
            }
        }

        /// <summary>
        /// N:1 cvt_schedulingresource_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cvt_schedulingresource_RecurringAppointmentMasters")]
        public cvt_schedulingresource cvt_schedulingresource_RecurringAppointmentMasters
        {
            get
            {
                return this.GetRelatedEntity<cvt_schedulingresource>("cvt_schedulingresource_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("cvt_schedulingresource_RecurringAppointmentMasters");
                this.SetRelatedEntity<cvt_schedulingresource>("cvt_schedulingresource_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("cvt_schedulingresource_RecurringAppointmentMasters");
            }
        }

        /// <summary>
        /// N:1 cvt_serviceappointment_recurringappointmentmaster_serviceactivityid
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cvt_serviceactivityid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cvt_serviceappointment_recurringappointmentmaster_serviceactivityid")]
        public ServiceAppointment cvt_serviceappointment_recurringappointmentmaster_serviceactivityid
        {
            get
            {
                return this.GetRelatedEntity<ServiceAppointment>("cvt_serviceappointment_recurringappointmentmaster_serviceactivityid", null);
            }

            set
            {
                this.OnPropertyChanging("cvt_serviceappointment_recurringappointmentmaster_serviceactivityid");
                this.SetRelatedEntity<ServiceAppointment>("cvt_serviceappointment_recurringappointmentmaster_serviceactivityid", null, value);
                this.OnPropertyChanged("cvt_serviceappointment_recurringappointmentmaster_serviceactivityid");
            }
        }

        /// <summary>
        /// N:1 cvt_stagingresource_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cvt_stagingresource_RecurringAppointmentMasters")]
        public cvt_stagingresource cvt_stagingresource_RecurringAppointmentMasters
        {
            get
            {
                return this.GetRelatedEntity<cvt_stagingresource>("cvt_stagingresource_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("cvt_stagingresource_RecurringAppointmentMasters");
                this.SetRelatedEntity<cvt_stagingresource>("cvt_stagingresource_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("cvt_stagingresource_RecurringAppointmentMasters");
            }
        }

        /// <summary>
        /// N:1 cvt_tsaapproval_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cvt_tsaapproval_RecurringAppointmentMasters")]
        public TSAApproval RecurringReserveResources_Regarding14
        {
            get
            {
                return this.GetRelatedEntity<TSAApproval>("cvt_tsaapproval_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding14");
                this.SetRelatedEntity<TSAApproval>("cvt_tsaapproval_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding14");
            }
        }

        /// <summary>
        /// N:1 cvt_tssprivileging_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cvt_tssprivileging_RecurringAppointmentMasters")]
        public cvt_tssprivileging cvt_tssprivileging_RecurringAppointmentMasters
        {
            get
            {
                return this.GetRelatedEntity<cvt_tssprivileging>("cvt_tssprivileging_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("cvt_tssprivileging_RecurringAppointmentMasters");
                this.SetRelatedEntity<cvt_tssprivileging>("cvt_tssprivileging_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("cvt_tssprivileging_RecurringAppointmentMasters");
            }
        }

        /// <summary>
        /// N:1 cvt_userduz_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cvt_userduz_RecurringAppointmentMasters")]
        public cvt_userduz cvt_userduz_RecurringAppointmentMasters
        {
            get
            {
                return this.GetRelatedEntity<cvt_userduz>("cvt_userduz_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("cvt_userduz_RecurringAppointmentMasters");
                this.SetRelatedEntity<cvt_userduz>("cvt_userduz_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("cvt_userduz_RecurringAppointmentMasters");
            }
        }

        /// <summary>
        /// N:1 cvt_vistaintegrationresult_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cvt_vistaintegrationresult_RecurringAppointmentMasters")]
        public cvt_vistaintegrationresult cvt_vistaintegrationresult_RecurringAppointmentMasters
        {
            get
            {
                return this.GetRelatedEntity<cvt_vistaintegrationresult>("cvt_vistaintegrationresult_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("cvt_vistaintegrationresult_RecurringAppointmentMasters");
                this.SetRelatedEntity<cvt_vistaintegrationresult>("cvt_vistaintegrationresult_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("cvt_vistaintegrationresult_RecurringAppointmentMasters");
            }
        }

        /// <summary>
        /// N:1 cvt_vod_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cvt_vod_RecurringAppointmentMasters")]
        public cvt_vod cvt_vod_RecurringAppointmentMasters
        {
            get
            {
                return this.GetRelatedEntity<cvt_vod>("cvt_vod_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("cvt_vod_RecurringAppointmentMasters");
                this.SetRelatedEntity<cvt_vod>("cvt_vod_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("cvt_vod_RecurringAppointmentMasters");
            }
        }

        /// <summary>
        /// N:1 entitlement_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlement_RecurringAppointmentMasters")]
        public Entitlement RecurringReserveResources_Regarding15
        {
            get
            {
                return this.GetRelatedEntity<Entitlement>("entitlement_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding15");
                this.SetRelatedEntity<Entitlement>("entitlement_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding15");
            }
        }

        /// <summary>
        /// N:1 entitlementtemplate_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlementtemplate_RecurringAppointmentMasters")]
        public EntitlementTemplate RecurringReserveResources_Regarding16
        {
            get
            {
                return this.GetRelatedEntity<EntitlementTemplate>("entitlementtemplate_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding16");
                this.SetRelatedEntity<EntitlementTemplate>("entitlementtemplate_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding16");
            }
        }

        /// <summary>
        /// N:1 Incident_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Incident_RecurringAppointmentMasters")]
        public Case RecurringReserveResources_Regarding17
        {
            get
            {
                return this.GetRelatedEntity<Case>("Incident_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding17");
                this.SetRelatedEntity<Case>("Incident_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding17");
            }
        }

        /// <summary>
        /// N:1 Invoice_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Invoice_RecurringAppointmentMasters")]
        public Invoice RecurringReserveResources_Regarding18
        {
            get
            {
                return this.GetRelatedEntity<Invoice>("Invoice_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding18");
                this.SetRelatedEntity<Invoice>("Invoice_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding18");
            }
        }

        /// <summary>
        /// N:1 KnowledgeArticle_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("KnowledgeArticle_RecurringAppointmentMasters")]
        public KnowledgeArticle RecurringReserveResources_Regarding19
        {
            get
            {
                return this.GetRelatedEntity<KnowledgeArticle>("KnowledgeArticle_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding19");
                this.SetRelatedEntity<KnowledgeArticle>("KnowledgeArticle_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding19");
            }
        }

        /// <summary>
        /// N:1 KnowledgeBaseRecord_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("KnowledgeBaseRecord_RecurringAppointmentMasters")]
        public KnowledgeBaseRecord RecurringReserveResources_Regarding20
        {
            get
            {
                return this.GetRelatedEntity<KnowledgeBaseRecord>("KnowledgeBaseRecord_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding20");
                this.SetRelatedEntity<KnowledgeBaseRecord>("KnowledgeBaseRecord_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding20");
            }
        }

        /// <summary>
        /// N:1 Lead_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Lead_RecurringAppointmentMasters")]
        public Lead RecurringReserveResources_Regarding21
        {
            get
            {
                return this.GetRelatedEntity<Lead>("Lead_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding21");
                this.SetRelatedEntity<Lead>("Lead_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding21");
            }
        }

        /// <summary>
        /// N:1 lk_recurringappointmentmaster_createdby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_recurringappointmentmaster_createdby")]
        public SystemUser lk_recurringappointmentmaster_createdby
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("lk_recurringappointmentmaster_createdby", null);
            }
        }

        /// <summary>
        /// N:1 lk_recurringappointmentmaster_createdonbehalfby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_recurringappointmentmaster_createdonbehalfby")]
        public SystemUser lk_recurringappointmentmaster_createdonbehalfby
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("lk_recurringappointmentmaster_createdonbehalfby", null);
            }
        }

        /// <summary>
        /// N:1 lk_recurringappointmentmaster_modifiedby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_recurringappointmentmaster_modifiedby")]
        public SystemUser lk_recurringappointmentmaster_modifiedby
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("lk_recurringappointmentmaster_modifiedby", null);
            }
        }

        /// <summary>
        /// N:1 lk_recurringappointmentmaster_modifiedonbehalfby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_recurringappointmentmaster_modifiedonbehalfby")]
        public SystemUser lk_recurringappointmentmaster_modifiedonbehalfby
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("lk_recurringappointmentmaster_modifiedonbehalfby", null);
            }
        }

        /// <summary>
        /// N:1 mcs_endpoint_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mcs_endpoint_RecurringAppointmentMasters")]
        public InterfaceEndpoints RecurringReserveResources_Regarding22
        {
            get
            {
                return this.GetRelatedEntity<InterfaceEndpoints>("mcs_endpoint_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding22");
                this.SetRelatedEntity<InterfaceEndpoints>("mcs_endpoint_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding22");
            }
        }

        /// <summary>
        /// N:1 mcs_groupresource_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mcs_groupresource_RecurringAppointmentMasters")]
        public mcs_groupresource mcs_groupresource_RecurringAppointmentMasters
        {
            get
            {
                return this.GetRelatedEntity<mcs_groupresource>("mcs_groupresource_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("mcs_groupresource_RecurringAppointmentMasters");
                this.SetRelatedEntity<mcs_groupresource>("mcs_groupresource_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("mcs_groupresource_RecurringAppointmentMasters");
            }
        }

        /// <summary>
        /// N:1 mcs_integrationsystemjob_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mcs_integrationsystemjob_RecurringAppointmentMasters")]
        public IntegrationSystemJobs RecurringReserveResources_Regarding23
        {
            get
            {
                return this.GetRelatedEntity<IntegrationSystemJobs>("mcs_integrationsystemjob_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding23");
                this.SetRelatedEntity<IntegrationSystemJobs>("mcs_integrationsystemjob_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding23");
            }
        }

        /// <summary>
        /// N:1 mcs_interface_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mcs_interface_RecurringAppointmentMasters")]
        public InterfaceDefinition RecurringReserveResources_Regarding24
        {
            get
            {
                return this.GetRelatedEntity<InterfaceDefinition>("mcs_interface_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding24");
                this.SetRelatedEntity<InterfaceDefinition>("mcs_interface_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding24");
            }
        }

        /// <summary>
        /// N:1 mcs_interfacemessagedirection_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mcs_interfacemessagedirection_RecurringAppointmentMasters")]
        public InterfaceMessageIO RecurringReserveResources_Regarding25
        {
            get
            {
                return this.GetRelatedEntity<InterfaceMessageIO>("mcs_interfacemessagedirection_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding25");
                this.SetRelatedEntity<InterfaceMessageIO>("mcs_interfacemessagedirection_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding25");
            }
        }

        /// <summary>
        /// N:1 mcs_interfacemessagetype_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mcs_interfacemessagetype_RecurringAppointmentMasters")]
        public InterfaceMessages RecurringReserveResources_Regarding26
        {
            get
            {
                return this.GetRelatedEntity<InterfaceMessages>("mcs_interfacemessagetype_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding26");
                this.SetRelatedEntity<InterfaceMessages>("mcs_interfacemessagetype_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding26");
            }
        }

        /// <summary>
        /// N:1 mcs_interfacesetting_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mcs_interfacesetting_RecurringAppointmentMasters")]
        public InterfaceSettings RecurringReserveResources_Regarding27
        {
            get
            {
                return this.GetRelatedEntity<InterfaceSettings>("mcs_interfacesetting_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding27");
                this.SetRelatedEntity<InterfaceSettings>("mcs_interfacesetting_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding27");
            }
        }

        /// <summary>
        /// N:1 mcs_jobcontrol_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mcs_jobcontrol_RecurringAppointmentMasters")]
        public JobControl RecurringReserveResources_Regarding28
        {
            get
            {
                return this.GetRelatedEntity<JobControl>("mcs_jobcontrol_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding28");
                this.SetRelatedEntity<JobControl>("mcs_jobcontrol_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding28");
            }
        }

        /// <summary>
        /// N:1 mcs_mapping_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mcs_mapping_RecurringAppointmentMasters")]
        public MessageMaps RecurringReserveResources_Regarding29
        {
            get
            {
                return this.GetRelatedEntity<MessageMaps>("mcs_mapping_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding29");
                this.SetRelatedEntity<MessageMaps>("mcs_mapping_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding29");
            }
        }

        /// <summary>
        /// N:1 mcs_message_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mcs_message_RecurringAppointmentMasters")]
        public Message RecurringReserveResources_Regarding30
        {
            get
            {
                return this.GetRelatedEntity<Message>("mcs_message_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding30");
                this.SetRelatedEntity<Message>("mcs_message_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding30");
            }
        }

        /// <summary>
        /// N:1 mcs_messageaudit_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mcs_messageaudit_RecurringAppointmentMasters")]
        public InterfaceAuditLog RecurringReserveResources_Regarding31
        {
            get
            {
                return this.GetRelatedEntity<InterfaceAuditLog>("mcs_messageaudit_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding31");
                this.SetRelatedEntity<InterfaceAuditLog>("mcs_messageaudit_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding31");
            }
        }

        /// <summary>
        /// N:1 mcs_messagetomessagemapping_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mcs_messagetomessagemapping_RecurringAppointmentMasters")]
        public MessageToMessageTranslation RecurringReserveResources_Regarding32
        {
            get
            {
                return this.GetRelatedEntity<MessageToMessageTranslation>("mcs_messagetomessagemapping_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding32");
                this.SetRelatedEntity<MessageToMessageTranslation>("mcs_messagetomessagemapping_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding32");
            }
        }

        /// <summary>
        /// N:1 mcs_messagetypemapping_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mcs_messagetypemapping_RecurringAppointmentMasters")]
        public EntityToMessageTranslation RecurringReserveResources_Regarding33
        {
            get
            {
                return this.GetRelatedEntity<EntityToMessageTranslation>("mcs_messagetypemapping_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding33");
                this.SetRelatedEntity<EntityToMessageTranslation>("mcs_messagetypemapping_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding33");
            }
        }

        /// <summary>
        /// N:1 mcs_patientsiteroom_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mcs_patientsiteroom_RecurringAppointmentMasters")]
        public PatientSiteRoom RecurringReserveResources_Regarding34
        {
            get
            {
                return this.GetRelatedEntity<PatientSiteRoom>("mcs_patientsiteroom_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding34");
                this.SetRelatedEntity<PatientSiteRoom>("mcs_patientsiteroom_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding34");
            }
        }

        /// <summary>
        /// N:1 mcs_resource_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mcs_resource_RecurringAppointmentMasters")]
        public mcs_resource mcs_resource_RecurringAppointmentMasters
        {
            get
            {
                return this.GetRelatedEntity<mcs_resource>("mcs_resource_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("mcs_resource_RecurringAppointmentMasters");
                this.SetRelatedEntity<mcs_resource>("mcs_resource_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("mcs_resource_RecurringAppointmentMasters");
            }
        }

        /// <summary>
        /// N:1 mcs_resourcegroup_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mcs_resourcegroup_RecurringAppointmentMasters")]
        public mcs_resourcegroup mcs_resourcegroup_RecurringAppointmentMasters
        {
            get
            {
                return this.GetRelatedEntity<mcs_resourcegroup>("mcs_resourcegroup_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("mcs_resourcegroup_RecurringAppointmentMasters");
                this.SetRelatedEntity<mcs_resourcegroup>("mcs_resourcegroup_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("mcs_resourcegroup_RecurringAppointmentMasters");
            }
        }

        /// <summary>
        /// N:1 mcs_services_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mcs_services_RecurringAppointmentMasters")]
        public mcs_services mcs_services_RecurringAppointmentMasters
        {
            get
            {
                return this.GetRelatedEntity<mcs_services>("mcs_services_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("mcs_services_RecurringAppointmentMasters");
                this.SetRelatedEntity<mcs_services>("mcs_services_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("mcs_services_RecurringAppointmentMasters");
            }
        }

        /// <summary>
        /// N:1 mcs_site_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mcs_site_RecurringAppointmentMasters")]
        public mcs_site mcs_site_RecurringAppointmentMasters
        {
            get
            {
                return this.GetRelatedEntity<mcs_site>("mcs_site_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("mcs_site_RecurringAppointmentMasters");
                this.SetRelatedEntity<mcs_site>("mcs_site_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("mcs_site_RecurringAppointmentMasters");
            }
        }

        /// <summary>
        /// N:1 msdyn_customerasset_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_customerasset_RecurringAppointmentMasters")]
        public CustomerAsset RecurringReserveResources_Regarding35
        {
            get
            {
                return this.GetRelatedEntity<CustomerAsset>("msdyn_customerasset_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding35");
                this.SetRelatedEntity<CustomerAsset>("msdyn_customerasset_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding35");
            }
        }

        /// <summary>
        /// N:1 msdyn_playbookinstance_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_playbookinstance_RecurringAppointmentMasters")]
        public Playbook RecurringReserveResources_Regarding36
        {
            get
            {
                return this.GetRelatedEntity<Playbook>("msdyn_playbookinstance_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding36");
                this.SetRelatedEntity<Playbook>("msdyn_playbookinstance_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding36");
            }
        }

        /// <summary>
        /// N:1 msdyn_postalbum_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_postalbum_RecurringAppointmentMasters")]
        public ProfileAlbum RecurringReserveResources_Regarding37
        {
            get
            {
                return this.GetRelatedEntity<ProfileAlbum>("msdyn_postalbum_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding37");
                this.SetRelatedEntity<ProfileAlbum>("msdyn_postalbum_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding37");
            }
        }

        /// <summary>
        /// N:1 Opportunity_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Opportunity_RecurringAppointmentMasters")]
        public Opportunity RecurringReserveResources_Regarding39
        {
            get
            {
                return this.GetRelatedEntity<Opportunity>("Opportunity_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding39");
                this.SetRelatedEntity<Opportunity>("Opportunity_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding39");
            }
        }

        /// <summary>
        /// N:1 Quote_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Quote_RecurringAppointmentMasters")]
        public Quote RecurringReserveResources_Regarding40
        {
            get
            {
                return this.GetRelatedEntity<Quote>("Quote_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding40");
                this.SetRelatedEntity<Quote>("Quote_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding40");
            }
        }

        /// <summary>
        /// N:1 SalesOrder_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("SalesOrder_RecurringAppointmentMasters")]
        public Order RecurringReserveResources_Regarding41
        {
            get
            {
                return this.GetRelatedEntity<Order>("SalesOrder_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding41");
                this.SetRelatedEntity<Order>("SalesOrder_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding41");
            }
        }

        /// <summary>
        /// N:1 service_recurringappointmentmasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serviceid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("service_recurringappointmentmasters")]
        public Service service_recurringappointmentmasters
        {
            get
            {
                return this.GetRelatedEntity<Service>("service_recurringappointmentmasters", null);
            }

            set
            {
                this.OnPropertyChanging("service_recurringappointmentmasters");
                this.SetRelatedEntity<Service>("service_recurringappointmentmasters", null, value);
                this.OnPropertyChanged("service_recurringappointmentmasters");
            }
        }

        /// <summary>
        /// N:1 site_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("site_RecurringAppointmentMasters")]
        public Site site_RecurringAppointmentMasters
        {
            get
            {
                return this.GetRelatedEntity<Site>("site_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("site_RecurringAppointmentMasters");
                this.SetRelatedEntity<Site>("site_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("site_RecurringAppointmentMasters");
            }
        }

        /// <summary>
        /// N:1 team_recurringappointmentmaster
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_recurringappointmentmaster")]
        public Team team_recurringappointmentmaster
        {
            get
            {
                return this.GetRelatedEntity<Team>("team_recurringappointmentmaster", null);
            }
        }

        /// <summary>
        /// N:1 TransactionCurrency_RecurringAppointmentMaster
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_RecurringAppointmentMaster")]
        public Currency RecurringReserveResources_Currency
        {
            get
            {
                return this.GetRelatedEntity<Currency>("TransactionCurrency_RecurringAppointmentMaster", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Currency");
                this.SetRelatedEntity<Currency>("TransactionCurrency_RecurringAppointmentMaster", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Currency");
            }
        }

        /// <summary>
        /// N:1 user_recurringappointmentmaster
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_recurringappointmentmaster")]
        public SystemUser user_recurringappointmentmaster
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("user_recurringappointmentmaster", null);
            }
        }
    }
}
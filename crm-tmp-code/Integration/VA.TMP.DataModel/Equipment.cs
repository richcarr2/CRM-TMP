//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using VA.TMP.OptionSets;

namespace VA.TMP.DataModel
{
    /// <summary>
    /// Resource that can be scheduled.
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("equipment")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.1.0.71")]
    public partial class Equipment : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Default Constructor.
        /// </summary>
        public Equipment(): base(EntityLogicalName)
        {
        }

        public const string EntityLogicalName = "equipment";
        public const string EntityLogicalCollectionName = "equipments";
        public const string EntitySetName = "equipments";
        public const int EntityTypeCode = 4000;
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
        private void OnPropertyChanged(string propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        private void OnPropertyChanging(string propertyName)
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
            }
        }

        /// <summary>
        /// Shows the business unit that the Equipment belongs to.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businessunitid")]
        public Microsoft.Xrm.Sdk.EntityReference BusinessUnitId
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("businessunitid");
            }

            set
            {
                this.OnPropertyChanging("BusinessUnitId");
                this.SetAttributeValue("businessunitid", value);
                this.OnPropertyChanged("BusinessUnitId");
            }
        }

        /// <summary>
        /// calendar_equipment
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("calendarid")]
        public Microsoft.Xrm.Sdk.EntityReference CalendarId
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("calendarid");
            }

            set
            {
                this.OnPropertyChanging("CalendarId");
                this.SetAttributeValue("calendarid", value);
                this.OnPropertyChanged("CalendarId");
            }
        }

        /// <summary>
        /// lk_equipment_createdby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference CreatedBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        /// <summary>
        /// Date and time when the facility/equipment entry was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> CreatedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// lk_equipment_createdonbehalfby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
        }

        /// <summary>
        /// 
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cvt_capacity")]
        public System.Nullable<int> cvt_capacity
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("cvt_capacity");
            }

            set
            {
                this.OnPropertyChanging("cvt_capacity");
                this.SetAttributeValue("cvt_capacity", value);
                this.OnPropertyChanged("cvt_capacity");
            }
        }

        /// <summary>
        /// 
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cvt_type")]
        public Microsoft.Xrm.Sdk.OptionSetValue cvt_type
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("cvt_type");
                if ((optionSet != null))
                {
                    return optionSet;
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("cvt_type");
                if ((value == null))
                {
                    this.SetAttributeValue("cvt_type", null);
                }
                else
                {
                    this.SetAttributeValue("cvt_type", value);
                }

                this.OnPropertyChanged("cvt_type");
            }
        }

        /// <summary>
        /// Description of the facility/equipment.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
        public string Description
        {
            get
            {
                return this.GetAttributeValue<string>("description");
            }

            set
            {
                this.OnPropertyChanging("Description");
                this.SetAttributeValue("description", value);
                this.OnPropertyChanged("Description");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("displayinserviceviews")]
        public System.Nullable<bool> DisplayInServiceViews
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("displayinserviceviews");
            }

            set
            {
                this.OnPropertyChanging("DisplayInServiceViews");
                this.SetAttributeValue("displayinserviceviews", value);
                this.OnPropertyChanged("DisplayInServiceViews");
            }
        }

        /// <summary>
        /// Email address of person to contact about the use of the facility/equipment.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress")]
        public string EMailAddress
        {
            get
            {
                return this.GetAttributeValue<string>("emailaddress");
            }

            set
            {
                this.OnPropertyChanging("EMailAddress");
                this.SetAttributeValue("emailaddress", value);
                this.OnPropertyChanged("EMailAddress");
            }
        }

        /// <summary>
        /// Unique identifier of the facility/equipment.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("equipmentid")]
        public System.Nullable<System.Guid> EquipmentId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("equipmentid");
            }

            set
            {
                this.OnPropertyChanging("EquipmentId");
                this.SetAttributeValue("equipmentid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }

                this.OnPropertyChanged("EquipmentId");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("equipmentid")]
        public override System.Guid Id
        {
            get
            {
                return base.Id;
            }

            set
            {
                this.EquipmentId = value;
            }
        }

        /// <summary>
        /// Exchange rate for the currency associated with the equipment with respect to the base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
        public System.Nullable<decimal> ExchangeRate
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
            }
        }

        /// <summary>
        /// Unique identifier of the data import or data migration that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> ImportSequenceNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }

            set
            {
                this.OnPropertyChanging("ImportSequenceNumber");
                this.SetAttributeValue("importsequencenumber", value);
                this.OnPropertyChanged("ImportSequenceNumber");
            }
        }

        /// <summary>
        /// Whether the facility/equipment is disabled or operational.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isdisabled")]
        public System.Nullable<bool> IsDisabled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isdisabled");
            }

            set
            {
                this.OnPropertyChanging("IsDisabled");
                this.SetAttributeValue("isdisabled", value);
                this.OnPropertyChanged("IsDisabled");
            }
        }

        /// <summary>
        /// Unique identifier for Resource associated with Facility/Equipment.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mcs_relatedresource")]
        public Microsoft.Xrm.Sdk.EntityReference mcs_relatedresource
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("mcs_relatedresource");
            }

            set
            {
                this.OnPropertyChanging("mcs_relatedresource");
                this.SetAttributeValue("mcs_relatedresource", value);
                this.OnPropertyChanged("mcs_relatedresource");
            }
        }

        /// <summary>
        /// lk_equipment_modifiedby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        /// <summary>
        /// Date and time when the facility/equipment entry was last modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> ModifiedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// lk_equipment_modifiedonbehalfby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
        }

        /// <summary>
        /// Name of the facility/equipment.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
        public string Name
        {
            get
            {
                return this.GetAttributeValue<string>("name");
            }

            set
            {
                this.OnPropertyChanging("Name");
                this.SetAttributeValue("name", value);
                this.OnPropertyChanged("Name");
            }
        }

        /// <summary>
        /// organization_equipment
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
        public Microsoft.Xrm.Sdk.EntityReference OrganizationId
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> OverriddenCreatedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }

            set
            {
                this.OnPropertyChanging("OverriddenCreatedOn");
                this.SetAttributeValue("overriddencreatedon", value);
                this.OnPropertyChanged("OverriddenCreatedOn");
            }
        }

        /// <summary>
        /// site_equipment
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("siteid")]
        public Microsoft.Xrm.Sdk.EntityReference SiteId
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("siteid");
            }

            set
            {
                this.OnPropertyChanging("SiteId");
                this.SetAttributeValue("siteid", value);
                this.OnPropertyChanged("SiteId");
            }
        }

        /// <summary>
        /// Skills needed to operate the facility/equipment.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("skills")]
        public string Skills
        {
            get
            {
                return this.GetAttributeValue<string>("skills");
            }

            set
            {
                this.OnPropertyChanging("Skills");
                this.SetAttributeValue("skills", value);
                this.OnPropertyChanged("Skills");
            }
        }

        /// <summary>
        /// Local time zone where the facility/equipment is located.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezonecode")]
        public System.Nullable<int> TimeZoneCode
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezonecode");
            }

            set
            {
                this.OnPropertyChanging("TimeZoneCode");
                this.SetAttributeValue("timezonecode", value);
                this.OnPropertyChanged("TimeZoneCode");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> TimeZoneRuleVersionNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }

            set
            {
                this.OnPropertyChanging("TimeZoneRuleVersionNumber");
                this.SetAttributeValue("timezoneruleversionnumber", value);
                this.OnPropertyChanged("TimeZoneRuleVersionNumber");
            }
        }

        /// <summary>
        /// TransactionCurrency_Equipment
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
        public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
            }

            set
            {
                this.OnPropertyChanging("TransactionCurrencyId");
                this.SetAttributeValue("transactioncurrencyid", value);
                this.OnPropertyChanged("TransactionCurrencyId");
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> UTCConversionTimeZoneCode
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }

            set
            {
                this.OnPropertyChanging("UTCConversionTimeZoneCode");
                this.SetAttributeValue("utcconversiontimezonecode", value);
                this.OnPropertyChanged("UTCConversionTimeZoneCode");
            }
        }

        /// <summary>
        /// Version number of the equipment.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> VersionNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N equipment_accounts
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("equipment_accounts")]
        public System.Collections.Generic.IEnumerable<Account> Accounts_PreferredFacility_Equipment
        {
            get
            {
                return this.GetRelatedEntities<Account>("equipment_accounts", null);
            }

            set
            {
                this.OnPropertyChanging("Accounts_PreferredFacility_Equipment");
                this.SetRelatedEntities<Account>("equipment_accounts", null, value);
                this.OnPropertyChanged("Accounts_PreferredFacility_Equipment");
            }
        }

        /// <summary>
        /// 1:N equipment_activity_parties
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("equipment_activity_parties")]
        public System.Collections.Generic.IEnumerable<ActivityParty> ActivityParties_Party
        {
            get
            {
                return this.GetRelatedEntities<ActivityParty>("equipment_activity_parties", null);
            }

            set
            {
                this.OnPropertyChanging("ActivityParties_Party");
                this.SetRelatedEntities<ActivityParty>("equipment_activity_parties", null, value);
                this.OnPropertyChanged("ActivityParties_Party");
            }
        }

        /// <summary>
        /// 1:N Equipment_Annotation
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Equipment_Annotation")]
        public System.Collections.Generic.IEnumerable<Annotation> Notes_Regarding
        {
            get
            {
                return this.GetRelatedEntities<Annotation>("Equipment_Annotation", null);
            }

            set
            {
                this.OnPropertyChanging("Notes_Regarding");
                this.SetRelatedEntities<Annotation>("Equipment_Annotation", null, value);
                this.OnPropertyChanged("Notes_Regarding");
            }
        }

        /// <summary>
        /// 1:N Equipment_AsyncOperations
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Equipment_AsyncOperations")]
        public System.Collections.Generic.IEnumerable<SystemJob> SystemJobs_Regarding
        {
            get
            {
                return this.GetRelatedEntities<SystemJob>("Equipment_AsyncOperations", null);
            }

            set
            {
                this.OnPropertyChanging("SystemJobs_Regarding");
                this.SetRelatedEntities<SystemJob>("Equipment_AsyncOperations", null, value);
                this.OnPropertyChanged("SystemJobs_Regarding");
            }
        }

        /// <summary>
        /// 1:N Equipment_BulkDeleteFailures
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Equipment_BulkDeleteFailures")]
        public System.Collections.Generic.IEnumerable<BulkDeleteFailure> BulkDeleteFailures_Name
        {
            get
            {
                return this.GetRelatedEntities<BulkDeleteFailure>("Equipment_BulkDeleteFailures", null);
            }

            set
            {
                this.OnPropertyChanging("BulkDeleteFailures_Name");
                this.SetRelatedEntities<BulkDeleteFailure>("Equipment_BulkDeleteFailures", null, value);
                this.OnPropertyChanged("BulkDeleteFailures_Name");
            }
        }

        /// <summary>
        /// 1:N equipment_connections1
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("equipment_connections1")]
        public System.Collections.Generic.IEnumerable<Connection> Connections_ConnectedFrom
        {
            get
            {
                return this.GetRelatedEntities<Connection>("equipment_connections1", null);
            }

            set
            {
                this.OnPropertyChanging("Connections_ConnectedFrom");
                this.SetRelatedEntities<Connection>("equipment_connections1", null, value);
                this.OnPropertyChanged("Connections_ConnectedFrom");
            }
        }

        /// <summary>
        /// 1:N equipment_connections2
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("equipment_connections2")]
        public System.Collections.Generic.IEnumerable<Connection> Connections_ConnectedTo
        {
            get
            {
                return this.GetRelatedEntities<Connection>("equipment_connections2", null);
            }

            set
            {
                this.OnPropertyChanging("Connections_ConnectedTo");
                this.SetRelatedEntities<Connection>("equipment_connections2", null, value);
                this.OnPropertyChanged("Connections_ConnectedTo");
            }
        }

        /// <summary>
        /// 1:N equipment_contacts
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("equipment_contacts")]
        public System.Collections.Generic.IEnumerable<Contact> Patients_PreferredFacility_Equipment
        {
            get
            {
                return this.GetRelatedEntities<Contact>("equipment_contacts", null);
            }

            set
            {
                this.OnPropertyChanging("Patients_PreferredFacility_Equipment");
                this.SetRelatedEntities<Contact>("equipment_contacts", null, value);
                this.OnPropertyChanged("Patients_PreferredFacility_Equipment");
            }
        }

        /// <summary>
        /// 1:N Equipment_Email_EmailSender
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Equipment_Email_EmailSender")]
        public System.Collections.Generic.IEnumerable<Email> EmailMessages_Sender
        {
            get
            {
                return this.GetRelatedEntities<Email>("Equipment_Email_EmailSender", null);
            }

            set
            {
                this.OnPropertyChanging("EmailMessages_Sender");
                this.SetRelatedEntities<Email>("Equipment_Email_EmailSender", null, value);
                this.OnPropertyChanged("EmailMessages_Sender");
            }
        }

        /// <summary>
        /// 1:N equipment_MailboxTrackingFolders
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("equipment_MailboxTrackingFolders")]
        public System.Collections.Generic.IEnumerable<MailboxAutoTrackingFolder> MailboxAutoTrackingFolders_RegardingObjectId
        {
            get
            {
                return this.GetRelatedEntities<MailboxAutoTrackingFolder>("equipment_MailboxTrackingFolders", null);
            }

            set
            {
                this.OnPropertyChanging("MailboxAutoTrackingFolders_RegardingObjectId");
                this.SetRelatedEntities<MailboxAutoTrackingFolder>("equipment_MailboxTrackingFolders", null, value);
                this.OnPropertyChanged("MailboxAutoTrackingFolders_RegardingObjectId");
            }
        }

        /// <summary>
        /// 1:N equipment_principalobjectattributeaccess
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("equipment_principalobjectattributeaccess")]
        public System.Collections.Generic.IEnumerable<FieldSharing> FieldSharing_EntityInstance
        {
            get
            {
                return this.GetRelatedEntities<FieldSharing>("equipment_principalobjectattributeaccess", null);
            }

            set
            {
                this.OnPropertyChanging("FieldSharing_EntityInstance");
                this.SetRelatedEntities<FieldSharing>("equipment_principalobjectattributeaccess", null, value);
                this.OnPropertyChanged("FieldSharing_EntityInstance");
            }
        }

        /// <summary>
        /// 1:N Equipment_ProcessSessions
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Equipment_ProcessSessions")]
        public System.Collections.Generic.IEnumerable<ProcessSession> ProcessSessions_Regarding
        {
            get
            {
                return this.GetRelatedEntities<ProcessSession>("Equipment_ProcessSessions", null);
            }

            set
            {
                this.OnPropertyChanging("ProcessSessions_Regarding");
                this.SetRelatedEntities<ProcessSession>("Equipment_ProcessSessions", null, value);
                this.OnPropertyChanged("ProcessSessions_Regarding");
            }
        }

        /// <summary>
        /// 1:N equipment_resources
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("equipment_resources")]
        public System.Collections.Generic.IEnumerable<Resource> Resources_Resource
        {
            get
            {
                return this.GetRelatedEntities<Resource>("equipment_resources", null);
            }

            set
            {
                this.OnPropertyChanging("Resources_Resource");
                this.SetRelatedEntities<Resource>("equipment_resources", null, value);
                this.OnPropertyChanged("Resources_Resource");
            }
        }

        /// <summary>
        /// 1:N Equipment_SyncErrors
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Equipment_SyncErrors")]
        public System.Collections.Generic.IEnumerable<SyncError> SyncErrors_Record
        {
            get
            {
                return this.GetRelatedEntities<SyncError>("Equipment_SyncErrors", null);
            }

            set
            {
                this.OnPropertyChanging("SyncErrors_Record");
                this.SetRelatedEntities<SyncError>("Equipment_SyncErrors", null, value);
                this.OnPropertyChanged("SyncErrors_Record");
            }
        }

        /// <summary>
        /// 1:N mcs_equipment_cvt_stagingresource
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mcs_equipment_cvt_stagingresource")]
        public System.Collections.Generic.IEnumerable<cvt_stagingresource> Inventory_relatedResource
        {
            get
            {
                return this.GetRelatedEntities<cvt_stagingresource>("mcs_equipment_cvt_stagingresource", null);
            }

            set
            {
                this.OnPropertyChanging("Inventory_relatedResource");
                this.SetRelatedEntities<cvt_stagingresource>("mcs_equipment_cvt_stagingresource", null, value);
                this.OnPropertyChanged("Inventory_relatedResource");
            }
        }

        /// <summary>
        /// 1:N mcs_equipment_mcs_resource
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mcs_equipment_mcs_resource")]
        public System.Collections.Generic.IEnumerable<mcs_resource> TMPResources_relatedResource
        {
            get
            {
                return this.GetRelatedEntities<mcs_resource>("mcs_equipment_mcs_resource", null);
            }

            set
            {
                this.OnPropertyChanging("TMPResources_relatedResource");
                this.SetRelatedEntities<mcs_resource>("mcs_equipment_mcs_resource", null, value);
                this.OnPropertyChanged("TMPResources_relatedResource");
            }
        }

        /// <summary>
        /// 1:N mcs_equipment_mcs_setting_DefaultCalendar
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mcs_equipment_mcs_setting_DefaultCalendar")]
        public System.Collections.Generic.IEnumerable<mcs_setting> Settings_DefaultCalendar
        {
            get
            {
                return this.GetRelatedEntities<mcs_setting>("mcs_equipment_mcs_setting_DefaultCalendar", null);
            }

            set
            {
                this.OnPropertyChanging("Settings_DefaultCalendar");
                this.SetRelatedEntities<mcs_setting>("mcs_equipment_mcs_setting_DefaultCalendar", null, value);
                this.OnPropertyChanged("Settings_DefaultCalendar");
            }
        }

        /// <summary>
        /// 1:N userentityinstancedata_equipment
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("userentityinstancedata_equipment")]
        public System.Collections.Generic.IEnumerable<UserEntityInstanceData> UserEntityInstanceData_ObjectId
        {
            get
            {
                return this.GetRelatedEntities<UserEntityInstanceData>("userentityinstancedata_equipment", null);
            }

            set
            {
                this.OnPropertyChanging("UserEntityInstanceData_ObjectId");
                this.SetRelatedEntities<UserEntityInstanceData>("userentityinstancedata_equipment", null, value);
                this.OnPropertyChanged("UserEntityInstanceData_ObjectId");
            }
        }

        /// <summary>
        /// N:1 business_unit_equipment
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businessunitid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_equipment")]
        public BusinessUnit Equipment_BusinessUnit
        {
            get
            {
                return this.GetRelatedEntity<BusinessUnit>("business_unit_equipment", null);
            }

            set
            {
                this.OnPropertyChanging("Equipment_BusinessUnit");
                this.SetRelatedEntity<BusinessUnit>("business_unit_equipment", null, value);
                this.OnPropertyChanged("Equipment_BusinessUnit");
            }
        }

        /// <summary>
        /// N:1 calendar_equipment
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("calendarid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("calendar_equipment")]
        public Calendar Equipment_Calendar
        {
            get
            {
                return this.GetRelatedEntity<Calendar>("calendar_equipment", null);
            }

            set
            {
                this.OnPropertyChanging("Equipment_Calendar");
                this.SetRelatedEntity<Calendar>("calendar_equipment", null, value);
                this.OnPropertyChanged("Equipment_Calendar");
            }
        }

        /// <summary>
        /// N:1 equipment_systemuser
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businessunitid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("equipment_systemuser")]
        public SystemUser Equipment_BusinessUnit2
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("equipment_systemuser", null);
            }

            set
            {
                this.OnPropertyChanging("Equipment_BusinessUnit2");
                this.SetRelatedEntity<SystemUser>("equipment_systemuser", null, value);
                this.OnPropertyChanged("Equipment_BusinessUnit2");
            }
        }

        /// <summary>
        /// N:1 lk_equipment_createdby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_equipment_createdby")]
        public SystemUser Equipment_CreatedBy
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("lk_equipment_createdby", null);
            }
        }

        /// <summary>
        /// N:1 lk_equipment_createdonbehalfby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_equipment_createdonbehalfby")]
        public SystemUser Equipment_CreatedBy_Delegate
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("lk_equipment_createdonbehalfby", null);
            }
        }

        /// <summary>
        /// N:1 lk_equipment_modifiedby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_equipment_modifiedby")]
        public SystemUser Equipment_ModifiedBy
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("lk_equipment_modifiedby", null);
            }
        }

        /// <summary>
        /// N:1 lk_equipment_modifiedonbehalfby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_equipment_modifiedonbehalfby")]
        public SystemUser Equipment_ModifiedBy_Delegate
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("lk_equipment_modifiedonbehalfby", null);
            }
        }

        /// <summary>
        /// N:1 mcs_mcs_resource_equipment_relatedresource
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mcs_relatedresource")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mcs_mcs_resource_equipment_relatedresource")]
        public mcs_resource Equipment_RelatedResource
        {
            get
            {
                return this.GetRelatedEntity<mcs_resource>("mcs_mcs_resource_equipment_relatedresource", null);
            }

            set
            {
                this.OnPropertyChanging("Equipment_RelatedResource");
                this.SetRelatedEntity<mcs_resource>("mcs_mcs_resource_equipment_relatedresource", null, value);
                this.OnPropertyChanged("Equipment_RelatedResource");
            }
        }

        /// <summary>
        /// N:1 site_equipment
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("siteid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("site_equipment")]
        public Site Equipment_Site
        {
            get
            {
                return this.GetRelatedEntity<Site>("site_equipment", null);
            }

            set
            {
                this.OnPropertyChanging("Equipment_Site");
                this.SetRelatedEntity<Site>("site_equipment", null, value);
                this.OnPropertyChanged("Equipment_Site");
            }
        }

        /// <summary>
        /// N:1 TransactionCurrency_Equipment
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Equipment")]
        public Currency Equipment_Currency
        {
            get
            {
                return this.GetRelatedEntity<Currency>("TransactionCurrency_Equipment", null);
            }

            set
            {
                this.OnPropertyChanging("Equipment_Currency");
                this.SetRelatedEntity<Currency>("TransactionCurrency_Equipment", null, value);
                this.OnPropertyChanged("Equipment_Currency");
            }
        }
    }
}
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using VA.TMP.DataModel.OptionSets;

namespace VA.TMP.DataModel
{
    /// <summary>
    /// 
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("mailbox")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.1.0.71")]
    public partial class Mailbox : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Default Constructor.
        /// </summary>
        public Mailbox(): base(EntityLogicalName)
        {
        }

        public const string EntityLogicalName = "mailbox";
        public const string EntityLogicalCollectionName = "mailboxes";
        public const string EntitySetName = "mailboxes";
        public const int EntityTypeCode = 9606;
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
        private void OnPropertyChanged(string propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        private void OnPropertyChanging(string propertyName)
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
            }
        }

        /// <summary>
        /// Choose the delivery method for the mailbox for appointments, contacts, and tasks.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actdeliverymethod")]
        public System.Nullable<Mailbox_AppointmentsContactsAndTasks> AppointmentsContactsAndTasks
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("actdeliverymethod");
                if ((optionSet != null))
                {
                    return ((Mailbox_AppointmentsContactsAndTasks)(System.Enum.ToObject(typeof(Mailbox_AppointmentsContactsAndTasks), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("AppointmentsContactsAndTasks");
                if ((value == null))
                {
                    this.SetAttributeValue("actdeliverymethod", null);
                }
                else
                {
                    this.SetAttributeValue("actdeliverymethod", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("AppointmentsContactsAndTasks");
            }
        }

        /// <summary>
        /// Status of the Appointments, Contacts, and Tasks.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actstatus")]
        public System.Nullable<Mailbox_AppointmentsContactsAndTasksStatus> AppointmentsContactsAndTasksStatus
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("actstatus");
                if ((optionSet != null))
                {
                    return ((Mailbox_AppointmentsContactsAndTasksStatus)(System.Enum.ToObject(typeof(Mailbox_AppointmentsContactsAndTasksStatus), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("AppointmentsContactsAndTasksStatus");
                if ((value == null))
                {
                    this.SetAttributeValue("actstatus", null);
                }
                else
                {
                    this.SetAttributeValue("actstatus", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("AppointmentsContactsAndTasksStatus");
            }
        }

        /// <summary>
        /// Choose whether to allow the email connector to use credentials.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allowemailconnectortousecredentials")]
        public System.Nullable<bool> AllowToUseCredentialsForEmailProcessing
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("allowemailconnectortousecredentials");
            }

            set
            {
                this.OnPropertyChanging("AllowToUseCredentialsForEmailProcessing");
                this.SetAttributeValue("allowemailconnectortousecredentials", value);
                this.OnPropertyChanged("AllowToUseCredentialsForEmailProcessing");
            }
        }

        /// <summary>
        /// Mailbox Total Duration in Average
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("averagetotalduration")]
        public System.Nullable<int> MonitorTotalPerformance
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("averagetotalduration");
            }
        }

        /// <summary>
        /// Shows who created the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference CreatedBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        /// <summary>
        /// Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> CreatedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Shows who created the record on behalf of another user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference CreatedBy_Delegate
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
        }

        /// <summary>
        /// Type the email address of the mailbox.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress")]
        public string EmailAddress
        {
            get
            {
                return this.GetAttributeValue<string>("emailaddress");
            }

            set
            {
                this.OnPropertyChanging("EmailAddress");
                this.SetAttributeValue("emailaddress", value);
                this.OnPropertyChanged("EmailAddress");
            }
        }

        /// <summary>
        /// Shows the status of the email address.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailrouteraccessapproval")]
        public System.Nullable<Mailbox_ShowsWhetherTheEmailAddressIsApprovedForEachMailboxForProcessingEmailThroughServerSideSynchronizationOrTheEmailRouter> EmailAddressStatus
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("emailrouteraccessapproval");
                if ((optionSet != null))
                {
                    return ((Mailbox_ShowsWhetherTheEmailAddressIsApprovedForEachMailboxForProcessingEmailThroughServerSideSynchronizationOrTheEmailRouter)(System.Enum.ToObject(typeof(Mailbox_ShowsWhetherTheEmailAddressIsApprovedForEachMailboxForProcessingEmailThroughServerSideSynchronizationOrTheEmailRouter), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("EmailAddressStatus");
                if ((value == null))
                {
                    this.SetAttributeValue("emailrouteraccessapproval", null);
                }
                else
                {
                    this.SetAttributeValue("emailrouteraccessapproval", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("EmailAddressStatus");
            }
        }

        /// <summary>
        /// Select the email server profile of the mailbox.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailserverprofile")]
        public Microsoft.Xrm.Sdk.EntityReference ServerProfile
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("emailserverprofile");
            }

            set
            {
                this.OnPropertyChanging("ServerProfile");
                this.SetAttributeValue("emailserverprofile", value);
                this.OnPropertyChanged("ServerProfile");
            }
        }

        /// <summary>
        /// Indicates whether the mailbox is enabled for Appointments, Contacts, and Tasks.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("enabledforact")]
        public System.Nullable<bool> EnabledForAppointmentsContactsAndTasks
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("enabledforact");
            }

            set
            {
                this.OnPropertyChanging("EnabledForAppointmentsContactsAndTasks");
                this.SetAttributeValue("enabledforact", value);
                this.OnPropertyChanged("EnabledForAppointmentsContactsAndTasks");
            }
        }

        /// <summary>
        /// Choose whether the mailbox is enabled for receiving email.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("enabledforincomingemail")]
        public System.Nullable<bool> EnabledForIncomingEmail
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("enabledforincomingemail");
            }

            set
            {
                this.OnPropertyChanging("EnabledForIncomingEmail");
                this.SetAttributeValue("enabledforincomingemail", value);
                this.OnPropertyChanged("EnabledForIncomingEmail");
            }
        }

        /// <summary>
        /// Choose whether the mailbox is enabled for sending email.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("enabledforoutgoingemail")]
        public System.Nullable<bool> EnabledForOutgoingEmail
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("enabledforoutgoingemail");
            }

            set
            {
                this.OnPropertyChanging("EnabledForOutgoingEmail");
                this.SetAttributeValue("enabledforoutgoingemail", value);
                this.OnPropertyChanged("EnabledForOutgoingEmail");
            }
        }

        /// <summary>
        /// The default image for the entity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage")]
        public byte[] EntityImage
        {
            get
            {
                return this.GetAttributeValue<byte[]>("entityimage");
            }

            set
            {
                this.OnPropertyChanging("EntityImage");
                this.SetAttributeValue("entityimage", value);
                this.OnPropertyChanged("EntityImage");
            }
        }

        /// <summary>
        /// 
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_timestamp")]
        public System.Nullable<long> EntityImage_Timestamp
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("entityimage_timestamp");
            }
        }

        /// <summary>
        /// 
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_url")]
        public string EntityImage_URL
        {
            get
            {
                return this.GetAttributeValue<string>("entityimage_url");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimageid")]
        public System.Nullable<System.Guid> EntityImageId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("entityimageid");
            }
        }

        /// <summary>
        /// Exchange web services endpoint URL for the mailbox.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ewsurl")]
        public string ExchangeWebServicesURL
        {
            get
            {
                return this.GetAttributeValue<string>("ewsurl");
            }

            set
            {
                this.OnPropertyChanging("ExchangeWebServicesURL");
                this.SetAttributeValue("ewsurl", value);
                this.OnPropertyChanged("ExchangeWebServicesURL");
            }
        }

        /// <summary>
        /// Date and time when the exchange contacts import was last completed for a mailbox record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangecontactsimportcompletedon")]
        public System.Nullable<System.DateTime> ExchangeContactsImportCompletedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("exchangecontactsimportcompletedon");
            }
        }

        /// <summary>
        /// Indicates the exchange contacts import status for a mailbox record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangecontactsimportstatus")]
        public System.Nullable<Mailbox_ExchangeContactsImportDeploymentStatus> ExchangeContactsImportStatus
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("exchangecontactsimportstatus");
                if ((optionSet != null))
                {
                    return ((Mailbox_ExchangeContactsImportDeploymentStatus)(System.Enum.ToObject(typeof(Mailbox_ExchangeContactsImportDeploymentStatus), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("ExchangeContactsImportStatus");
                if ((value == null))
                {
                    this.SetAttributeValue("exchangecontactsimportstatus", null);
                }
                else
                {
                    this.SetAttributeValue("exchangecontactsimportstatus", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("ExchangeContactsImportStatus");
            }
        }

        /// <summary>
        /// Contains the exchange synchronization state in XML format.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangesyncstatexml")]
        public string ExchangeSyncState
        {
            get
            {
                return this.GetAttributeValue<string>("exchangesyncstatexml");
            }

            set
            {
                this.OnPropertyChanging("ExchangeSyncState");
                this.SetAttributeValue("exchangesyncstatexml", value);
                this.OnPropertyChanged("ExchangeSyncState");
            }
        }

        /// <summary>
        /// Reference to the ExchangeSyncStateXml file on Azure.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangesyncstatexmlfileref")]
        public object ExchangeSyncStateXmlFileRef
        {
            get
            {
                return this.GetAttributeValue<object>("exchangesyncstatexmlfileref");
            }
        }

        /// <summary>
        /// Holds the hierarchy of folders under inbox in XML format.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("folderhierarchy")]
        public string FolderHierarchy
        {
            get
            {
                return this.GetAttributeValue<string>("folderhierarchy");
            }

            set
            {
                this.OnPropertyChanging("FolderHierarchy");
                this.SetAttributeValue("folderhierarchy", value);
                this.OnPropertyChanged("FolderHierarchy");
            }
        }

        /// <summary>
        /// For internal use only
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("forcedunlockcount")]
        public System.Nullable<int> CountOfTheNumberOfTimesAMailboxGetsForcedUnlocked
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("forcedunlockcount");
            }
        }

        /// <summary>
        /// Unique identifier of the async host that is processing this mailbox.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("hostid")]
        public string Host
        {
            get
            {
                return this.GetAttributeValue<string>("hostid");
            }
        }

        /// <summary>
        /// Select how incoming email will be delivered to the mailbox.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingemaildeliverymethod")]
        public System.Nullable<Mailbox_IncomingEmailDeliveryMethod> IncomingEmail
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("incomingemaildeliverymethod");
                if ((optionSet != null))
                {
                    return ((Mailbox_IncomingEmailDeliveryMethod)(System.Enum.ToObject(typeof(Mailbox_IncomingEmailDeliveryMethod), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("IncomingEmail");
                if ((value == null))
                {
                    this.SetAttributeValue("incomingemaildeliverymethod", null);
                }
                else
                {
                    this.SetAttributeValue("incomingemaildeliverymethod", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("IncomingEmail");
            }
        }

        /// <summary>
        /// Select the status that will be assigned to incoming email messages.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingemailstatus")]
        public System.Nullable<Mailbox_IncomingEmailStatus> IncomingEmailStatus
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("incomingemailstatus");
                if ((optionSet != null))
                {
                    return ((Mailbox_IncomingEmailStatus)(System.Enum.ToObject(typeof(Mailbox_IncomingEmailStatus), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("IncomingEmailStatus");
                if ((value == null))
                {
                    this.SetAttributeValue("incomingemailstatus", null);
                }
                else
                {
                    this.SetAttributeValue("incomingemailstatus", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("IncomingEmailStatus");
            }
        }

        /// <summary>
        /// Set the current organization as the synchronization organization.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isactsyncorgflagset")]
        public System.Nullable<bool> SetCurrentOrganizationAsSynchronizationOrganization
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isactsyncorgflagset");
            }

            set
            {
                this.OnPropertyChanging("SetCurrentOrganizationAsSynchronizationOrganization");
                this.SetAttributeValue("isactsyncorgflagset", value);
                this.OnPropertyChanged("SetCurrentOrganizationAsSynchronizationOrganization");
            }
        }

        /// <summary>
        /// Shows the status of approval of the email address by O365 Admin.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isemailaddressapprovedbyo365admin")]
        public System.Nullable<bool> EmailAddressO365AdminApprovalStatus
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isemailaddressapprovedbyo365admin");
            }

            set
            {
                this.OnPropertyChanging("EmailAddressO365AdminApprovalStatus");
                this.SetAttributeValue("isemailaddressapprovedbyo365admin", value);
                this.OnPropertyChanged("EmailAddressO365AdminApprovalStatus");
            }
        }

        /// <summary>
        /// Is Exchange Contacts Import Scheduled.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isexchangecontactsimportscheduled")]
        public System.Nullable<bool> IsExchangeContactsImportScheduled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isexchangecontactsimportscheduled");
            }
        }

        /// <summary>
        /// Select whether the mailbox is a forward mailbox.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isforwardmailbox")]
        public System.Nullable<bool> IsForwardMailbox
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isforwardmailbox");
            }
        }

        /// <summary>
        /// 
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isoauthaccesstokenset")]
        public System.Nullable<bool> IsOauthAccessTokenSet
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isoauthaccesstokenset");
            }
        }

        /// <summary>
        /// 
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isoauthrefreshtokenset")]
        public System.Nullable<bool> IsOauthRefreshTokenSet
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isoauthrefreshtokenset");
            }
        }

        /// <summary>
        /// 
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ispasswordset")]
        public System.Nullable<bool> IsPasswordSet
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ispasswordset");
            }
        }

        /// <summary>
        /// Select whether the mailbox corresponds to one for the service account.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isserviceaccount")]
        public System.Nullable<bool> IsServiceAccount
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isserviceaccount");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("itemsfailedforlastsync")]
        public System.Nullable<int> ItemsFailedForLastSync
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("itemsfailedforlastsync");
            }

            set
            {
                this.OnPropertyChanging("ItemsFailedForLastSync");
                this.SetAttributeValue("itemsfailedforlastsync", value);
                this.OnPropertyChanged("ItemsFailedForLastSync");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("itemsprocessedforlastsync")]
        public System.Nullable<int> ItemsProcessedForLastSync
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("itemsprocessedforlastsync");
            }

            set
            {
                this.OnPropertyChanging("ItemsProcessedForLastSync");
                this.SetAttributeValue("itemsprocessedforlastsync", value);
                this.OnPropertyChanged("ItemsProcessedForLastSync");
            }
        }

        /// <summary>
        /// Shows the date and time when the Exchange web services URL was last discovered using the AutoDiscover service.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastautodiscoveredon")]
        public System.Nullable<System.DateTime> LastAutoDiscoveredOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastautodiscoveredon");
            }

            set
            {
                this.OnPropertyChanging("LastAutoDiscoveredOn");
                this.SetAttributeValue("lastautodiscoveredon", value);
                this.OnPropertyChanged("LastAutoDiscoveredOn");
            }
        }

        /// <summary>
        /// Last Duration for the mailbox
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastduration")]
        public System.Nullable<int> MonitorLastDurationPerformance
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("lastduration");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastmailboxforcedunlockoccurredon")]
        public System.Nullable<System.DateTime> LastDateTimeWhenAMailboxGotForcedUnlocked
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastmailboxforcedunlockoccurredon");
            }
        }

        /// <summary>
        /// Last Successful Sync Time
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastsuccessfulsynccompletedon")]
        public System.Nullable<System.DateTime> LastSuccessfulSyncTime
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastsuccessfulsynccompletedon");
            }

            set
            {
                this.OnPropertyChanging("LastSuccessfulSyncTime");
                this.SetAttributeValue("lastsuccessfulsynccompletedon", value);
                this.OnPropertyChanged("LastSuccessfulSyncTime");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastsyncerror")]
        public string LastSyncErrorStack
        {
            get
            {
                return this.GetAttributeValue<string>("lastsyncerror");
            }

            set
            {
                this.OnPropertyChanging("LastSyncErrorStack");
                this.SetAttributeValue("lastsyncerror", value);
                this.OnPropertyChanged("LastSyncErrorStack");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastsyncerrorcode")]
        public System.Nullable<int> LastSyncErrorCode
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("lastsyncerrorcode");
            }

            set
            {
                this.OnPropertyChanging("LastSyncErrorCode");
                this.SetAttributeValue("lastsyncerrorcode", value);
                this.OnPropertyChanged("LastSyncErrorCode");
            }
        }

        /// <summary>
        /// For internal use only
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastsyncerrorcount")]
        public System.Nullable<int> LastSyncErrorContinuousCount
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("lastsyncerrorcount");
            }

            set
            {
                this.OnPropertyChanging("LastSyncErrorContinuousCount");
                this.SetAttributeValue("lastsyncerrorcount", value);
                this.OnPropertyChanged("LastSyncErrorContinuousCount");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastsyncerrormachinename")]
        public string LastSyncErrorMachineName
        {
            get
            {
                return this.GetAttributeValue<string>("lastsyncerrormachinename");
            }

            set
            {
                this.OnPropertyChanging("LastSyncErrorMachineName");
                this.SetAttributeValue("lastsyncerrormachinename", value);
                this.OnPropertyChanged("LastSyncErrorMachineName");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastsyncerroroccurredon")]
        public System.Nullable<System.DateTime> LastSyncErrorTime
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastsyncerroroccurredon");
            }

            set
            {
                this.OnPropertyChanging("LastSyncErrorTime");
                this.SetAttributeValue("lastsyncerroroccurredon", value);
                this.OnPropertyChanged("LastSyncErrorTime");
            }
        }

        /// <summary>
        /// Last Sync Start Time
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastsyncstartedon")]
        public System.Nullable<System.DateTime> LastSyncStartTime
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastsyncstartedon");
            }
        }

        /// <summary>
        /// Identifies the last MessageId that has been processed for tagging in the remote system.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lasttaggedmessageid")]
        public string LastTaggedMessageId
        {
            get
            {
                return this.GetAttributeValue<string>("lasttaggedmessageid");
            }

            set
            {
                this.OnPropertyChanging("LastTaggedMessageId");
                this.SetAttributeValue("lasttaggedmessageid", value);
                this.OnPropertyChanged("LastTaggedMessageId");
            }
        }

        /// <summary>
        /// Unique identifier of the mailbox.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mailboxid")]
        public System.Nullable<System.Guid> MailboxId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("mailboxid");
            }

            set
            {
                this.OnPropertyChanging("MailboxId");
                this.SetAttributeValue("mailboxid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }

                this.OnPropertyChanged("MailboxId");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mailboxid")]
        public override System.Guid Id
        {
            get
            {
                return base.Id;
            }

            set
            {
                this.MailboxId = value;
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mailboxprocessingcontext")]
        public System.Nullable<int> ProcessingContextOfTheMailbox
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("mailboxprocessingcontext");
            }

            set
            {
                this.OnPropertyChanging("ProcessingContextOfTheMailbox");
                this.SetAttributeValue("mailboxprocessingcontext", value);
                this.OnPropertyChanged("ProcessingContextOfTheMailbox");
            }
        }

        /// <summary>
        /// Last Sync Status for Outgoing, Incoming and ACT as a whole.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mailboxstatus")]
        public System.Nullable<Mailbox_MailboxStatus> MailboxStatus
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("mailboxstatus");
                if ((optionSet != null))
                {
                    return ((Mailbox_MailboxStatus)(System.Enum.ToObject(typeof(Mailbox_MailboxStatus), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }
        }

        /// <summary>
        /// Shows who last updated the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        /// <summary>
        /// Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> ModifiedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Shows who last updated the record on behalf of another user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference ModifiedBy_Delegate
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
        }

        /// <summary>
        /// Type the name of the mailbox.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
        public string Name
        {
            get
            {
                return this.GetAttributeValue<string>("name");
            }

            set
            {
                this.OnPropertyChanging("Name");
                this.SetAttributeValue("name", value);
                this.OnPropertyChanged("Name");
            }
        }

        /// <summary>
        /// The next scheduled ACT sync delay, in seconds, to apply to the mailbox.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("nextscheduledactsyncinseconds")]
        public System.Nullable<int> NextScheduledACTSyncDelayInSeconds
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("nextscheduledactsyncinseconds");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("noactcount")]
        public System.Nullable<int> ZeroAppointmentContactTaskCountForMailbox
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("noactcount");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("noemailcount")]
        public System.Nullable<int> ZeroEmailCountForMailbox
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("noemailcount");
            }
        }

        /// <summary>
        /// Type the Oauth access token for the mailbox.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oauthaccesstoken")]
        public string OauthAccessToken
        {
            get
            {
                return this.GetAttributeValue<string>("oauthaccesstoken");
            }

            set
            {
                this.OnPropertyChanging("OauthAccessToken");
                this.SetAttributeValue("oauthaccesstoken", value);
                this.OnPropertyChanged("OauthAccessToken");
            }
        }

        /// <summary>
        /// Type the Oauth refresh token for the mailbox.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oauthrefreshtoken")]
        public string OauthRefreshToken
        {
            get
            {
                return this.GetAttributeValue<string>("oauthrefreshtoken");
            }

            set
            {
                this.OnPropertyChanging("OauthRefreshToken");
                this.SetAttributeValue("oauthrefreshtoken", value);
                this.OnPropertyChanged("OauthRefreshToken");
            }
        }

        /// <summary>
        /// Date and time when the Oauth token will expire
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oauthtokenexpireson")]
        public System.Nullable<System.DateTime> OauthTokenExpirationDatetime
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("oauthtokenexpireson");
            }

            set
            {
                this.OnPropertyChanging("OauthTokenExpirationDatetime");
                this.SetAttributeValue("oauthtokenexpireson", value);
                this.OnPropertyChanged("OauthTokenExpirationDatetime");
            }
        }

        /// <summary>
        /// Date and time when the last office apps deployment was completed for a mailbox record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("officeappsdeploymentcompleteon")]
        public System.Nullable<System.DateTime> OfficeAppsDeploymentCompletedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("officeappsdeploymentcompleteon");
            }
        }

        /// <summary>
        /// The Office Apps deployment error.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("officeappsdeploymenterror")]
        public string OfficeAppsDeploymentError
        {
            get
            {
                return this.GetAttributeValue<string>("officeappsdeploymenterror");
            }
        }

        /// <summary>
        /// Indicates if the office apps deployment has been scheduled for a mailbox record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("officeappsdeploymentscheduled")]
        public System.Nullable<bool> OfficeAppsDeploymentScheduled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("officeappsdeploymentscheduled");
            }

            set
            {
                this.OnPropertyChanging("OfficeAppsDeploymentScheduled");
                this.SetAttributeValue("officeappsdeploymentscheduled", value);
                this.OnPropertyChanged("OfficeAppsDeploymentScheduled");
            }
        }

        /// <summary>
        /// Indicates the office apps deployment type for a mailbox record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("officeappsdeploymentstatus")]
        public System.Nullable<Mailbox_OfficeAppsDeploymentType> OfficeAppsDeploymentType
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("officeappsdeploymentstatus");
                if ((optionSet != null))
                {
                    return ((Mailbox_OfficeAppsDeploymentType)(System.Enum.ToObject(typeof(Mailbox_OfficeAppsDeploymentType), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("OfficeAppsDeploymentType");
                if ((value == null))
                {
                    this.SetAttributeValue("officeappsdeploymentstatus", null);
                }
                else
                {
                    this.SetAttributeValue("officeappsdeploymentstatus", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("OfficeAppsDeploymentType");
            }
        }

        /// <summary>
        /// Unique identifier of the organization associated with the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
        public Microsoft.Xrm.Sdk.EntityReference Organization
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
            }
        }

        /// <summary>
        /// Indicates if the crm org is to be marked as primary syncing org for the mailbox record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("orgmarkedasprimaryforexchangesync")]
        public System.Nullable<bool> CrmOrgMarkedAsPrimaryOrgForExchangeMailbox
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("orgmarkedasprimaryforexchangesync");
            }

            set
            {
                this.OnPropertyChanging("CrmOrgMarkedAsPrimaryOrgForExchangeMailbox");
                this.SetAttributeValue("orgmarkedasprimaryforexchangesync", value);
                this.OnPropertyChanged("CrmOrgMarkedAsPrimaryOrgForExchangeMailbox");
            }
        }

        /// <summary>
        /// Select how outgoing email will be sent from the mailbox.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingemaildeliverymethod")]
        public System.Nullable<Mailbox_OutgoingEmailDeliveryMethod> OutgoingEmail
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("outgoingemaildeliverymethod");
                if ((optionSet != null))
                {
                    return ((Mailbox_OutgoingEmailDeliveryMethod)(System.Enum.ToObject(typeof(Mailbox_OutgoingEmailDeliveryMethod), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("OutgoingEmail");
                if ((value == null))
                {
                    this.SetAttributeValue("outgoingemaildeliverymethod", null);
                }
                else
                {
                    this.SetAttributeValue("outgoingemaildeliverymethod", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("OutgoingEmail");
            }
        }

        /// <summary>
        /// Select the status of outgoing email messages.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingemailstatus")]
        public System.Nullable<Mailbox_OutgoingEmailStatus> OutgoingEmailStatus
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("outgoingemailstatus");
                if ((optionSet != null))
                {
                    return ((Mailbox_OutgoingEmailStatus)(System.Enum.ToObject(typeof(Mailbox_OutgoingEmailStatus), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("OutgoingEmailStatus");
                if ((value == null))
                {
                    this.SetAttributeValue("outgoingemailstatus", null);
                }
                else
                {
                    this.SetAttributeValue("outgoingemailstatus", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("OutgoingEmailStatus");
            }
        }

        /// <summary>
        /// Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference Owner
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }

            set
            {
                this.OnPropertyChanging("Owner");
                this.SetAttributeValue("ownerid", value);
                this.OnPropertyChanged("Owner");
            }
        }

        /// <summary>
        /// Select the business unit that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
        }

        /// <summary>
        /// Unique identifier for the team that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference OwningTeam
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// Unique identifier for the user that owns the record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference OwningUser
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Type the password for the mailbox.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("password")]
        public string Password
        {
            get
            {
                return this.GetAttributeValue<string>("password");
            }

            set
            {
                this.OnPropertyChanging("Password");
                this.SetAttributeValue("password", value);
                this.OnPropertyChanged("Password");
            }
        }

        /// <summary>
        /// Shows the date and time when processing will begin on this mailbox.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("postponemailboxprocessinguntil")]
        public System.Nullable<System.DateTime> PostponeMailboxProcessingUntil
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("postponemailboxprocessinguntil");
            }

            set
            {
                this.OnPropertyChanging("PostponeMailboxProcessingUntil");
                this.SetAttributeValue("postponemailboxprocessinguntil", value);
                this.OnPropertyChanged("PostponeMailboxProcessingUntil");
            }
        }

        /// <summary>
        /// Shows the date and time when the next outlook mail app install will be run for a mailbox record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("postponeofficeappsdeploymentuntil")]
        public System.Nullable<System.DateTime> PostponeOutlookMailAppInstallUntil
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("postponeofficeappsdeploymentuntil");
            }

            set
            {
                this.OnPropertyChanging("PostponeOutlookMailAppInstallUntil");
                this.SetAttributeValue("postponeofficeappsdeploymentuntil", value);
                this.OnPropertyChanged("PostponeOutlookMailAppInstallUntil");
            }
        }

        /// <summary>
        /// Shows the date and time when the mailbox can start sending emails.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("postponesendinguntil")]
        public System.Nullable<System.DateTime> PostponeSendingUntil
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("postponesendinguntil");
            }

            set
            {
                this.OnPropertyChanging("PostponeSendingUntil");
                this.SetAttributeValue("postponesendinguntil", value);
                this.OnPropertyChanged("PostponeSendingUntil");
            }
        }

        /// <summary>
        /// Shows the date and time when the next email configuration test will be run for a mailbox record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("postponetestemailconfigurationuntil")]
        public System.Nullable<System.DateTime> PostponeTestEmailConfigurationUntil
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("postponetestemailconfigurationuntil");
            }

            set
            {
                this.OnPropertyChanging("PostponeTestEmailConfigurationUntil");
                this.SetAttributeValue("postponetestemailconfigurationuntil", value);
                this.OnPropertyChanged("PostponeTestEmailConfigurationUntil");
            }
        }

        /// <summary>
        /// Select whether to delete emails from the mailbox after processing.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processanddeleteemails")]
        public System.Nullable<bool> DeleteEmailsAfterProcessing
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("processanddeleteemails");
            }

            set
            {
                this.OnPropertyChanging("DeleteEmailsAfterProcessing");
                this.SetAttributeValue("processanddeleteemails", value);
                this.OnPropertyChanged("DeleteEmailsAfterProcessing");
            }
        }

        /// <summary>
        /// The number of times mailbox has processed
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processedtimes")]
        public System.Nullable<int> MonitorPerformance
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("processedtimes");
            }
        }

        /// <summary>
        /// Shows the date and time to start processing email received by the mailbox.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processemailreceivedafter")]
        public System.Nullable<System.DateTime> ProcessEmailReceivedAfter
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("processemailreceivedafter");
            }

            set
            {
                this.OnPropertyChanging("ProcessEmailReceivedAfter");
                this.SetAttributeValue("processemailreceivedafter", value);
                this.OnPropertyChanged("ProcessEmailReceivedAfter");
            }
        }

        /// <summary>
        /// Date and time when the processing of the mailbox was last attempted.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processinglastattemptedon")]
        public System.Nullable<System.DateTime> DateProcessingLastAttempted
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("processinglastattemptedon");
            }
        }

        /// <summary>
        /// Information that indicates whether email will be processed for this mailbox
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processingstatecode")]
        public System.Nullable<int> MailboxProcessingState
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("processingstatecode");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("receivingpostponeduntil")]
        public System.Nullable<System.DateTime> PostponeReceivingEmailsForTheMailboxUntilTheSpecifiedDataAndTime
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("receivingpostponeduntil");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("receivingpostponeduntilforact")]
        public System.Nullable<System.DateTime> PostponeProcessingAppointmentsContactsAndTasksForTheMailboxUntilTheSpecifiedDataAndTime
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("receivingpostponeduntilforact");
            }
        }

        /// <summary>
        /// Choose the user associated to the mailbox.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        public Microsoft.Xrm.Sdk.EntityReference Regarding
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("regardingobjectid");
            }
        }

        /// <summary>
        /// Shows whether the mailbox is active or inactive.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public System.Nullable<Mailbox_Status> Status
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
                if ((optionSet != null))
                {
                    return ((Mailbox_Status)(System.Enum.ToObject(typeof(Mailbox_Status), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("Status");
                if ((value == null))
                {
                    this.SetAttributeValue("statecode", null);
                }
                else
                {
                    this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("Status");
            }
        }

        /// <summary>
        /// Select the mailbox's status.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public System.Nullable<Mailbox_StatusReason> StatusReason
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
                if ((optionSet != null))
                {
                    return ((Mailbox_StatusReason)(System.Enum.ToObject(typeof(Mailbox_StatusReason), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("StatusReason");
                if ((value == null))
                {
                    this.SetAttributeValue("statuscode", null);
                }
                else
                {
                    this.SetAttributeValue("statuscode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("StatusReason");
            }
        }

        /// <summary>
        /// Identifies the timestamp after for which emails should be tagged in the remote system.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("tagemailsafter")]
        public System.Nullable<System.DateTime> TagEmailsAfter
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("tagemailsafter");
            }

            set
            {
                this.OnPropertyChanging("TagEmailsAfter");
                this.SetAttributeValue("tagemailsafter", value);
                this.OnPropertyChanged("TagEmailsAfter");
            }
        }

        /// <summary>
        /// Shows the number of times an email configuration test has been performed.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("testemailconfigurationretrycount")]
        public System.Nullable<int> TestEmailConfigurationRetryCount
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("testemailconfigurationretrycount");
            }

            set
            {
                this.OnPropertyChanging("TestEmailConfigurationRetryCount");
                this.SetAttributeValue("testemailconfigurationretrycount", value);
                this.OnPropertyChanged("TestEmailConfigurationRetryCount");
            }
        }

        /// <summary>
        /// Indicates if the email configuration test has been scheduled for a mailbox record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("testemailconfigurationscheduled")]
        public System.Nullable<bool> TestEmailConfigurationScheduled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("testemailconfigurationscheduled");
            }

            set
            {
                this.OnPropertyChanging("TestEmailConfigurationScheduled");
                this.SetAttributeValue("testemailconfigurationscheduled", value);
                this.OnPropertyChanged("TestEmailConfigurationScheduled");
            }
        }

        /// <summary>
        /// Date and time when the last email configuration test was completed for a mailbox record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("testmailboxaccesscompletedon")]
        public System.Nullable<System.DateTime> MailboxTestCompletedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("testmailboxaccesscompletedon");
            }

            set
            {
                this.OnPropertyChanging("MailboxTestCompletedOn");
                this.SetAttributeValue("testmailboxaccesscompletedon", value);
                this.OnPropertyChanged("MailboxTestCompletedOn");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> TimeZoneRuleVersionNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }

            set
            {
                this.OnPropertyChanging("TimeZoneRuleVersionNumber");
                this.SetAttributeValue("timezoneruleversionnumber", value);
                this.OnPropertyChanged("TimeZoneRuleVersionNumber");
            }
        }

        /// <summary>
        /// Concatenation of transient failure counts of all mailbox operations.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transientfailurecount")]
        public System.Nullable<int> TransientFailureCount
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("transientfailurecount");
            }
        }

        /// <summary>
        /// Shows the ID of the Undeliverable folder in the mailbox managed by Microsoft Exchange.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("undeliverablefolder")]
        public string UndeliverableFolder
        {
            get
            {
                return this.GetAttributeValue<string>("undeliverablefolder");
            }

            set
            {
                this.OnPropertyChanging("UndeliverableFolder");
                this.SetAttributeValue("undeliverablefolder", value);
                this.OnPropertyChanged("UndeliverableFolder");
            }
        }

        /// <summary>
        /// Type a user name used for mailbox authentication.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("username")]
        public string UserName
        {
            get
            {
                return this.GetAttributeValue<string>("username");
            }

            set
            {
                this.OnPropertyChanging("UserName");
                this.SetAttributeValue("username", value);
                this.OnPropertyChanged("UserName");
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> UTCConversionTimeZoneCode
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }

            set
            {
                this.OnPropertyChanging("UTCConversionTimeZoneCode");
                this.SetAttributeValue("utcconversiontimezonecode", value);
                this.OnPropertyChanged("UTCConversionTimeZoneCode");
            }
        }

        /// <summary>
        /// Indicates if verbose tracing needs to be enabled for this mailbox.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("verboseloggingenabled")]
        public System.Nullable<int> VerboseLogging
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("verboseloggingenabled");
            }

            set
            {
                this.OnPropertyChanging("VerboseLogging");
                this.SetAttributeValue("verboseloggingenabled", value);
                this.OnPropertyChanged("VerboseLogging");
            }
        }

        /// <summary>
        /// Version number of the mailbox.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> VersionNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N activitypointer_sendermailboxid_mailbox
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("activitypointer_sendermailboxid_mailbox")]
        public System.Collections.Generic.IEnumerable<ActivityPointer> Activities_SendersMailbox
        {
            get
            {
                return this.GetRelatedEntities<ActivityPointer>("activitypointer_sendermailboxid_mailbox", null);
            }

            set
            {
                this.OnPropertyChanging("Activities_SendersMailbox");
                this.SetRelatedEntities<ActivityPointer>("activitypointer_sendermailboxid_mailbox", null, value);
                this.OnPropertyChanged("Activities_SendersMailbox");
            }
        }

        /// <summary>
        /// 1:N bulkoperation_mailbox_sendermailboxid
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bulkoperation_mailbox_sendermailboxid")]
        public System.Collections.Generic.IEnumerable<QuickCampaign> QuickCampaigns_SendersMailbox
        {
            get
            {
                return this.GetRelatedEntities<QuickCampaign>("bulkoperation_mailbox_sendermailboxid", null);
            }

            set
            {
                this.OnPropertyChanging("QuickCampaigns_SendersMailbox");
                this.SetRelatedEntities<QuickCampaign>("bulkoperation_mailbox_sendermailboxid", null, value);
                this.OnPropertyChanged("QuickCampaigns_SendersMailbox");
            }
        }

        /// <summary>
        /// 1:N campaignactivity_mailbox_sendermailboxid
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("campaignactivity_mailbox_sendermailboxid")]
        public System.Collections.Generic.IEnumerable<CampaignActivity> CampaignActivities_SendersMailbox
        {
            get
            {
                return this.GetRelatedEntities<CampaignActivity>("campaignactivity_mailbox_sendermailboxid", null);
            }

            set
            {
                this.OnPropertyChanging("CampaignActivities_SendersMailbox");
                this.SetRelatedEntities<CampaignActivity>("campaignactivity_mailbox_sendermailboxid", null, value);
                this.OnPropertyChanged("CampaignActivities_SendersMailbox");
            }
        }

        /// <summary>
        /// 1:N campaignresponse_mailbox_sendermailboxid
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("campaignresponse_mailbox_sendermailboxid")]
        public System.Collections.Generic.IEnumerable<CampaignResponse> CampaignResponses_SendersMailbox
        {
            get
            {
                return this.GetRelatedEntities<CampaignResponse>("campaignresponse_mailbox_sendermailboxid", null);
            }

            set
            {
                this.OnPropertyChanging("CampaignResponses_SendersMailbox");
                this.SetRelatedEntities<CampaignResponse>("campaignresponse_mailbox_sendermailboxid", null, value);
                this.OnPropertyChanged("CampaignResponses_SendersMailbox");
            }
        }

        /// <summary>
        /// 1:N email_sendermailboxid_mailbox
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("email_sendermailboxid_mailbox")]
        public System.Collections.Generic.IEnumerable<Email> EmailMessages_SendersMailbox
        {
            get
            {
                return this.GetRelatedEntities<Email>("email_sendermailboxid_mailbox", null);
            }

            set
            {
                this.OnPropertyChanging("EmailMessages_SendersMailbox");
                this.SetRelatedEntities<Email>("email_sendermailboxid_mailbox", null, value);
                this.OnPropertyChanged("EmailMessages_SendersMailbox");
            }
        }

        /// <summary>
        /// 1:N Mailbox_Annotation
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Mailbox_Annotation")]
        public System.Collections.Generic.IEnumerable<Annotation> Notes_Regarding
        {
            get
            {
                return this.GetRelatedEntities<Annotation>("Mailbox_Annotation", null);
            }

            set
            {
                this.OnPropertyChanging("Notes_Regarding");
                this.SetRelatedEntities<Annotation>("Mailbox_Annotation", null, value);
                this.OnPropertyChanged("Notes_Regarding");
            }
        }

        /// <summary>
        /// 1:N mailbox_asyncoperations
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mailbox_asyncoperations")]
        public System.Collections.Generic.IEnumerable<SystemJob> SystemJobs_Regarding
        {
            get
            {
                return this.GetRelatedEntities<SystemJob>("mailbox_asyncoperations", null);
            }

            set
            {
                this.OnPropertyChanging("SystemJobs_Regarding");
                this.SetRelatedEntities<SystemJob>("mailbox_asyncoperations", null, value);
                this.OnPropertyChanged("SystemJobs_Regarding");
            }
        }

        /// <summary>
        /// 1:N mailbox_email_ReceivingMailboxId
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mailbox_email_ReceivingMailboxId")]
        public System.Collections.Generic.IEnumerable<Email> EmailMessages_ReceivingMailbox
        {
            get
            {
                return this.GetRelatedEntities<Email>("mailbox_email_ReceivingMailboxId", null);
            }

            set
            {
                this.OnPropertyChanging("EmailMessages_ReceivingMailbox");
                this.SetRelatedEntities<Email>("mailbox_email_ReceivingMailboxId", null, value);
                this.OnPropertyChanged("EmailMessages_ReceivingMailbox");
            }
        }

        /// <summary>
        /// 1:N Mailbox_MailboxTrackingFolder
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Mailbox_MailboxTrackingFolder")]
        public System.Collections.Generic.IEnumerable<MailboxAutoTrackingFolder> MailboxAutoTrackingFolders_MailboxId
        {
            get
            {
                return this.GetRelatedEntities<MailboxAutoTrackingFolder>("Mailbox_MailboxTrackingFolder", null);
            }

            set
            {
                this.OnPropertyChanging("MailboxAutoTrackingFolders_MailboxId");
                this.SetRelatedEntities<MailboxAutoTrackingFolder>("Mailbox_MailboxTrackingFolder", null, value);
                this.OnPropertyChanged("MailboxAutoTrackingFolders_MailboxId");
            }
        }

        /// <summary>
        /// 1:N mailbox_processsessions
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mailbox_processsessions")]
        public System.Collections.Generic.IEnumerable<ProcessSession> ProcessSessions_Regarding
        {
            get
            {
                return this.GetRelatedEntities<ProcessSession>("mailbox_processsessions", null);
            }

            set
            {
                this.OnPropertyChanging("ProcessSessions_Regarding");
                this.SetRelatedEntities<ProcessSession>("mailbox_processsessions", null, value);
                this.OnPropertyChanged("ProcessSessions_Regarding");
            }
        }

        /// <summary>
        /// 1:N Mailbox_SyncErrors
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Mailbox_SyncErrors")]
        public System.Collections.Generic.IEnumerable<SyncError> SyncErrors_Record
        {
            get
            {
                return this.GetRelatedEntities<SyncError>("Mailbox_SyncErrors", null);
            }

            set
            {
                this.OnPropertyChanging("SyncErrors_Record");
                this.SetRelatedEntities<SyncError>("Mailbox_SyncErrors", null, value);
                this.OnPropertyChanged("SyncErrors_Record");
            }
        }

        /// <summary>
        /// 1:N mailbox_userentityinstancedatas
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mailbox_userentityinstancedatas")]
        public System.Collections.Generic.IEnumerable<UserEntityInstanceData> UserEntityInstanceData_ObjectId
        {
            get
            {
                return this.GetRelatedEntities<UserEntityInstanceData>("mailbox_userentityinstancedatas", null);
            }

            set
            {
                this.OnPropertyChanging("UserEntityInstanceData_ObjectId");
                this.SetRelatedEntities<UserEntityInstanceData>("mailbox_userentityinstancedatas", null, value);
                this.OnPropertyChanged("UserEntityInstanceData_ObjectId");
            }
        }

        /// <summary>
        /// 1:N serviceappointment_mailbox_sendermailboxid
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("serviceappointment_mailbox_sendermailboxid")]
        public System.Collections.Generic.IEnumerable<ServiceAppointment> Appointments_SendersMailbox
        {
            get
            {
                return this.GetRelatedEntities<ServiceAppointment>("serviceappointment_mailbox_sendermailboxid", null);
            }

            set
            {
                this.OnPropertyChanging("Appointments_SendersMailbox");
                this.SetRelatedEntities<ServiceAppointment>("serviceappointment_mailbox_sendermailboxid", null, value);
                this.OnPropertyChanged("Appointments_SendersMailbox");
            }
        }

        /// <summary>
        /// 1:N systemuser_defaultmailbox_mailbox
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("systemuser_defaultmailbox_mailbox")]
        public System.Collections.Generic.IEnumerable<SystemUser> Users_Mailbox
        {
            get
            {
                return this.GetRelatedEntities<SystemUser>("systemuser_defaultmailbox_mailbox", null);
            }

            set
            {
                this.OnPropertyChanging("Users_Mailbox");
                this.SetRelatedEntities<SystemUser>("systemuser_defaultmailbox_mailbox", null, value);
                this.OnPropertyChanged("Users_Mailbox");
            }
        }

        /// <summary>
        /// N:1 business_unit_mailbox
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_mailbox")]
        public BusinessUnit Mailboxes_OwningBusinessUnit
        {
            get
            {
                return this.GetRelatedEntity<BusinessUnit>("business_unit_mailbox", null);
            }
        }

        /// <summary>
        /// N:1 lk_mailbox_createdby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_mailbox_createdby")]
        public SystemUser Mailboxes_CreatedBy
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("lk_mailbox_createdby", null);
            }
        }

        /// <summary>
        /// N:1 lk_mailbox_createdonbehalfby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_mailbox_createdonbehalfby")]
        public SystemUser Mailboxes_CreatedBy_Delegate
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("lk_mailbox_createdonbehalfby", null);
            }
        }

        /// <summary>
        /// N:1 lk_mailbox_modifiedby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_mailbox_modifiedby")]
        public SystemUser Mailboxes_ModifiedBy
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("lk_mailbox_modifiedby", null);
            }
        }

        /// <summary>
        /// N:1 lk_mailbox_modifiedonbehalfby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_mailbox_modifiedonbehalfby")]
        public SystemUser Mailboxes_ModifiedBy_Delegate
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("lk_mailbox_modifiedonbehalfby", null);
            }
        }

        /// <summary>
        /// N:1 mailbox_regarding_systemuser
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mailbox_regarding_systemuser")]
        public SystemUser Mailboxes_Regarding2
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("mailbox_regarding_systemuser", null);
            }
        }

        /// <summary>
        /// N:1 team_mailbox
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_mailbox")]
        public Team Mailboxes_OwningTeam
        {
            get
            {
                return this.GetRelatedEntity<Team>("team_mailbox", null);
            }
        }

        /// <summary>
        /// N:1 user_mailbox
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_mailbox")]
        public SystemUser Mailboxes_OwningUser
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("user_mailbox", null);
            }
        }
    }
}
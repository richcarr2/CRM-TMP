//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using VA.TMP.OptionSets;
using VA.TMP.DataModel.OptionSets;

namespace VA.TMP.DataModel
{
    /// <summary>
    /// Task performed, or to be performed, by a user for planning or running a campaign.
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("campaignactivity")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.1.0.71")]
    public partial class CampaignActivity : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Default Constructor.
        /// </summary>
        public CampaignActivity(): base(EntityLogicalName)
        {
        }

        public const string EntityLogicalName = "campaignactivity";
        public const string EntityLogicalCollectionName = "campaignactivities";
        public const string EntitySetName = "campaignactivities";
        public const int EntityTypeCode = 4402;
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
        private void OnPropertyChanged(string propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        private void OnPropertyChanging(string propertyName)
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
            }
        }

        /// <summary>
        /// Additional information provided by the external application as JSON. For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityadditionalparams")]
        public string ActivityAdditionalParameters
        {
            get
            {
                return this.GetAttributeValue<string>("activityadditionalparams");
            }

            set
            {
                this.OnPropertyChanging("ActivityAdditionalParameters");
                this.SetAttributeValue("activityadditionalparams", value);
                this.OnPropertyChanged("ActivityAdditionalParameters");
            }
        }

        /// <summary>
        /// activity_pointer_campaignactivity
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
        public System.Nullable<System.Guid> CampaignActivityId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("activityid");
            }

            set
            {
                this.OnPropertyChanging("CampaignActivityId");
                this.SetAttributeValue("activityid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }

                this.OnPropertyChanged("CampaignActivityId");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
        public override System.Guid Id
        {
            get
            {
                return base.Id;
            }

            set
            {
                this.CampaignActivityId = value;
            }
        }

        /// <summary>
        /// Type of activity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activitytypecode")]
        public string ActivityType
        {
            get
            {
                return this.GetAttributeValue<string>("activitytypecode");
            }
        }

        /// <summary>
        /// Type the actual cost of the campaign activity. The value entered is rolled up to the related campaign in the total cost calculations.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualcost")]
        public Microsoft.Xrm.Sdk.Money ActualCost
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("actualcost");
            }

            set
            {
                this.OnPropertyChanging("ActualCost");
                this.SetAttributeValue("actualcost", value);
                this.OnPropertyChanged("ActualCost");
            }
        }

        /// <summary>
        /// Shows the Actual Cost field converted to the system's default base currency for reporting purposes. The calculations use the exchange rate specified in the Currencies area.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualcost_base")]
        public Microsoft.Xrm.Sdk.Money ActualCost_Base
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("actualcost_base");
            }
        }

        /// <summary>
        /// Shows the value selected in the Duration field on the campaign activity. The duration is used to report the time spent on the activity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualdurationminutes")]
        public System.Nullable<int> ActualDuration
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("actualdurationminutes");
            }

            set
            {
                this.OnPropertyChanging("ActualDuration");
                this.SetAttributeValue("actualdurationminutes", value);
                this.OnPropertyChanged("ActualDuration");
            }
        }

        /// <summary>
        /// Enter the date when the campaign activity was actually  completed.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualend")]
        public System.Nullable<System.DateTime> ActualEnd
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("actualend");
            }

            set
            {
                this.OnPropertyChanging("ActualEnd");
                this.SetAttributeValue("actualend", value);
                this.OnPropertyChanged("ActualEnd");
            }
        }

        /// <summary>
        /// Enter the actual start date and time for the campaign activity to determine if the campaign activity started on the scheduled time.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualstart")]
        public System.Nullable<System.DateTime> ActualStart
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("actualstart");
            }

            set
            {
                this.OnPropertyChanging("ActualStart");
                this.SetAttributeValue("actualstart", value);
                this.OnPropertyChanged("ActualStart");
            }
        }

        /// <summary>
        /// Blind Carbon-copy (bcc) recipients of the activity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("bcc")]
        public System.Collections.Generic.IEnumerable<ActivityParty> BCC
        {
            get
            {
                Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("bcc");
                if (((collection != null) && (collection.Entities != null)))
                {
                    return System.Linq.Enumerable.Cast<ActivityParty>(collection.Entities);
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("BCC");
                if ((value == null))
                {
                    this.SetAttributeValue("bcc", value);
                }
                else
                {
                    this.SetAttributeValue("bcc", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
                }

                this.OnPropertyChanged("BCC");
            }
        }

        /// <summary>
        /// Type the allocated budget of the campaign activity for estimated versus actual cost reporting.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("budgetedcost")]
        public Microsoft.Xrm.Sdk.Money BudgetAllocated
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("budgetedcost");
            }

            set
            {
                this.OnPropertyChanging("BudgetAllocated");
                this.SetAttributeValue("budgetedcost", value);
                this.OnPropertyChanged("BudgetAllocated");
            }
        }

        /// <summary>
        /// Shows the Budget Allocated field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("budgetedcost_base")]
        public Microsoft.Xrm.Sdk.Money BudgetAllocated_Base
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("budgetedcost_base");
            }
        }

        /// <summary>
        /// Type a category to identify the campaign activity type, such as new business development or customer retention, to tie the campaign activity to a business group or function.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("category")]
        public string Category
        {
            get
            {
                return this.GetAttributeValue<string>("category");
            }

            set
            {
                this.OnPropertyChanging("Category");
                this.SetAttributeValue("category", value);
                this.OnPropertyChanged("Category");
            }
        }

        /// <summary>
        /// Carbon-copy (cc) recipients of the activity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cc")]
        public System.Collections.Generic.IEnumerable<ActivityParty> CC
        {
            get
            {
                Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("cc");
                if (((collection != null) && (collection.Entities != null)))
                {
                    return System.Linq.Enumerable.Cast<ActivityParty>(collection.Entities);
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("CC");
                if ((value == null))
                {
                    this.SetAttributeValue("cc", value);
                }
                else
                {
                    this.SetAttributeValue("cc", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
                }

                this.OnPropertyChanged("CC");
            }
        }

        /// <summary>
        /// Select how communications for this activity will be sent, such as phone, letter, fax, or email.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("channeltypecode")]
        public System.Nullable<CampaignActivity_Channel> Channel
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("channeltypecode");
                if ((optionSet != null))
                {
                    return ((CampaignActivity_Channel)(System.Enum.ToObject(typeof(CampaignActivity_Channel), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("Channel");
                if ((value == null))
                {
                    this.SetAttributeValue("channeltypecode", null);
                }
                else
                {
                    this.SetAttributeValue("channeltypecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("Channel");
            }
        }

        /// <summary>
        /// Shows how contact about the social activity originated, such as from Twitter or Facebook. This field is read-only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("community")]
        public System.Nullable<SocialChannel2> SocialChannel
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("community");
                if ((optionSet != null))
                {
                    return ((SocialChannel2)(System.Enum.ToObject(typeof(SocialChannel2), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("SocialChannel");
                if ((value == null))
                {
                    this.SetAttributeValue("community", null);
                }
                else
                {
                    this.SetAttributeValue("community", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("SocialChannel");
            }
        }

        /// <summary>
        /// lk_campaignactivity_createdby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference CreatedBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        /// <summary>
        /// Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> CreatedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// lk_campaignactivity_createdonbehalfby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference CreatedBy_Delegate
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
        }

        /// <summary>
        /// Customer with which the activity is associated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customers")]
        public System.Collections.Generic.IEnumerable<ActivityParty> Customers
        {
            get
            {
                Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("customers");
                if (((collection != null) && (collection.Entities != null)))
                {
                    return System.Linq.Enumerable.Cast<ActivityParty>(collection.Entities);
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("Customers");
                if ((value == null))
                {
                    this.SetAttributeValue("customers", value);
                }
                else
                {
                    this.SetAttributeValue("customers", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
                }

                this.OnPropertyChanged("Customers");
            }
        }

        /// <summary>
        /// Date and time when the delivery of the activity was last attempted.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("deliverylastattemptedon")]
        public System.Nullable<System.DateTime> DateDeliveryLastAttempted
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("deliverylastattemptedon");
            }
        }

        /// <summary>
        /// Priority of delivery of the activity to the email server.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("deliveryprioritycode")]
        public System.Nullable<DeliveryPriority2> DeliveryPriority
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("deliveryprioritycode");
                if ((optionSet != null))
                {
                    return ((DeliveryPriority2)(System.Enum.ToObject(typeof(DeliveryPriority2), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("DeliveryPriority");
                if ((value == null))
                {
                    this.SetAttributeValue("deliveryprioritycode", null);
                }
                else
                {
                    this.SetAttributeValue("deliveryprioritycode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("DeliveryPriority");
            }
        }

        /// <summary>
        /// Type additional information to describe the campaign activity, such as key talking points, objectives, or details about the target audience.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
        public string Description
        {
            get
            {
                return this.GetAttributeValue<string>("description");
            }

            set
            {
                this.OnPropertyChanging("Description");
                this.SetAttributeValue("description", value);
                this.OnPropertyChanged("Description");
            }
        }

        /// <summary>
        /// Select whether to override the opt-out settings on leads, contacts, and accounts for the members of the target marketing lists of the campaign activity. If No is selected, marketing materials will be sent to members who have opted out.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("donotsendonoptout")]
        public System.Nullable<bool> ExcludeMembersWhoOptOut
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("donotsendonoptout");
            }

            set
            {
                this.OnPropertyChanging("ExcludeMembersWhoOptOut");
                this.SetAttributeValue("donotsendonoptout", value);
                this.OnPropertyChanged("ExcludeMembersWhoOptOut");
            }
        }

        /// <summary>
        /// The message id of activity which is returned from Exchange Server.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangeitemid")]
        public string ExchangeItemID
        {
            get
            {
                return this.GetAttributeValue<string>("exchangeitemid");
            }

            set
            {
                this.OnPropertyChanging("ExchangeItemID");
                this.SetAttributeValue("exchangeitemid", value);
                this.OnPropertyChanged("ExchangeItemID");
            }
        }

        /// <summary>
        /// Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
        public System.Nullable<decimal> ExchangeRate
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
            }
        }

        /// <summary>
        /// Shows the web link of Activity of type email.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangeweblink")]
        public string ExchangeWebLink
        {
            get
            {
                return this.GetAttributeValue<string>("exchangeweblink");
            }

            set
            {
                this.OnPropertyChanging("ExchangeWebLink");
                this.SetAttributeValue("exchangeweblink", value);
                this.OnPropertyChanged("ExchangeWebLink");
            }
        }

        /// <summary>
        /// Limits the frequency (in days) of marketing activities directed at any contact. Contacts that have been contacted more recently than this will be excluded from new campaign activity distributions. Enter a value of zero to disable the limit.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("excludeifcontactedinxdays")]
        public System.Nullable<int> NoOfDays
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("excludeifcontactedinxdays");
            }

            set
            {
                this.OnPropertyChanging("NoOfDays");
                this.SetAttributeValue("excludeifcontactedinxdays", value);
                this.OnPropertyChanged("NoOfDays");
            }
        }

        /// <summary>
        /// For system use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("from")]
        public System.Collections.Generic.IEnumerable<ActivityParty> From
        {
            get
            {
                Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("from");
                if (((collection != null) && (collection.Entities != null)))
                {
                    return System.Linq.Enumerable.Cast<ActivityParty>(collection.Entities);
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("From");
                if ((value == null))
                {
                    this.SetAttributeValue("from", value);
                }
                else
                {
                    this.SetAttributeValue("from", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
                }

                this.OnPropertyChanged("From");
            }
        }

        /// <summary>
        /// Select whether inactive marketing list members will be excluded from the campaign activity distribution.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ignoreinactivelistmembers")]
        public System.Nullable<bool> IgnoreInactiveMarketingListMembers
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ignoreinactivelistmembers");
            }

            set
            {
                this.OnPropertyChanging("IgnoreInactiveMarketingListMembers");
                this.SetAttributeValue("ignoreinactivelistmembers", value);
                this.OnPropertyChanged("IgnoreInactiveMarketingListMembers");
            }
        }

        /// <summary>
        /// Unique identifier of the data import or data migration that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> ImportSequenceNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }

            set
            {
                this.OnPropertyChanging("ImportSequenceNumber");
                this.SetAttributeValue("importsequencenumber", value);
                this.OnPropertyChanged("ImportSequenceNumber");
            }
        }

        /// <summary>
        /// Type of instance of a recurring series.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("instancetypecode")]
        public System.Nullable<CampaignActivity_AppointmentType> RecurringInstanceType
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("instancetypecode");
                if ((optionSet != null))
                {
                    return ((CampaignActivity_AppointmentType)(System.Enum.ToObject(typeof(CampaignActivity_AppointmentType), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }
        }

        /// <summary>
        /// Information regarding whether the campaign activity was billed as part of resolving a case.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isbilled")]
        public System.Nullable<bool> IsBilled
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isbilled");
            }

            set
            {
                this.OnPropertyChanging("IsBilled");
                this.SetAttributeValue("isbilled", value);
                this.OnPropertyChanged("IsBilled");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismapiprivate")]
        public System.Nullable<bool> IsPrivate
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("ismapiprivate");
            }

            set
            {
                this.OnPropertyChanging("IsPrivate");
                this.SetAttributeValue("ismapiprivate", value);
                this.OnPropertyChanged("IsPrivate");
            }
        }

        /// <summary>
        /// Information regarding whether the activity is a regular activity type or event type.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isregularactivity")]
        public System.Nullable<bool> IsRegularActivity
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isregularactivity");
            }
        }

        /// <summary>
        /// Information about whether the campaign activity is created by a workflow rule.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isworkflowcreated")]
        public System.Nullable<bool> IsWorkflowCreated
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isworkflowcreated");
            }

            set
            {
                this.OnPropertyChanging("IsWorkflowCreated");
                this.SetAttributeValue("isworkflowcreated", value);
                this.OnPropertyChanged("IsWorkflowCreated");
            }
        }

        /// <summary>
        /// Contains the date and time stamp of the last on hold time.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastonholdtime")]
        public System.Nullable<System.DateTime> LastOnHoldTime
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastonholdtime");
            }

            set
            {
                this.OnPropertyChanging("LastOnHoldTime");
                this.SetAttributeValue("lastonholdtime", value);
                this.OnPropertyChanged("LastOnHoldTime");
            }
        }

        /// <summary>
        /// Left the voice mail
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("leftvoicemail")]
        public System.Nullable<bool> LeftVoiceMail
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("leftvoicemail");
            }

            set
            {
                this.OnPropertyChanging("LeftVoiceMail");
                this.SetAttributeValue("leftvoicemail", value);
                this.OnPropertyChanged("LeftVoiceMail");
            }
        }

        /// <summary>
        /// lk_campaignactivity_modifiedby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        /// <summary>
        /// Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> ModifiedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// lk_campaignactivity_modifiedonbehalfby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference ModifiedBy_Delegate
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
        }

        /// <summary>
        /// Shows how long, in minutes, that the record was on hold.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("onholdtime")]
        public System.Nullable<int> OnHoldTime_Minutes
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("onholdtime");
            }
        }

        /// <summary>
        /// List of optional attendees for the activity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("optionalattendees")]
        public System.Collections.Generic.IEnumerable<ActivityParty> OptionalAttendees
        {
            get
            {
                Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("optionalattendees");
                if (((collection != null) && (collection.Entities != null)))
                {
                    return System.Linq.Enumerable.Cast<ActivityParty>(collection.Entities);
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("OptionalAttendees");
                if ((value == null))
                {
                    this.SetAttributeValue("optionalattendees", value);
                }
                else
                {
                    this.SetAttributeValue("optionalattendees", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
                }

                this.OnPropertyChanged("OptionalAttendees");
            }
        }

        /// <summary>
        /// Person who organized the activity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizer")]
        public System.Collections.Generic.IEnumerable<ActivityParty> Organizer
        {
            get
            {
                Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("organizer");
                if (((collection != null) && (collection.Entities != null)))
                {
                    return System.Linq.Enumerable.Cast<ActivityParty>(collection.Entities);
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("Organizer");
                if ((value == null))
                {
                    this.SetAttributeValue("organizer", value);
                }
                else
                {
                    this.SetAttributeValue("organizer", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
                }

                this.OnPropertyChanged("Organizer");
            }
        }

        /// <summary>
        /// 
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> OverriddenCreatedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }

            set
            {
                this.OnPropertyChanging("OverriddenCreatedOn");
                this.SetAttributeValue("overriddencreatedon", value);
                this.OnPropertyChanged("OverriddenCreatedOn");
            }
        }

        /// <summary>
        /// Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference Owner
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }

            set
            {
                this.OnPropertyChanging("Owner");
                this.SetAttributeValue("ownerid", value);
                this.OnPropertyChanged("Owner");
            }
        }

        /// <summary>
        /// business_unit_campaignactivity_activities
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
        }

        /// <summary>
        /// team_campaignactivity
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference OwningTeam
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// user_campaignactivity
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference OwningUser
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// Enter the vendor accounts or contacts to capture any third-party suppliers used for the campaign activity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("partners")]
        public System.Collections.Generic.IEnumerable<ActivityParty> OutsourceVendors
        {
            get
            {
                Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("partners");
                if (((collection != null) && (collection.Entities != null)))
                {
                    return System.Linq.Enumerable.Cast<ActivityParty>(collection.Entities);
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("OutsourceVendors");
                if ((value == null))
                {
                    this.SetAttributeValue("partners", value);
                }
                else
                {
                    this.SetAttributeValue("partners", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
                }

                this.OnPropertyChanged("OutsourceVendors");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("postponeactivityprocessinguntil")]
        public System.Nullable<System.DateTime> DelayActivityProcessingUntil
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("postponeactivityprocessinguntil");
            }
        }

        /// <summary>
        /// Select the priority so that preferred customers or critical issues are handled quickly.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("prioritycode")]
        public System.Nullable<CampaignActivity_Priority> Priority
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("prioritycode");
                if ((optionSet != null))
                {
                    return ((CampaignActivity_Priority)(System.Enum.ToObject(typeof(CampaignActivity_Priority), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("Priority");
                if ((value == null))
                {
                    this.SetAttributeValue("prioritycode", null);
                }
                else
                {
                    this.SetAttributeValue("prioritycode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("Priority");
            }
        }

        /// <summary>
        /// Shows the ID of the process.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
        public System.Nullable<System.Guid> Process
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
            }

            set
            {
                this.OnPropertyChanging("Process");
                this.SetAttributeValue("processid", value);
                this.OnPropertyChanged("Process");
            }
        }

        /// <summary>
        /// Campaign_CampaignActivities
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        public Microsoft.Xrm.Sdk.EntityReference ParentCampaign
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("regardingobjectid");
            }

            set
            {
                this.OnPropertyChanging("ParentCampaign");
                this.SetAttributeValue("regardingobjectid", value);
                this.OnPropertyChanged("ParentCampaign");
            }
        }

        /// <summary>
        /// List of required attendees for the activity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("requiredattendees")]
        public System.Collections.Generic.IEnumerable<ActivityParty> RequiredAttendees
        {
            get
            {
                Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("requiredattendees");
                if (((collection != null) && (collection.Entities != null)))
                {
                    return System.Linq.Enumerable.Cast<ActivityParty>(collection.Entities);
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("RequiredAttendees");
                if ((value == null))
                {
                    this.SetAttributeValue("requiredattendees", value);
                }
                else
                {
                    this.SetAttributeValue("requiredattendees", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
                }

                this.OnPropertyChanged("RequiredAttendees");
            }
        }

        /// <summary>
        /// Users or facility/equipment that are required for the activity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("resources")]
        public System.Collections.Generic.IEnumerable<ActivityParty> Resources
        {
            get
            {
                Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("resources");
                if (((collection != null) && (collection.Entities != null)))
                {
                    return System.Linq.Enumerable.Cast<ActivityParty>(collection.Entities);
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("Resources");
                if ((value == null))
                {
                    this.SetAttributeValue("resources", value);
                }
                else
                {
                    this.SetAttributeValue("resources", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
                }

                this.OnPropertyChanged("Resources");
            }
        }

        /// <summary>
        /// Scheduled duration, specified in minutes, of the campaign activity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduleddurationminutes")]
        public System.Nullable<int> ScheduledDuration
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("scheduleddurationminutes");
            }
        }

        /// <summary>
        /// Enter the expected due date and time for the activity to be completed to provide details about the timing of the campaign activity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduledend")]
        public System.Nullable<System.DateTime> ScheduledEnd
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduledend");
            }

            set
            {
                this.OnPropertyChanging("ScheduledEnd");
                this.SetAttributeValue("scheduledend", value);
                this.OnPropertyChanged("ScheduledEnd");
            }
        }

        /// <summary>
        /// Enter the expected start date and time for the activity to provide details about timing of the campaign activity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduledstart")]
        public System.Nullable<System.DateTime> ScheduledStart
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduledstart");
            }

            set
            {
                this.OnPropertyChanging("ScheduledStart");
                this.SetAttributeValue("scheduledstart", value);
                this.OnPropertyChanged("ScheduledStart");
            }
        }

        /// <summary>
        /// Unique identifier of the mailbox associated with the sender of the email message.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sendermailboxid")]
        public Microsoft.Xrm.Sdk.EntityReference SendersMailbox
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("sendermailboxid");
            }
        }

        /// <summary>
        /// Date and time when the activity was sent.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("senton")]
        public System.Nullable<System.DateTime> DateSent
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("senton");
            }
        }

        /// <summary>
        /// Uniqueidentifier specifying the id of recurring series of an instance.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("seriesid")]
        public System.Nullable<System.Guid> SeriesId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("seriesid");
            }
        }

        /// <summary>
        /// Unique identifier of the associated service.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serviceid")]
        public Microsoft.Xrm.Sdk.EntityReference Service
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("serviceid");
            }

            set
            {
                this.OnPropertyChanging("Service");
                this.SetAttributeValue("serviceid", value);
                this.OnPropertyChanged("Service");
            }
        }

        /// <summary>
        /// Choose the service level agreement (SLA) that you want to apply to the case record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaid")]
        public Microsoft.Xrm.Sdk.EntityReference SLA
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slaid");
            }

            set
            {
                this.OnPropertyChanging("SLA");
                this.SetAttributeValue("slaid", value);
                this.OnPropertyChanged("SLA");
            }
        }

        /// <summary>
        /// Last SLA that was applied to this case. This field is for internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedid")]
        public Microsoft.Xrm.Sdk.EntityReference LastSLAApplied
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slainvokedid");
            }
        }

        /// <summary>
        /// Shows the date and time by which the activities are sorted.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sortdate")]
        public System.Nullable<System.DateTime> SortDate
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("sortdate");
            }

            set
            {
                this.OnPropertyChanging("SortDate");
                this.SetAttributeValue("sortdate", value);
                this.OnPropertyChanged("SortDate");
            }
        }

        /// <summary>
        /// processstage_campaignactivities
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
        public System.Nullable<System.Guid> ProcessStage
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
            }

            set
            {
                this.OnPropertyChanging("ProcessStage");
                this.SetAttributeValue("stageid", value);
                this.OnPropertyChanged("ProcessStage");
            }
        }

        /// <summary>
        /// Shows whether the campaign activity is open, completed, or canceled. Completed and canceled campaign activities are read-only and can't be edited.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public System.Nullable<CampaignActivity_Status> Status
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
                if ((optionSet != null))
                {
                    return ((CampaignActivity_Status)(System.Enum.ToObject(typeof(CampaignActivity_Status), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("Status");
                if ((value == null))
                {
                    this.SetAttributeValue("statecode", null);
                }
                else
                {
                    this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("Status");
            }
        }

        /// <summary>
        /// Select the campaign activity's status.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public System.Nullable<CampaignActivity_StatusReason> StatusReason
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
                if ((optionSet != null))
                {
                    return ((CampaignActivity_StatusReason)(System.Enum.ToObject(typeof(CampaignActivity_StatusReason), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("StatusReason");
                if ((value == null))
                {
                    this.SetAttributeValue("statuscode", null);
                }
                else
                {
                    this.SetAttributeValue("statuscode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("StatusReason");
            }
        }

        /// <summary>
        /// Type a subcategory to identify the campaign activity type and relate the activity to a specific product, sales region, business group, or other function.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subcategory")]
        public string SubCategory
        {
            get
            {
                return this.GetAttributeValue<string>("subcategory");
            }

            set
            {
                this.OnPropertyChanging("SubCategory");
                this.SetAttributeValue("subcategory", value);
                this.OnPropertyChanged("SubCategory");
            }
        }

        /// <summary>
        /// Type a short description about the objective or primary topic of the campaign activity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subject")]
        public string Subject
        {
            get
            {
                return this.GetAttributeValue<string>("subject");
            }

            set
            {
                this.OnPropertyChanging("Subject");
                this.SetAttributeValue("subject", value);
                this.OnPropertyChanged("Subject");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> TimeZoneRuleVersionNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }

            set
            {
                this.OnPropertyChanging("TimeZoneRuleVersionNumber");
                this.SetAttributeValue("timezoneruleversionnumber", value);
                this.OnPropertyChanged("TimeZoneRuleVersionNumber");
            }
        }

        /// <summary>
        /// Person who is the receiver of the activity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("to")]
        public System.Collections.Generic.IEnumerable<ActivityParty> To
        {
            get
            {
                Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("to");
                if (((collection != null) && (collection.Entities != null)))
                {
                    return System.Linq.Enumerable.Cast<ActivityParty>(collection.Entities);
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("To");
                if ((value == null))
                {
                    this.SetAttributeValue("to", value);
                }
                else
                {
                    this.SetAttributeValue("to", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
                }

                this.OnPropertyChanged("To");
            }
        }

        /// <summary>
        /// transactioncurrency_campaignactivity
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
        public Microsoft.Xrm.Sdk.EntityReference Currency
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
        public string TraversedPath
        {
            get
            {
                return this.GetAttributeValue<string>("traversedpath");
            }

            set
            {
                this.OnPropertyChanging("TraversedPath");
                this.SetAttributeValue("traversedpath", value);
                this.OnPropertyChanged("TraversedPath");
            }
        }

        /// <summary>
        /// Select the type of campaign activity to indicate the purpose of the activity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("typecode")]
        public System.Nullable<CampaignActivity_Type> Type
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("typecode");
                if ((optionSet != null))
                {
                    return ((CampaignActivity_Type)(System.Enum.ToObject(typeof(CampaignActivity_Type), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("Type");
                if ((value == null))
                {
                    this.SetAttributeValue("typecode", null);
                }
                else
                {
                    this.SetAttributeValue("typecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("Type");
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> UTCConversionTimeZoneCode
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }

            set
            {
                this.OnPropertyChanging("UTCConversionTimeZoneCode");
                this.SetAttributeValue("utcconversiontimezonecode", value);
                this.OnPropertyChanged("UTCConversionTimeZoneCode");
            }
        }

        /// <summary>
        /// Version number of the campaign activity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> VersionNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N campaignactivity_activity_parties
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("campaignactivity_activity_parties")]
        public System.Collections.Generic.IEnumerable<ActivityParty> ActivityParties_Activity
        {
            get
            {
                return this.GetRelatedEntities<ActivityParty>("campaignactivity_activity_parties", null);
            }

            set
            {
                this.OnPropertyChanging("ActivityParties_Activity");
                this.SetRelatedEntities<ActivityParty>("campaignactivity_activity_parties", null, value);
                this.OnPropertyChanged("ActivityParties_Activity");
            }
        }

        /// <summary>
        /// 1:N campaignactivity_activityparties
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("campaignactivity_activityparties")]
        public System.Collections.Generic.IEnumerable<ActivityParty> ActivityParties_Party
        {
            get
            {
                return this.GetRelatedEntities<ActivityParty>("campaignactivity_activityparties", null);
            }

            set
            {
                this.OnPropertyChanging("ActivityParties_Party");
                this.SetRelatedEntities<ActivityParty>("campaignactivity_activityparties", null, value);
                this.OnPropertyChanged("ActivityParties_Party");
            }
        }

        /// <summary>
        /// 1:N CampaignActivity_ActivityPointers
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("CampaignActivity_ActivityPointers")]
        public System.Collections.Generic.IEnumerable<ActivityPointer> Activities_Regarding
        {
            get
            {
                return this.GetRelatedEntities<ActivityPointer>("CampaignActivity_ActivityPointers", null);
            }

            set
            {
                this.OnPropertyChanging("Activities_Regarding");
                this.SetRelatedEntities<ActivityPointer>("CampaignActivity_ActivityPointers", null, value);
                this.OnPropertyChanged("Activities_Regarding");
            }
        }

        /// <summary>
        /// 1:N CampaignActivity_Annotation
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("CampaignActivity_Annotation")]
        public System.Collections.Generic.IEnumerable<Annotation> Notes_Regarding
        {
            get
            {
                return this.GetRelatedEntities<Annotation>("CampaignActivity_Annotation", null);
            }

            set
            {
                this.OnPropertyChanging("Notes_Regarding");
                this.SetRelatedEntities<Annotation>("CampaignActivity_Annotation", null, value);
                this.OnPropertyChanged("Notes_Regarding");
            }
        }

        /// <summary>
        /// 1:N CampaignActivity_Appointments
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("CampaignActivity_Appointments")]
        public System.Collections.Generic.IEnumerable<Appointment> ReserveResources_Regarding
        {
            get
            {
                return this.GetRelatedEntities<Appointment>("CampaignActivity_Appointments", null);
            }

            set
            {
                this.OnPropertyChanging("ReserveResources_Regarding");
                this.SetRelatedEntities<Appointment>("CampaignActivity_Appointments", null, value);
                this.OnPropertyChanged("ReserveResources_Regarding");
            }
        }

        /// <summary>
        /// 1:N CampaignActivity_AsyncOperations
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("CampaignActivity_AsyncOperations")]
        public System.Collections.Generic.IEnumerable<SystemJob> SystemJobs_Regarding
        {
            get
            {
                return this.GetRelatedEntities<SystemJob>("CampaignActivity_AsyncOperations", null);
            }

            set
            {
                this.OnPropertyChanging("SystemJobs_Regarding");
                this.SetRelatedEntities<SystemJob>("CampaignActivity_AsyncOperations", null, value);
                this.OnPropertyChanged("SystemJobs_Regarding");
            }
        }

        /// <summary>
        /// 1:N CampaignActivity_BulkDeleteFailures
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("CampaignActivity_BulkDeleteFailures")]
        public System.Collections.Generic.IEnumerable<BulkDeleteFailure> BulkDeleteFailures_Name
        {
            get
            {
                return this.GetRelatedEntities<BulkDeleteFailure>("CampaignActivity_BulkDeleteFailures", null);
            }

            set
            {
                this.OnPropertyChanging("BulkDeleteFailures_Name");
                this.SetRelatedEntities<BulkDeleteFailure>("CampaignActivity_BulkDeleteFailures", null, value);
                this.OnPropertyChanged("BulkDeleteFailures_Name");
            }
        }

        /// <summary>
        /// 1:N CampaignActivity_BulkOperations
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("CampaignActivity_BulkOperations")]
        public System.Collections.Generic.IEnumerable<QuickCampaign> QuickCampaigns_ImportFileName
        {
            get
            {
                return this.GetRelatedEntities<QuickCampaign>("CampaignActivity_BulkOperations", null);
            }

            set
            {
                this.OnPropertyChanging("QuickCampaigns_ImportFileName");
                this.SetRelatedEntities<QuickCampaign>("CampaignActivity_BulkOperations", null, value);
                this.OnPropertyChanged("QuickCampaigns_ImportFileName");
            }
        }

        /// <summary>
        /// 1:N campaignactivity_CampaignResponses
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("campaignactivity_CampaignResponses")]
        public System.Collections.Generic.IEnumerable<CampaignResponse> CampaignResponses_ParentCampaign
        {
            get
            {
                return this.GetRelatedEntities<CampaignResponse>("campaignactivity_CampaignResponses", null);
            }

            set
            {
                this.OnPropertyChanging("CampaignResponses_ParentCampaign");
                this.SetRelatedEntities<CampaignResponse>("campaignactivity_CampaignResponses", null, value);
                this.OnPropertyChanged("CampaignResponses_ParentCampaign");
            }
        }

        /// <summary>
        /// 1:N campaignactivity_connections1
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("campaignactivity_connections1")]
        public System.Collections.Generic.IEnumerable<Connection> Connections_ConnectedFrom
        {
            get
            {
                return this.GetRelatedEntities<Connection>("campaignactivity_connections1", null);
            }

            set
            {
                this.OnPropertyChanging("Connections_ConnectedFrom");
                this.SetRelatedEntities<Connection>("campaignactivity_connections1", null, value);
                this.OnPropertyChanged("Connections_ConnectedFrom");
            }
        }

        /// <summary>
        /// 1:N campaignactivity_connections2
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("campaignactivity_connections2")]
        public System.Collections.Generic.IEnumerable<Connection> Connections_ConnectedTo
        {
            get
            {
                return this.GetRelatedEntities<Connection>("campaignactivity_connections2", null);
            }

            set
            {
                this.OnPropertyChanging("Connections_ConnectedTo");
                this.SetRelatedEntities<Connection>("campaignactivity_connections2", null, value);
                this.OnPropertyChanged("Connections_ConnectedTo");
            }
        }

        /// <summary>
        /// 1:N CampaignActivity_Emails
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("CampaignActivity_Emails")]
        public System.Collections.Generic.IEnumerable<Email> EmailMessages_Regarding
        {
            get
            {
                return this.GetRelatedEntities<Email>("CampaignActivity_Emails", null);
            }

            set
            {
                this.OnPropertyChanging("EmailMessages_Regarding");
                this.SetRelatedEntities<Email>("CampaignActivity_Emails", null, value);
                this.OnPropertyChanged("EmailMessages_Regarding");
            }
        }

        /// <summary>
        /// 1:N CampaignActivity_MailboxTrackingFolder
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("CampaignActivity_MailboxTrackingFolder")]
        public System.Collections.Generic.IEnumerable<MailboxAutoTrackingFolder> MailboxAutoTrackingFolders_RegardingObjectId
        {
            get
            {
                return this.GetRelatedEntities<MailboxAutoTrackingFolder>("CampaignActivity_MailboxTrackingFolder", null);
            }

            set
            {
                this.OnPropertyChanging("MailboxAutoTrackingFolders_RegardingObjectId");
                this.SetRelatedEntities<MailboxAutoTrackingFolder>("CampaignActivity_MailboxTrackingFolder", null, value);
                this.OnPropertyChanged("MailboxAutoTrackingFolders_RegardingObjectId");
            }
        }

        /// <summary>
        /// 1:N campaignactivity_principalobjectattributeaccess
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("campaignactivity_principalobjectattributeaccess")]
        public System.Collections.Generic.IEnumerable<FieldSharing> FieldSharing_EntityInstance
        {
            get
            {
                return this.GetRelatedEntities<FieldSharing>("campaignactivity_principalobjectattributeaccess", null);
            }

            set
            {
                this.OnPropertyChanging("FieldSharing_EntityInstance");
                this.SetRelatedEntities<FieldSharing>("campaignactivity_principalobjectattributeaccess", null, value);
                this.OnPropertyChanged("FieldSharing_EntityInstance");
            }
        }

        /// <summary>
        /// 1:N CampaignActivity_ProcessSessions
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("CampaignActivity_ProcessSessions")]
        public System.Collections.Generic.IEnumerable<ProcessSession> ProcessSessions_Regarding
        {
            get
            {
                return this.GetRelatedEntities<ProcessSession>("CampaignActivity_ProcessSessions", null);
            }

            set
            {
                this.OnPropertyChanging("ProcessSessions_Regarding");
                this.SetRelatedEntities<ProcessSession>("CampaignActivity_ProcessSessions", null, value);
                this.OnPropertyChanged("ProcessSessions_Regarding");
            }
        }

        /// <summary>
        /// 1:N CampaignActivity_QueueItem
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("CampaignActivity_QueueItem")]
        public System.Collections.Generic.IEnumerable<QueueItem> QueueItems_Object
        {
            get
            {
                return this.GetRelatedEntities<QueueItem>("CampaignActivity_QueueItem", null);
            }

            set
            {
                this.OnPropertyChanging("QueueItems_Object");
                this.SetRelatedEntities<QueueItem>("CampaignActivity_QueueItem", null, value);
                this.OnPropertyChanged("QueueItems_Object");
            }
        }

        /// <summary>
        /// 1:N CampaignActivity_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("CampaignActivity_RecurringAppointmentMasters")]
        public System.Collections.Generic.IEnumerable<RecurringAppointmentMaster> RecurringReserveResources_Regarding
        {
            get
            {
                return this.GetRelatedEntities<RecurringAppointmentMaster>("CampaignActivity_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding");
                this.SetRelatedEntities<RecurringAppointmentMaster>("CampaignActivity_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding");
            }
        }

        /// <summary>
        /// 1:N campaignactivity_ServiceAppointments
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("campaignactivity_ServiceAppointments")]
        public System.Collections.Generic.IEnumerable<ServiceAppointment> Appointments_Regarding
        {
            get
            {
                return this.GetRelatedEntities<ServiceAppointment>("campaignactivity_ServiceAppointments", null);
            }

            set
            {
                this.OnPropertyChanging("Appointments_Regarding");
                this.SetRelatedEntities<ServiceAppointment>("campaignactivity_ServiceAppointments", null, value);
                this.OnPropertyChanged("Appointments_Regarding");
            }
        }

        /// <summary>
        /// 1:N CampaignActivity_SyncErrors
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("CampaignActivity_SyncErrors")]
        public System.Collections.Generic.IEnumerable<SyncError> SyncErrors_Record
        {
            get
            {
                return this.GetRelatedEntities<SyncError>("CampaignActivity_SyncErrors", null);
            }

            set
            {
                this.OnPropertyChanging("SyncErrors_Record");
                this.SetRelatedEntities<SyncError>("CampaignActivity_SyncErrors", null, value);
                this.OnPropertyChanged("SyncErrors_Record");
            }
        }

        /// <summary>
        /// 1:N CampaignActivity_Tasks
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("CampaignActivity_Tasks")]
        public System.Collections.Generic.IEnumerable<Task> Tasks_Regarding
        {
            get
            {
                return this.GetRelatedEntities<Task>("CampaignActivity_Tasks", null);
            }

            set
            {
                this.OnPropertyChanging("Tasks_Regarding");
                this.SetRelatedEntities<Task>("CampaignActivity_Tasks", null, value);
                this.OnPropertyChanged("Tasks_Regarding");
            }
        }

        /// <summary>
        /// 1:N CampaignResponse_CampaignActivities
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("CampaignResponse_CampaignActivities")]
        public System.Collections.Generic.IEnumerable<CampaignResponse> CampaignResponses_OriginatingActivity
        {
            get
            {
                return this.GetRelatedEntities<CampaignResponse>("CampaignResponse_CampaignActivities", null);
            }

            set
            {
                this.OnPropertyChanging("CampaignResponses_OriginatingActivity");
                this.SetRelatedEntities<CampaignResponse>("CampaignResponse_CampaignActivities", null, value);
                this.OnPropertyChanged("CampaignResponses_OriginatingActivity");
            }
        }

        /// <summary>
        /// 1:N userentityinstancedata_campaignactivity
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("userentityinstancedata_campaignactivity")]
        public System.Collections.Generic.IEnumerable<UserEntityInstanceData> UserEntityInstanceData_ObjectId
        {
            get
            {
                return this.GetRelatedEntities<UserEntityInstanceData>("userentityinstancedata_campaignactivity", null);
            }

            set
            {
                this.OnPropertyChanging("UserEntityInstanceData_ObjectId");
                this.SetRelatedEntities<UserEntityInstanceData>("userentityinstancedata_campaignactivity", null, value);
                this.OnPropertyChanged("UserEntityInstanceData_ObjectId");
            }
        }

        /// <summary>
        /// N:N CampaignActivity_Accounts
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("CampaignActivity_Accounts")]
        public System.Collections.Generic.IEnumerable<Account> Accounts
        {
            get
            {
                return this.GetRelatedEntities<Account>("CampaignActivity_Accounts", null);
            }

            set
            {
                this.OnPropertyChanging("Accounts");
                this.SetRelatedEntities<Account>("CampaignActivity_Accounts", null, value);
                this.OnPropertyChanged("Accounts");
            }
        }

        /// <summary>
        /// N:N CampaignActivity_Contacts
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("CampaignActivity_Contacts")]
        public System.Collections.Generic.IEnumerable<Contact> Patients
        {
            get
            {
                return this.GetRelatedEntities<Contact>("CampaignActivity_Contacts", null);
            }

            set
            {
                this.OnPropertyChanging("Patients");
                this.SetRelatedEntities<Contact>("CampaignActivity_Contacts", null, value);
                this.OnPropertyChanged("Patients");
            }
        }

        /// <summary>
        /// N:N CampaignActivity_Leads
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("CampaignActivity_Leads")]
        public System.Collections.Generic.IEnumerable<Lead> Leads
        {
            get
            {
                return this.GetRelatedEntities<Lead>("CampaignActivity_Leads", null);
            }

            set
            {
                this.OnPropertyChanging("Leads");
                this.SetRelatedEntities<Lead>("CampaignActivity_Leads", null, value);
                this.OnPropertyChanged("Leads");
            }
        }

        /// <summary>
        /// N:1 activity_pointer_campaignactivity
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("activity_pointer_campaignactivity")]
        public ActivityPointer CampaignActivities_CampaignActivity
        {
            get
            {
                return this.GetRelatedEntity<ActivityPointer>("activity_pointer_campaignactivity", null);
            }

            set
            {
                this.OnPropertyChanging("CampaignActivities_CampaignActivity");
                this.SetRelatedEntity<ActivityPointer>("activity_pointer_campaignactivity", null, value);
                this.OnPropertyChanged("CampaignActivities_CampaignActivity");
            }
        }

        /// <summary>
        /// N:1 bookableresourcebooking_CampaignActivities
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bookableresourcebooking_CampaignActivities")]
        public BookableResourceBooking CampaignActivities_ParentCampaign
        {
            get
            {
                return this.GetRelatedEntity<BookableResourceBooking>("bookableresourcebooking_CampaignActivities", null);
            }

            set
            {
                this.OnPropertyChanging("CampaignActivities_ParentCampaign");
                this.SetRelatedEntity<BookableResourceBooking>("bookableresourcebooking_CampaignActivities", null, value);
                this.OnPropertyChanged("CampaignActivities_ParentCampaign");
            }
        }

        /// <summary>
        /// N:1 bookableresourcebookingheader_CampaignActivities
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bookableresourcebookingheader_CampaignActivities")]
        public BookableResourceBookingHeader CampaignActivities_ParentCampaign2
        {
            get
            {
                return this.GetRelatedEntity<BookableResourceBookingHeader>("bookableresourcebookingheader_CampaignActivities", null);
            }

            set
            {
                this.OnPropertyChanging("CampaignActivities_ParentCampaign2");
                this.SetRelatedEntity<BookableResourceBookingHeader>("bookableresourcebookingheader_CampaignActivities", null, value);
                this.OnPropertyChanged("CampaignActivities_ParentCampaign2");
            }
        }

        /// <summary>
        /// N:1 business_unit_campaignactivity_activities
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_campaignactivity_activities")]
        public BusinessUnit CampaignActivities_OwningBusinessUnit
        {
            get
            {
                return this.GetRelatedEntity<BusinessUnit>("business_unit_campaignactivity_activities", null);
            }
        }

        /// <summary>
        /// N:1 Campaign_CampaignActivities
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Campaign_CampaignActivities")]
        public Campaign CampaignActivities_ParentCampaign3
        {
            get
            {
                return this.GetRelatedEntity<Campaign>("Campaign_CampaignActivities", null);
            }

            set
            {
                this.OnPropertyChanging("CampaignActivities_ParentCampaign3");
                this.SetRelatedEntity<Campaign>("Campaign_CampaignActivities", null, value);
                this.OnPropertyChanged("CampaignActivities_ParentCampaign3");
            }
        }

        /// <summary>
        /// N:1 campaignactivity_mailbox_sendermailboxid
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sendermailboxid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("campaignactivity_mailbox_sendermailboxid")]
        public Mailbox CampaignActivities_SendersMailbox
        {
            get
            {
                return this.GetRelatedEntity<Mailbox>("campaignactivity_mailbox_sendermailboxid", null);
            }
        }

        /// <summary>
        /// N:1 campaignactivity_sla_slaid
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("campaignactivity_sla_slaid")]
        public SLA CampaignActivities_SLA
        {
            get
            {
                return this.GetRelatedEntity<SLA>("campaignactivity_sla_slaid", null);
            }

            set
            {
                this.OnPropertyChanging("CampaignActivities_SLA");
                this.SetRelatedEntity<SLA>("campaignactivity_sla_slaid", null, value);
                this.OnPropertyChanged("CampaignActivities_SLA");
            }
        }

        /// <summary>
        /// N:1 campaignactivity_sla_slainvokedid
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("campaignactivity_sla_slainvokedid")]
        public SLA CampaignActivities_LastSLAApplied
        {
            get
            {
                return this.GetRelatedEntity<SLA>("campaignactivity_sla_slainvokedid", null);
            }
        }

        /// <summary>
        /// N:1 lk_campaignactivity_createdby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_campaignactivity_createdby")]
        public SystemUser CampaignActivities_CreatedBy
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("lk_campaignactivity_createdby", null);
            }
        }

        /// <summary>
        /// N:1 lk_campaignactivity_createdonbehalfby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_campaignactivity_createdonbehalfby")]
        public SystemUser CampaignActivities_CreatedBy_Delegate
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("lk_campaignactivity_createdonbehalfby", null);
            }
        }

        /// <summary>
        /// N:1 lk_campaignactivity_modifiedby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_campaignactivity_modifiedby")]
        public SystemUser CampaignActivities_ModifiedBy
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("lk_campaignactivity_modifiedby", null);
            }
        }

        /// <summary>
        /// N:1 lk_campaignactivity_modifiedonbehalfby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_campaignactivity_modifiedonbehalfby")]
        public SystemUser CampaignActivities_ModifiedBy_Delegate
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("lk_campaignactivity_modifiedonbehalfby", null);
            }
        }

        /// <summary>
        /// N:1 team_campaignactivity
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_campaignactivity")]
        public Team CampaignActivities_OwningTeam
        {
            get
            {
                return this.GetRelatedEntity<Team>("team_campaignactivity", null);
            }
        }

        /// <summary>
        /// N:1 transactioncurrency_campaignactivity
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_campaignactivity")]
        public Currency CampaignActivities_Currency
        {
            get
            {
                return this.GetRelatedEntity<Currency>("transactioncurrency_campaignactivity", null);
            }
        }

        /// <summary>
        /// N:1 user_campaignactivity
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_campaignactivity")]
        public SystemUser CampaignActivities_OwningUser
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("user_campaignactivity", null);
            }
        }
    }
}
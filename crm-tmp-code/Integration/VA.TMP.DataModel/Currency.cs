//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using VA.TMP.DataModel.OptionSets;

namespace VA.TMP.DataModel
{
    /// <summary>
    /// Currency in which a financial transaction is carried out.
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("transactioncurrency")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.1.0.71")]
    public partial class Currency : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Default Constructor.
        /// </summary>
        public Currency(): base(EntityLogicalName)
        {
        }

        public const string EntityLogicalName = "transactioncurrency";
        public const string EntityLogicalCollectionName = "transactioncurrencies";
        public const string EntitySetName = "transactioncurrencies";
        public const int EntityTypeCode = 9105;
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
        private void OnPropertyChanged(string propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        private void OnPropertyChanging(string propertyName)
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
            }
        }

        /// <summary>
        /// Unique identifier of the user who created the transaction currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference CreatedBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        /// <summary>
        /// Date and time when the transaction currency was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> CreatedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who created the transactioncurrency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference CreatedBy_Delegate
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
        }

        /// <summary>
        /// Name of the transaction currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currencyname")]
        public string CurrencyName
        {
            get
            {
                return this.GetAttributeValue<string>("currencyname");
            }

            set
            {
                this.OnPropertyChanging("CurrencyName");
                this.SetAttributeValue("currencyname", value);
                this.OnPropertyChanged("CurrencyName");
            }
        }

        /// <summary>
        /// Number of decimal places that can be used for currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currencyprecision")]
        public System.Nullable<int> CurrencyPrecision
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("currencyprecision");
            }

            set
            {
                this.OnPropertyChanging("CurrencyPrecision");
                this.SetAttributeValue("currencyprecision", value);
                this.OnPropertyChanged("CurrencyPrecision");
            }
        }

        /// <summary>
        /// Symbol for the transaction currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("currencysymbol")]
        public string CurrencySymbol
        {
            get
            {
                return this.GetAttributeValue<string>("currencysymbol");
            }

            set
            {
                this.OnPropertyChanging("CurrencySymbol");
                this.SetAttributeValue("currencysymbol", value);
                this.OnPropertyChanged("CurrencySymbol");
            }
        }

        /// <summary>
        /// The default image for the entity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage")]
        public byte[] EntityImage
        {
            get
            {
                return this.GetAttributeValue<byte[]>("entityimage");
            }

            set
            {
                this.OnPropertyChanging("EntityImage");
                this.SetAttributeValue("entityimage", value);
                this.OnPropertyChanged("EntityImage");
            }
        }

        /// <summary>
        /// 
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_timestamp")]
        public System.Nullable<long> EntityImage_Timestamp
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("entityimage_timestamp");
            }
        }

        /// <summary>
        /// 
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_url")]
        public string EntityImage_URL
        {
            get
            {
                return this.GetAttributeValue<string>("entityimage_url");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimageid")]
        public System.Nullable<System.Guid> EntityImageId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("entityimageid");
            }
        }

        /// <summary>
        /// Exchange rate between the transaction currency and the base currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
        public System.Nullable<decimal> ExchangeRate
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
            }

            set
            {
                this.OnPropertyChanging("ExchangeRate");
                this.SetAttributeValue("exchangerate", value);
                this.OnPropertyChanged("ExchangeRate");
            }
        }

        /// <summary>
        /// Unique identifier of the data import or data migration that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> ImportSequenceNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }

            set
            {
                this.OnPropertyChanging("ImportSequenceNumber");
                this.SetAttributeValue("importsequencenumber", value);
                this.OnPropertyChanged("ImportSequenceNumber");
            }
        }

        /// <summary>
        /// ISO currency code for the transaction currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isocurrencycode")]
        public string CurrencyCode
        {
            get
            {
                return this.GetAttributeValue<string>("isocurrencycode");
            }

            set
            {
                this.OnPropertyChanging("CurrencyCode");
                this.SetAttributeValue("isocurrencycode", value);
                this.OnPropertyChanged("CurrencyCode");
            }
        }

        /// <summary>
        /// Unique identifier of the user who last modified the transaction currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        /// <summary>
        /// Date and time when the transaction currency was last modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> ModifiedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// Unique identifier of the delegate user who last modified the transactioncurrency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference ModifiedBy_Delegate
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
        }

        /// <summary>
        /// Unique identifier of the organization associated with the transaction currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
        public Microsoft.Xrm.Sdk.EntityReference Organization
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> RecordCreatedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }

            set
            {
                this.OnPropertyChanging("RecordCreatedOn");
                this.SetAttributeValue("overriddencreatedon", value);
                this.OnPropertyChanged("RecordCreatedOn");
            }
        }

        /// <summary>
        /// Status of the transaction currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public System.Nullable<Currency_Status> Status
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
                if ((optionSet != null))
                {
                    return ((Currency_Status)(System.Enum.ToObject(typeof(Currency_Status), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("Status");
                if ((value == null))
                {
                    this.SetAttributeValue("statecode", null);
                }
                else
                {
                    this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("Status");
            }
        }

        /// <summary>
        /// Reason for the status of the transaction currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public System.Nullable<Currency_StatusReason> StatusReason
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
                if ((optionSet != null))
                {
                    return ((Currency_StatusReason)(System.Enum.ToObject(typeof(Currency_StatusReason), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("StatusReason");
                if ((value == null))
                {
                    this.SetAttributeValue("statuscode", null);
                }
                else
                {
                    this.SetAttributeValue("statuscode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("StatusReason");
            }
        }

        /// <summary>
        /// Unique identifier of the transaction currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
        public System.Nullable<System.Guid> TransactionCurrencyId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("transactioncurrencyid");
            }

            set
            {
                this.OnPropertyChanging("TransactionCurrencyId");
                this.SetAttributeValue("transactioncurrencyid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }

                this.OnPropertyChanged("TransactionCurrencyId");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
        public override System.Guid Id
        {
            get
            {
                return base.Id;
            }

            set
            {
                this.TransactionCurrencyId = value;
            }
        }

        /// <summary>
        /// Version number of the transaction currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> VersionNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N bulkoperation_transactioncurrency_transactioncurrencyid
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bulkoperation_transactioncurrency_transactioncurrencyid")]
        public System.Collections.Generic.IEnumerable<QuickCampaign> QuickCampaigns_Currency
        {
            get
            {
                return this.GetRelatedEntities<QuickCampaign>("bulkoperation_transactioncurrency_transactioncurrencyid", null);
            }

            set
            {
                this.OnPropertyChanging("QuickCampaigns_Currency");
                this.SetRelatedEntities<QuickCampaign>("bulkoperation_transactioncurrency_transactioncurrencyid", null, value);
                this.OnPropertyChanged("QuickCampaigns_Currency");
            }
        }

        /// <summary>
        /// 1:N transactioncurrency_account
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_account")]
        public System.Collections.Generic.IEnumerable<Account> Accounts_Currency
        {
            get
            {
                return this.GetRelatedEntities<Account>("transactioncurrency_account", null);
            }

            set
            {
                this.OnPropertyChanging("Accounts_Currency");
                this.SetRelatedEntities<Account>("transactioncurrency_account", null, value);
                this.OnPropertyChanged("Accounts_Currency");
            }
        }

        /// <summary>
        /// 1:N TransactionCurrency_ActivityPointer
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ActivityPointer")]
        public System.Collections.Generic.IEnumerable<ActivityPointer> Activities_Currency
        {
            get
            {
                return this.GetRelatedEntities<ActivityPointer>("TransactionCurrency_ActivityPointer", null);
            }

            set
            {
                this.OnPropertyChanging("Activities_Currency");
                this.SetRelatedEntities<ActivityPointer>("TransactionCurrency_ActivityPointer", null, value);
                this.OnPropertyChanged("Activities_Currency");
            }
        }

        /// <summary>
        /// 1:N TransactionCurrency_Appointment
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Appointment")]
        public System.Collections.Generic.IEnumerable<Appointment> ReserveResources_Currency
        {
            get
            {
                return this.GetRelatedEntities<Appointment>("TransactionCurrency_Appointment", null);
            }

            set
            {
                this.OnPropertyChanging("ReserveResources_Currency");
                this.SetRelatedEntities<Appointment>("TransactionCurrency_Appointment", null, value);
                this.OnPropertyChanged("ReserveResources_Currency");
            }
        }

        /// <summary>
        /// 1:N TransactionCurrency_AsyncOperations
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_AsyncOperations")]
        public System.Collections.Generic.IEnumerable<SystemJob> SystemJobs_Regarding
        {
            get
            {
                return this.GetRelatedEntities<SystemJob>("TransactionCurrency_AsyncOperations", null);
            }

            set
            {
                this.OnPropertyChanging("SystemJobs_Regarding");
                this.SetRelatedEntities<SystemJob>("TransactionCurrency_AsyncOperations", null, value);
                this.OnPropertyChanged("SystemJobs_Regarding");
            }
        }

        /// <summary>
        /// 1:N TransactionCurrency_bookableresourcebooking
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_bookableresourcebooking")]
        public System.Collections.Generic.IEnumerable<BookableResourceBooking> BookableResourceBookings_Currency
        {
            get
            {
                return this.GetRelatedEntities<BookableResourceBooking>("TransactionCurrency_bookableresourcebooking", null);
            }

            set
            {
                this.OnPropertyChanging("BookableResourceBookings_Currency");
                this.SetRelatedEntities<BookableResourceBooking>("TransactionCurrency_bookableresourcebooking", null, value);
                this.OnPropertyChanged("BookableResourceBookings_Currency");
            }
        }

        /// <summary>
        /// 1:N TransactionCurrency_bookableresourcebookingheader
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_bookableresourcebookingheader")]
        public System.Collections.Generic.IEnumerable<BookableResourceBookingHeader> BookableResourceBookingHeaders_Currency
        {
            get
            {
                return this.GetRelatedEntities<BookableResourceBookingHeader>("TransactionCurrency_bookableresourcebookingheader", null);
            }

            set
            {
                this.OnPropertyChanging("BookableResourceBookingHeaders_Currency");
                this.SetRelatedEntities<BookableResourceBookingHeader>("TransactionCurrency_bookableresourcebookingheader", null, value);
                this.OnPropertyChanged("BookableResourceBookingHeaders_Currency");
            }
        }

        /// <summary>
        /// 1:N TransactionCurrency_BusinessUnit
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_BusinessUnit")]
        public System.Collections.Generic.IEnumerable<BusinessUnit> BusinessUnits_Currency
        {
            get
            {
                return this.GetRelatedEntities<BusinessUnit>("TransactionCurrency_BusinessUnit", null);
            }

            set
            {
                this.OnPropertyChanging("BusinessUnits_Currency");
                this.SetRelatedEntities<BusinessUnit>("TransactionCurrency_BusinessUnit", null, value);
                this.OnPropertyChanged("BusinessUnits_Currency");
            }
        }

        /// <summary>
        /// 1:N transactioncurrency_campaign
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_campaign")]
        public System.Collections.Generic.IEnumerable<Campaign> Campaigns_Currency
        {
            get
            {
                return this.GetRelatedEntities<Campaign>("transactioncurrency_campaign", null);
            }

            set
            {
                this.OnPropertyChanging("Campaigns_Currency");
                this.SetRelatedEntities<Campaign>("transactioncurrency_campaign", null, value);
                this.OnPropertyChanged("Campaigns_Currency");
            }
        }

        /// <summary>
        /// 1:N transactioncurrency_campaignactivity
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_campaignactivity")]
        public System.Collections.Generic.IEnumerable<CampaignActivity> CampaignActivities_Currency
        {
            get
            {
                return this.GetRelatedEntities<CampaignActivity>("transactioncurrency_campaignactivity", null);
            }

            set
            {
                this.OnPropertyChanging("CampaignActivities_Currency");
                this.SetRelatedEntities<CampaignActivity>("transactioncurrency_campaignactivity", null, value);
                this.OnPropertyChanged("CampaignActivities_Currency");
            }
        }

        /// <summary>
        /// 1:N TransactionCurrency_CampaignResponse
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_CampaignResponse")]
        public System.Collections.Generic.IEnumerable<CampaignResponse> CampaignResponses_Currency
        {
            get
            {
                return this.GetRelatedEntities<CampaignResponse>("TransactionCurrency_CampaignResponse", null);
            }

            set
            {
                this.OnPropertyChanging("CampaignResponses_Currency");
                this.SetRelatedEntities<CampaignResponse>("TransactionCurrency_CampaignResponse", null, value);
                this.OnPropertyChanged("CampaignResponses_Currency");
            }
        }

        /// <summary>
        /// 1:N TransactionCurrency_Connection
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Connection")]
        public System.Collections.Generic.IEnumerable<Connection> Connections_Currency
        {
            get
            {
                return this.GetRelatedEntities<Connection>("TransactionCurrency_Connection", null);
            }

            set
            {
                this.OnPropertyChanging("Connections_Currency");
                this.SetRelatedEntities<Connection>("TransactionCurrency_Connection", null, value);
                this.OnPropertyChanged("Connections_Currency");
            }
        }

        /// <summary>
        /// 1:N transactioncurrency_contact
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_contact")]
        public System.Collections.Generic.IEnumerable<Contact> Patients_Currency
        {
            get
            {
                return this.GetRelatedEntities<Contact>("transactioncurrency_contact", null);
            }

            set
            {
                this.OnPropertyChanging("Patients_Currency");
                this.SetRelatedEntities<Contact>("transactioncurrency_contact", null, value);
                this.OnPropertyChanged("Patients_Currency");
            }
        }

        /// <summary>
        /// 1:N transactioncurrency_contract
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_contract")]
        public System.Collections.Generic.IEnumerable<Contract> Contracts_Currency
        {
            get
            {
                return this.GetRelatedEntities<Contract>("transactioncurrency_contract", null);
            }

            set
            {
                this.OnPropertyChanging("Contracts_Currency");
                this.SetRelatedEntities<Contract>("transactioncurrency_contract", null, value);
                this.OnPropertyChanged("Contracts_Currency");
            }
        }

        /// <summary>
        /// 1:N TransactionCurrency_Email
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Email")]
        public System.Collections.Generic.IEnumerable<Email> EmailMessages_Currency
        {
            get
            {
                return this.GetRelatedEntities<Email>("TransactionCurrency_Email", null);
            }

            set
            {
                this.OnPropertyChanging("EmailMessages_Currency");
                this.SetRelatedEntities<Email>("TransactionCurrency_Email", null, value);
                this.OnPropertyChanged("EmailMessages_Currency");
            }
        }

        /// <summary>
        /// 1:N TransactionCurrency_Entitlement
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Entitlement")]
        public System.Collections.Generic.IEnumerable<Entitlement> Entitlements_Currency
        {
            get
            {
                return this.GetRelatedEntities<Entitlement>("TransactionCurrency_Entitlement", null);
            }

            set
            {
                this.OnPropertyChanging("Entitlements_Currency");
                this.SetRelatedEntities<Entitlement>("TransactionCurrency_Entitlement", null, value);
                this.OnPropertyChanged("Entitlements_Currency");
            }
        }

        /// <summary>
        /// 1:N TransactionCurrency_entitlementtemplate
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_entitlementtemplate")]
        public System.Collections.Generic.IEnumerable<EntitlementTemplate> EntitlementTemplates_Currency
        {
            get
            {
                return this.GetRelatedEntities<EntitlementTemplate>("TransactionCurrency_entitlementtemplate", null);
            }

            set
            {
                this.OnPropertyChanging("EntitlementTemplates_Currency");
                this.SetRelatedEntities<EntitlementTemplate>("TransactionCurrency_entitlementtemplate", null, value);
                this.OnPropertyChanged("EntitlementTemplates_Currency");
            }
        }

        /// <summary>
        /// 1:N TransactionCurrency_Equipment
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Equipment")]
        public System.Collections.Generic.IEnumerable<Equipment> Equipment_Currency
        {
            get
            {
                return this.GetRelatedEntities<Equipment>("TransactionCurrency_Equipment", null);
            }

            set
            {
                this.OnPropertyChanging("Equipment_Currency");
                this.SetRelatedEntities<Equipment>("TransactionCurrency_Equipment", null, value);
                this.OnPropertyChanged("Equipment_Currency");
            }
        }

        /// <summary>
        /// 1:N TransactionCurrency_Incident
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Incident")]
        public System.Collections.Generic.IEnumerable<Case> Cases_Currency
        {
            get
            {
                return this.GetRelatedEntities<Case>("TransactionCurrency_Incident", null);
            }

            set
            {
                this.OnPropertyChanging("Cases_Currency");
                this.SetRelatedEntities<Case>("TransactionCurrency_Incident", null, value);
                this.OnPropertyChanged("Cases_Currency");
            }
        }

        /// <summary>
        /// 1:N TransactionCurrency_InteractionForEmail
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_InteractionForEmail")]
        public System.Collections.Generic.IEnumerable<InteractionForEmail> InteractionsForEmail_Currency
        {
            get
            {
                return this.GetRelatedEntities<InteractionForEmail>("TransactionCurrency_InteractionForEmail", null);
            }

            set
            {
                this.OnPropertyChanging("InteractionsForEmail_Currency");
                this.SetRelatedEntities<InteractionForEmail>("TransactionCurrency_InteractionForEmail", null, value);
                this.OnPropertyChanged("InteractionsForEmail_Currency");
            }
        }

        /// <summary>
        /// 1:N transactioncurrency_invoice
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_invoice")]
        public System.Collections.Generic.IEnumerable<Invoice> Invoices_Currency
        {
            get
            {
                return this.GetRelatedEntities<Invoice>("transactioncurrency_invoice", null);
            }

            set
            {
                this.OnPropertyChanging("Invoices_Currency");
                this.SetRelatedEntities<Invoice>("transactioncurrency_invoice", null, value);
                this.OnPropertyChanged("Invoices_Currency");
            }
        }

        /// <summary>
        /// 1:N TransactionCurrency_knowledgearticle
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_knowledgearticle")]
        public System.Collections.Generic.IEnumerable<KnowledgeArticle> KnowledgeArticles_Currency
        {
            get
            {
                return this.GetRelatedEntities<KnowledgeArticle>("TransactionCurrency_knowledgearticle", null);
            }

            set
            {
                this.OnPropertyChanging("KnowledgeArticles_Currency");
                this.SetRelatedEntities<KnowledgeArticle>("TransactionCurrency_knowledgearticle", null, value);
                this.OnPropertyChanged("KnowledgeArticles_Currency");
            }
        }

        /// <summary>
        /// 1:N TransactionCurrency_KnowledgeBaseRecord
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_KnowledgeBaseRecord")]
        public System.Collections.Generic.IEnumerable<KnowledgeBaseRecord> KnowledgeBaseRecords_Currency
        {
            get
            {
                return this.GetRelatedEntities<KnowledgeBaseRecord>("TransactionCurrency_KnowledgeBaseRecord", null);
            }

            set
            {
                this.OnPropertyChanging("KnowledgeBaseRecords_Currency");
                this.SetRelatedEntities<KnowledgeBaseRecord>("TransactionCurrency_KnowledgeBaseRecord", null, value);
                this.OnPropertyChanged("KnowledgeBaseRecords_Currency");
            }
        }

        /// <summary>
        /// 1:N transactioncurrency_lead
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_lead")]
        public System.Collections.Generic.IEnumerable<Lead> Leads_Currency
        {
            get
            {
                return this.GetRelatedEntities<Lead>("transactioncurrency_lead", null);
            }

            set
            {
                this.OnPropertyChanging("Leads_Currency");
                this.SetRelatedEntities<Lead>("transactioncurrency_lead", null, value);
                this.OnPropertyChanged("Leads_Currency");
            }
        }

        /// <summary>
        /// 1:N transactioncurrency_opportunity
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_opportunity")]
        public System.Collections.Generic.IEnumerable<Opportunity> Opportunities_Currency
        {
            get
            {
                return this.GetRelatedEntities<Opportunity>("transactioncurrency_opportunity", null);
            }

            set
            {
                this.OnPropertyChanging("Opportunities_Currency");
                this.SetRelatedEntities<Opportunity>("transactioncurrency_opportunity", null, value);
                this.OnPropertyChanged("Opportunities_Currency");
            }
        }

        /// <summary>
        /// 1:N TransactionCurrency_ProcessSessions
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ProcessSessions")]
        public System.Collections.Generic.IEnumerable<ProcessSession> ProcessSessions_Regarding
        {
            get
            {
                return this.GetRelatedEntities<ProcessSession>("TransactionCurrency_ProcessSessions", null);
            }

            set
            {
                this.OnPropertyChanging("ProcessSessions_Regarding");
                this.SetRelatedEntities<ProcessSession>("TransactionCurrency_ProcessSessions", null, value);
                this.OnPropertyChanged("ProcessSessions_Regarding");
            }
        }

        /// <summary>
        /// 1:N TransactionCurrency_QueueItem
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_QueueItem")]
        public System.Collections.Generic.IEnumerable<QueueItem> QueueItems_Currency
        {
            get
            {
                return this.GetRelatedEntities<QueueItem>("TransactionCurrency_QueueItem", null);
            }

            set
            {
                this.OnPropertyChanging("QueueItems_Currency");
                this.SetRelatedEntities<QueueItem>("TransactionCurrency_QueueItem", null, value);
                this.OnPropertyChanged("QueueItems_Currency");
            }
        }

        /// <summary>
        /// 1:N transactioncurrency_quote
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_quote")]
        public System.Collections.Generic.IEnumerable<Quote> Quotes_Currency
        {
            get
            {
                return this.GetRelatedEntities<Quote>("transactioncurrency_quote", null);
            }

            set
            {
                this.OnPropertyChanging("Quotes_Currency");
                this.SetRelatedEntities<Quote>("transactioncurrency_quote", null, value);
                this.OnPropertyChanged("Quotes_Currency");
            }
        }

        /// <summary>
        /// 1:N TransactionCurrency_RecurringAppointmentMaster
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_RecurringAppointmentMaster")]
        public System.Collections.Generic.IEnumerable<RecurringAppointmentMaster> RecurringReserveResources_Currency
        {
            get
            {
                return this.GetRelatedEntities<RecurringAppointmentMaster>("TransactionCurrency_RecurringAppointmentMaster", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Currency");
                this.SetRelatedEntities<RecurringAppointmentMaster>("TransactionCurrency_RecurringAppointmentMaster", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Currency");
            }
        }

        /// <summary>
        /// 1:N transactioncurrency_salesorder
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_salesorder")]
        public System.Collections.Generic.IEnumerable<Order> Orders_Currency
        {
            get
            {
                return this.GetRelatedEntities<Order>("transactioncurrency_salesorder", null);
            }

            set
            {
                this.OnPropertyChanging("Orders_Currency");
                this.SetRelatedEntities<Order>("transactioncurrency_salesorder", null, value);
                this.OnPropertyChanged("Orders_Currency");
            }
        }

        /// <summary>
        /// 1:N TransactionCurrency_ServiceAppointment
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ServiceAppointment")]
        public System.Collections.Generic.IEnumerable<ServiceAppointment> Appointments_Currency
        {
            get
            {
                return this.GetRelatedEntities<ServiceAppointment>("TransactionCurrency_ServiceAppointment", null);
            }

            set
            {
                this.OnPropertyChanging("Appointments_Currency");
                this.SetRelatedEntities<ServiceAppointment>("TransactionCurrency_ServiceAppointment", null, value);
                this.OnPropertyChanged("Appointments_Currency");
            }
        }

        /// <summary>
        /// 1:N TransactionCurrency_SLA
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_SLA")]
        public System.Collections.Generic.IEnumerable<SLA> SLAs_Currency
        {
            get
            {
                return this.GetRelatedEntities<SLA>("TransactionCurrency_SLA", null);
            }

            set
            {
                this.OnPropertyChanging("SLAs_Currency");
                this.SetRelatedEntities<SLA>("TransactionCurrency_SLA", null, value);
                this.OnPropertyChanged("SLAs_Currency");
            }
        }

        /// <summary>
        /// 1:N TransactionCurrency_slakpiinstance
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_slakpiinstance")]
        public System.Collections.Generic.IEnumerable<SLAKPIInstance> SLAKPIInstances_Currency
        {
            get
            {
                return this.GetRelatedEntities<SLAKPIInstance>("TransactionCurrency_slakpiinstance", null);
            }

            set
            {
                this.OnPropertyChanging("SLAKPIInstances_Currency");
                this.SetRelatedEntities<SLAKPIInstance>("TransactionCurrency_slakpiinstance", null, value);
                this.OnPropertyChanged("SLAKPIInstances_Currency");
            }
        }

        /// <summary>
        /// 1:N TransactionCurrency_SyncErrors
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_SyncErrors")]
        public System.Collections.Generic.IEnumerable<SyncError> SyncErrors_Record
        {
            get
            {
                return this.GetRelatedEntities<SyncError>("TransactionCurrency_SyncErrors", null);
            }

            set
            {
                this.OnPropertyChanging("SyncErrors_Record");
                this.SetRelatedEntities<SyncError>("TransactionCurrency_SyncErrors", null, value);
                this.OnPropertyChanged("SyncErrors_Record");
            }
        }

        /// <summary>
        /// 1:N TransactionCurrency_SystemUser
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_SystemUser")]
        public System.Collections.Generic.IEnumerable<SystemUser> Users_Currency
        {
            get
            {
                return this.GetRelatedEntities<SystemUser>("TransactionCurrency_SystemUser", null);
            }

            set
            {
                this.OnPropertyChanging("Users_Currency");
                this.SetRelatedEntities<SystemUser>("TransactionCurrency_SystemUser", null, value);
                this.OnPropertyChanged("Users_Currency");
            }
        }

        /// <summary>
        /// 1:N TransactionCurrency_Task
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Task")]
        public System.Collections.Generic.IEnumerable<Task> Tasks_Currency
        {
            get
            {
                return this.GetRelatedEntities<Task>("TransactionCurrency_Task", null);
            }

            set
            {
                this.OnPropertyChanging("Tasks_Currency");
                this.SetRelatedEntities<Task>("TransactionCurrency_Task", null, value);
                this.OnPropertyChanged("Tasks_Currency");
            }
        }

        /// <summary>
        /// 1:N TransactionCurrency_Team
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Team")]
        public System.Collections.Generic.IEnumerable<Team> Teams_Currency
        {
            get
            {
                return this.GetRelatedEntities<Team>("TransactionCurrency_Team", null);
            }

            set
            {
                this.OnPropertyChanging("Teams_Currency");
                this.SetRelatedEntities<Team>("TransactionCurrency_Team", null, value);
                this.OnPropertyChanged("Teams_Currency");
            }
        }

        /// <summary>
        /// 1:N transactioncurrency_usersettings
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_usersettings")]
        public System.Collections.Generic.IEnumerable<UserSettings> UserSettings_Currency
        {
            get
            {
                return this.GetRelatedEntities<UserSettings>("transactioncurrency_usersettings", null);
            }

            set
            {
                this.OnPropertyChanging("UserSettings_Currency");
                this.SetRelatedEntities<UserSettings>("transactioncurrency_usersettings", null, value);
                this.OnPropertyChanged("UserSettings_Currency");
            }
        }

        /// <summary>
        /// 1:N userentityinstancedata_transactioncurrency
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("userentityinstancedata_transactioncurrency")]
        public System.Collections.Generic.IEnumerable<UserEntityInstanceData> UserEntityInstanceData_ObjectId
        {
            get
            {
                return this.GetRelatedEntities<UserEntityInstanceData>("userentityinstancedata_transactioncurrency", null);
            }

            set
            {
                this.OnPropertyChanging("UserEntityInstanceData_ObjectId");
                this.SetRelatedEntities<UserEntityInstanceData>("userentityinstancedata_transactioncurrency", null, value);
                this.OnPropertyChanged("UserEntityInstanceData_ObjectId");
            }
        }

        /// <summary>
        /// N:1 lk_transactioncurrency_createdonbehalfby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_transactioncurrency_createdonbehalfby")]
        public SystemUser Currencies_CreatedBy_Delegate
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("lk_transactioncurrency_createdonbehalfby", null);
            }
        }

        /// <summary>
        /// N:1 lk_transactioncurrency_modifiedonbehalfby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_transactioncurrency_modifiedonbehalfby")]
        public SystemUser Currencies_ModifiedBy_Delegate
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("lk_transactioncurrency_modifiedonbehalfby", null);
            }
        }

        /// <summary>
        /// N:1 lk_transactioncurrencybase_createdby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_transactioncurrencybase_createdby")]
        public SystemUser Currencies_CreatedBy
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("lk_transactioncurrencybase_createdby", null);
            }
        }

        /// <summary>
        /// N:1 lk_transactioncurrencybase_modifiedby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_transactioncurrencybase_modifiedby")]
        public SystemUser Currencies_ModifiedBy
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("lk_transactioncurrencybase_modifiedby", null);
            }
        }
    }
}
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using VA.TMP.DataModel.OptionSets;

namespace VA.TMP.DataModel
{
    /// <summary>
    /// Service request case associated with a contract.
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("incident")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.1.0.71")]
    public partial class Case : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Default Constructor.
        /// </summary>
        public Case(): base(EntityLogicalName)
        {
        }

        public const string EntityLogicalName = "incident";
        public const string EntityLogicalCollectionName = "incidents";
        public const string EntitySetName = "incidents";
        public const int EntityTypeCode = 112;
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
        private void OnPropertyChanged(string propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        private void OnPropertyChanging(string propertyName)
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
            }
        }

        /// <summary>
        /// Unique identifier of the account with which the case is associated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountid")]
        public Microsoft.Xrm.Sdk.EntityReference Account
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("accountid");
            }
        }

        /// <summary>
        /// This attribute is used for Sample Service Business Processes.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activitiescomplete")]
        public System.Nullable<bool> ActivitiesComplete
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("activitiescomplete");
            }

            set
            {
                this.OnPropertyChanging("ActivitiesComplete");
                this.SetAttributeValue("activitiescomplete", value);
                this.OnPropertyChanged("ActivitiesComplete");
            }
        }

        /// <summary>
        /// Type the number of service units that were actually required to resolve the case.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualserviceunits")]
        public System.Nullable<int> ActualServiceUnits
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("actualserviceunits");
            }

            set
            {
                this.OnPropertyChanging("ActualServiceUnits");
                this.SetAttributeValue("actualserviceunits", value);
                this.OnPropertyChanged("ActualServiceUnits");
            }
        }

        /// <summary>
        /// Type the number of service units that were billed to the customer for the case.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("billedserviceunits")]
        public System.Nullable<int> BilledServiceUnits
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("billedserviceunits");
            }

            set
            {
                this.OnPropertyChanging("BilledServiceUnits");
                this.SetAttributeValue("billedserviceunits", value);
                this.OnPropertyChanged("BilledServiceUnits");
            }
        }

        /// <summary>
        /// Details whether the profile is blocked or not.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("blockedprofile")]
        public System.Nullable<bool> BlockedProfile
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("blockedprofile");
            }

            set
            {
                this.OnPropertyChanging("BlockedProfile");
                this.SetAttributeValue("blockedprofile", value);
                this.OnPropertyChanged("BlockedProfile");
            }
        }

        /// <summary>
        /// Select how contact about the case was originated, such as email, phone, or web, for use in reporting and analysis.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("caseorigincode")]
        public System.Nullable<CaseOrigin> Origin
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("caseorigincode");
                if ((optionSet != null))
                {
                    return ((CaseOrigin)(System.Enum.ToObject(typeof(CaseOrigin), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("Origin");
                if ((value == null))
                {
                    this.SetAttributeValue("caseorigincode", null);
                }
                else
                {
                    this.SetAttributeValue("caseorigincode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("Origin");
            }
        }

        /// <summary>
        /// Select the type of case to identify the incident for use in case routing and analysis.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("casetypecode")]
        public System.Nullable<Case_CaseType> CaseType
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("casetypecode");
                if ((optionSet != null))
                {
                    return ((Case_CaseType)(System.Enum.ToObject(typeof(Case_CaseType), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("CaseType");
                if ((value == null))
                {
                    this.SetAttributeValue("casetypecode", null);
                }
                else
                {
                    this.SetAttributeValue("casetypecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("CaseType");
            }
        }

        /// <summary>
        /// This attribute is used for Sample Service Business Processes.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("checkemail")]
        public System.Nullable<bool> CheckEmail
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("checkemail");
            }

            set
            {
                this.OnPropertyChanging("CheckEmail");
                this.SetAttributeValue("checkemail", value);
                this.OnPropertyChanged("CheckEmail");
            }
        }

        /// <summary>
        /// Unique identifier of the contact associated with the case.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contactid")]
        public Microsoft.Xrm.Sdk.EntityReference Contact
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("contactid");
            }
        }

        /// <summary>
        /// contract_detail_cases
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contractdetailid")]
        public Microsoft.Xrm.Sdk.EntityReference ContractLine
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("contractdetailid");
            }

            set
            {
                this.OnPropertyChanging("ContractLine");
                this.SetAttributeValue("contractdetailid", value);
                this.OnPropertyChanged("ContractLine");
            }
        }

        /// <summary>
        /// contract_cases
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contractid")]
        public Microsoft.Xrm.Sdk.EntityReference Contract
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("contractid");
            }

            set
            {
                this.OnPropertyChanging("Contract");
                this.SetAttributeValue("contractid", value);
                this.OnPropertyChanged("Contract");
            }
        }

        /// <summary>
        /// Select the service level for the case to make sure the case is handled correctly.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contractservicelevelcode")]
        public System.Nullable<Case_ServiceLevel> ServiceLevel
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("contractservicelevelcode");
                if ((optionSet != null))
                {
                    return ((Case_ServiceLevel)(System.Enum.ToObject(typeof(Case_ServiceLevel), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("ServiceLevel");
                if ((value == null))
                {
                    this.SetAttributeValue("contractservicelevelcode", null);
                }
                else
                {
                    this.SetAttributeValue("contractservicelevelcode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("ServiceLevel");
            }
        }

        /// <summary>
        /// lk_incidentbase_createdby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference CreatedBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        /// <summary>
        /// lk_externalparty_incident_createdby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyexternalparty")]
        public Microsoft.Xrm.Sdk.EntityReference CreatedBy_ExternalParty
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdbyexternalparty");
            }
        }

        /// <summary>
        /// Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> CreatedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// lk_incidentbase_createdonbehalfby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference CreatedBy_Delegate
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
        }

        /// <summary>
        /// Tells whether customer service representative has contacted the customer or not.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customercontacted")]
        public System.Nullable<bool> CustomerContacted
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("customercontacted");
            }

            set
            {
                this.OnPropertyChanging("CustomerContacted");
                this.SetAttributeValue("customercontacted", value);
                this.OnPropertyChanged("CustomerContacted");
            }
        }

        /// <summary>
        /// incident_customer_contacts
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerid")]
        public Microsoft.Xrm.Sdk.EntityReference Customer
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("customerid");
            }

            set
            {
                this.OnPropertyChanging("Customer");
                this.SetAttributeValue("customerid", value);
                this.OnPropertyChanged("Customer");
            }
        }

        /// <summary>
        /// Select the customer's level of satisfaction with the handling and resolution of the case.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customersatisfactioncode")]
        public System.Nullable<Case_Satisfaction> Satisfaction
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("customersatisfactioncode");
                if ((optionSet != null))
                {
                    return ((Case_Satisfaction)(System.Enum.ToObject(typeof(Case_Satisfaction), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("Satisfaction");
                if ((value == null))
                {
                    this.SetAttributeValue("customersatisfactioncode", null);
                }
                else
                {
                    this.SetAttributeValue("customersatisfactioncode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("Satisfaction");
            }
        }

        /// <summary>
        /// Shows whether terms of the associated entitlement should be decremented or not.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("decremententitlementterm")]
        public System.Nullable<bool> DecrementEntitlementTerms
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("decremententitlementterm");
            }

            set
            {
                this.OnPropertyChanging("DecrementEntitlementTerms");
                this.SetAttributeValue("decremententitlementterm", value);
                this.OnPropertyChanged("DecrementEntitlementTerms");
            }
        }

        /// <summary>
        /// Type additional information to describe the case to assist the service team in reaching a resolution.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
        public string Description
        {
            get
            {
                return this.GetAttributeValue<string>("description");
            }

            set
            {
                this.OnPropertyChanging("Description");
                this.SetAttributeValue("description", value);
                this.OnPropertyChanged("Description");
            }
        }

        /// <summary>
        /// The primary email address for the entity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress")]
        public string EmailAddress
        {
            get
            {
                return this.GetAttributeValue<string>("emailaddress");
            }

            set
            {
                this.OnPropertyChanging("EmailAddress");
                this.SetAttributeValue("emailaddress", value);
                this.OnPropertyChanged("EmailAddress");
            }
        }

        /// <summary>
        /// entitlement_cases
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entitlementid")]
        public Microsoft.Xrm.Sdk.EntityReference Entitlement
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("entitlementid");
            }

            set
            {
                this.OnPropertyChanging("Entitlement");
                this.SetAttributeValue("entitlementid", value);
                this.OnPropertyChanged("Entitlement");
            }
        }

        /// <summary>
        /// The default image for the entity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage")]
        public byte[] EntityImage
        {
            get
            {
                return this.GetAttributeValue<byte[]>("entityimage");
            }

            set
            {
                this.OnPropertyChanging("EntityImage");
                this.SetAttributeValue("entityimage", value);
                this.OnPropertyChanged("EntityImage");
            }
        }

        /// <summary>
        /// 
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_timestamp")]
        public System.Nullable<long> EntityImage_Timestamp
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("entityimage_timestamp");
            }
        }

        /// <summary>
        /// 
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_url")]
        public string EntityImage_URL
        {
            get
            {
                return this.GetAttributeValue<string>("entityimage_url");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimageid")]
        public System.Nullable<System.Guid> EntityImageId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("entityimageid");
            }
        }

        /// <summary>
        /// Indicates the date and time when the case was escalated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("escalatedon")]
        public System.Nullable<System.DateTime> EscalatedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("escalatedon");
            }
        }

        /// <summary>
        /// Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
        public System.Nullable<decimal> ExchangeRate
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
            }
        }

        /// <summary>
        /// incident_existingcase
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("existingcase")]
        public Microsoft.Xrm.Sdk.EntityReference ExistingCase
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("existingcase");
            }

            set
            {
                this.OnPropertyChanging("ExistingCase");
                this.SetAttributeValue("existingcase", value);
                this.OnPropertyChanged("ExistingCase");
            }
        }

        /// <summary>
        /// slakpiinstance_incident_firstresponsebykpi
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("firstresponsebykpiid")]
        public Microsoft.Xrm.Sdk.EntityReference FirstResponseByKPI
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("firstresponsebykpiid");
            }

            set
            {
                this.OnPropertyChanging("FirstResponseByKPI");
                this.SetAttributeValue("firstresponsebykpiid", value);
                this.OnPropertyChanged("FirstResponseByKPI");
            }
        }

        /// <summary>
        /// Indicates if the first response has been sent.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("firstresponsesent")]
        public System.Nullable<bool> FirstResponseSent
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("firstresponsesent");
            }

            set
            {
                this.OnPropertyChanging("FirstResponseSent");
                this.SetAttributeValue("firstresponsesent", value);
                this.OnPropertyChanged("FirstResponseSent");
            }
        }

        /// <summary>
        /// Shows the status of the initial response time for the case according to the terms of the SLA.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("firstresponseslastatus")]
        public System.Nullable<Case_FirstResponseSLAStatus> FirstResponseSLAStatus
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("firstresponseslastatus");
                if ((optionSet != null))
                {
                    return ((Case_FirstResponseSLAStatus)(System.Enum.ToObject(typeof(Case_FirstResponseSLAStatus), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("FirstResponseSLAStatus");
                if ((value == null))
                {
                    this.SetAttributeValue("firstresponseslastatus", null);
                }
                else
                {
                    this.SetAttributeValue("firstresponseslastatus", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("FirstResponseSLAStatus");
            }
        }

        /// <summary>
        /// Enter the date by which a customer service representative has to follow up with the customer on this case.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("followupby")]
        public System.Nullable<System.DateTime> FollowUpBy
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("followupby");
            }

            set
            {
                this.OnPropertyChanging("FollowUpBy");
                this.SetAttributeValue("followupby", value);
                this.OnPropertyChanged("FollowUpBy");
            }
        }

        /// <summary>
        /// This attribute is used for Sample Service Business Processes.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("followuptaskcreated")]
        public System.Nullable<bool> FollowUpTaskCreated
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("followuptaskcreated");
            }

            set
            {
                this.OnPropertyChanging("FollowUpTaskCreated");
                this.SetAttributeValue("followuptaskcreated", value);
                this.OnPropertyChanged("FollowUpTaskCreated");
            }
        }

        /// <summary>
        /// Unique identifier of the data import or data migration that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> ImportSequenceNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }

            set
            {
                this.OnPropertyChanging("ImportSequenceNumber");
                this.SetAttributeValue("importsequencenumber", value);
                this.OnPropertyChanged("ImportSequenceNumber");
            }
        }

        /// <summary>
        /// lk_incident_ChildIncidentCount
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incidentid")]
        public System.Nullable<System.Guid> CaseId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("incidentid");
            }

            set
            {
                this.OnPropertyChanging("CaseId");
                this.SetAttributeValue("incidentid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }

                this.OnPropertyChanged("CaseId");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incidentid")]
        public override System.Guid Id
        {
            get
            {
                return base.Id;
            }

            set
            {
                this.CaseId = value;
            }
        }

        /// <summary>
        /// Select the current stage of the service process for the case to assist service team members when they review or transfer a case.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incidentstagecode")]
        public System.Nullable<Case_CaseStage> CaseStage
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("incidentstagecode");
                if ((optionSet != null))
                {
                    return ((Case_CaseStage)(System.Enum.ToObject(typeof(Case_CaseStage), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("CaseStage");
                if ((value == null))
                {
                    this.SetAttributeValue("incidentstagecode", null);
                }
                else
                {
                    this.SetAttributeValue("incidentstagecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("CaseStage");
            }
        }

        /// <summary>
        /// Will contain the Influencer score coming from NetBreeze.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("influencescore")]
        public System.Nullable<double> InfluenceScore
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<double>>("influencescore");
            }

            set
            {
                this.OnPropertyChanging("InfluenceScore");
                this.SetAttributeValue("influencescore", value);
                this.OnPropertyChanged("InfluenceScore");
            }
        }

        /// <summary>
        /// For system use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isdecrementing")]
        public System.Nullable<bool> Decrementing
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isdecrementing");
            }

            set
            {
                this.OnPropertyChanging("Decrementing");
                this.SetAttributeValue("isdecrementing", value);
                this.OnPropertyChanged("Decrementing");
            }
        }

        /// <summary>
        /// Indicates if the case has been escalated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isescalated")]
        public System.Nullable<bool> IsEscalated
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("isescalated");
            }

            set
            {
                this.OnPropertyChanging("IsEscalated");
                this.SetAttributeValue("isescalated", value);
                this.OnPropertyChanged("IsEscalated");
            }
        }

        /// <summary>
        /// kbarticle_incidents
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("kbarticleid")]
        public Microsoft.Xrm.Sdk.EntityReference KnowledgeBaseArticle
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("kbarticleid");
            }

            set
            {
                this.OnPropertyChanging("KnowledgeBaseArticle");
                this.SetAttributeValue("kbarticleid", value);
                this.OnPropertyChanged("KnowledgeBaseArticle");
            }
        }

        /// <summary>
        /// Contains the date time stamp of the last on hold time.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastonholdtime")]
        public System.Nullable<System.DateTime> LastOnHoldTime
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastonholdtime");
            }

            set
            {
                this.OnPropertyChanging("LastOnHoldTime");
                this.SetAttributeValue("lastonholdtime", value);
                this.OnPropertyChanged("LastOnHoldTime");
            }
        }

        /// <summary>
        /// incident_master_incident
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("masterid")]
        public Microsoft.Xrm.Sdk.EntityReference MasterCase
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("masterid");
            }

            set
            {
                this.OnPropertyChanging("MasterCase");
                this.SetAttributeValue("masterid", value);
                this.OnPropertyChanged("MasterCase");
            }
        }

        /// <summary>
        /// Tells whether the incident has been merged with another incident.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("merged")]
        public System.Nullable<bool> InternalUseOnly
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("merged");
            }
        }

        /// <summary>
        /// Shows whether the post originated as a public or private message.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("messagetypecode")]
        public System.Nullable<PostMessageType> ReceivedAs
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("messagetypecode");
                if ((optionSet != null))
                {
                    return ((PostMessageType)(System.Enum.ToObject(typeof(PostMessageType), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("ReceivedAs");
                if ((value == null))
                {
                    this.SetAttributeValue("messagetypecode", null);
                }
                else
                {
                    this.SetAttributeValue("messagetypecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("ReceivedAs");
            }
        }

        /// <summary>
        /// lk_incidentbase_modifiedby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        /// <summary>
        /// lk_externalparty_incident_modifiedby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyexternalparty")]
        public Microsoft.Xrm.Sdk.EntityReference ModifiedBy_ExternalParty
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedbyexternalparty");
            }
        }

        /// <summary>
        /// Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> ModifiedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// lk_incidentbase_modifiedonbehalfby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference ModifiedBy_Delegate
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
        }

        /// <summary>
        /// The iot alert that initiated this case
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msdyn_iotalert")]
        public Microsoft.Xrm.Sdk.EntityReference IoTAlert
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msdyn_iotalert");
            }

            set
            {
                this.OnPropertyChanging("IoTAlert");
                this.SetAttributeValue("msdyn_iotalert", value);
                this.OnPropertyChanged("IoTAlert");
            }
        }

        /// <summary>
        /// Number of child incidents associated with the incident.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("numberofchildincidents")]
        public System.Nullable<int> ChildCases
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("numberofchildincidents");
            }
        }

        /// <summary>
        /// Shows the duration in minutes for which the case was on hold.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("onholdtime")]
        public System.Nullable<int> OnHoldTime_Minutes
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("onholdtime");
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> RecordCreatedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }

            set
            {
                this.OnPropertyChanging("RecordCreatedOn");
                this.SetAttributeValue("overriddencreatedon", value);
                this.OnPropertyChanged("RecordCreatedOn");
            }
        }

        /// <summary>
        /// owner_incidents
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference Owner
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }

            set
            {
                this.OnPropertyChanging("Owner");
                this.SetAttributeValue("ownerid", value);
                this.OnPropertyChanged("Owner");
            }
        }

        /// <summary>
        /// business_unit_incidents
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
        }

        /// <summary>
        /// team_incidents
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference OwningTeam
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// system_user_incidents
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference OwningUser
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// incident_parent_incident
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcaseid")]
        public Microsoft.Xrm.Sdk.EntityReference ParentCase
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentcaseid");
            }

            set
            {
                this.OnPropertyChanging("ParentCase");
                this.SetAttributeValue("parentcaseid", value);
                this.OnPropertyChanged("ParentCase");
            }
        }

        /// <summary>
        /// contact_as_primary_contact
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primarycontactid")]
        public Microsoft.Xrm.Sdk.EntityReference Contact2
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("primarycontactid");
            }

            set
            {
                this.OnPropertyChanging("Contact2");
                this.SetAttributeValue("primarycontactid", value);
                this.OnPropertyChanged("Contact2");
            }
        }

        /// <summary>
        /// Select the priority so that preferred customers or critical issues are handled quickly.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("prioritycode")]
        public System.Nullable<Case_Priority> Priority
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("prioritycode");
                if ((optionSet != null))
                {
                    return ((Case_Priority)(System.Enum.ToObject(typeof(Case_Priority), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("Priority");
                if ((value == null))
                {
                    this.SetAttributeValue("prioritycode", null);
                }
                else
                {
                    this.SetAttributeValue("prioritycode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("Priority");
            }
        }

        /// <summary>
        /// Shows the ID of the process.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
        public System.Nullable<System.Guid> Process
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
            }

            set
            {
                this.OnPropertyChanging("Process");
                this.SetAttributeValue("processid", value);
                this.OnPropertyChanged("Process");
            }
        }

        /// <summary>
        /// product_incidents
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("productid")]
        public Microsoft.Xrm.Sdk.EntityReference Product
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("productid");
            }

            set
            {
                this.OnPropertyChanging("Product");
                this.SetAttributeValue("productid", value);
                this.OnPropertyChanged("Product");
            }
        }

        /// <summary>
        /// Type the serial number of the product that is associated with this case, so that the number of cases per product can be reported.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("productserialnumber")]
        public string SerialNumber
        {
            get
            {
                return this.GetAttributeValue<string>("productserialnumber");
            }

            set
            {
                this.OnPropertyChanging("SerialNumber");
                this.SetAttributeValue("productserialnumber", value);
                this.OnPropertyChanged("SerialNumber");
            }
        }

        /// <summary>
        /// Enter the date by when the case must be resolved.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("resolveby")]
        public System.Nullable<System.DateTime> ResolveBy
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("resolveby");
            }

            set
            {
                this.OnPropertyChanging("ResolveBy");
                this.SetAttributeValue("resolveby", value);
                this.OnPropertyChanged("ResolveBy");
            }
        }

        /// <summary>
        /// slakpiinstance_incident_resolvebykpi
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("resolvebykpiid")]
        public Microsoft.Xrm.Sdk.EntityReference ResolveByKPI
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("resolvebykpiid");
            }

            set
            {
                this.OnPropertyChanging("ResolveByKPI");
                this.SetAttributeValue("resolvebykpiid", value);
                this.OnPropertyChanged("ResolveByKPI");
            }
        }

        /// <summary>
        /// Shows the status of the resolution time for the case according to the terms of the SLA.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("resolvebyslastatus")]
        public System.Nullable<Case_ResolveBySLAStatus> ResolveBySLAStatus
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("resolvebyslastatus");
                if ((optionSet != null))
                {
                    return ((Case_ResolveBySLAStatus)(System.Enum.ToObject(typeof(Case_ResolveBySLAStatus), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("ResolveBySLAStatus");
                if ((value == null))
                {
                    this.SetAttributeValue("resolvebyslastatus", null);
                }
                else
                {
                    this.SetAttributeValue("resolvebyslastatus", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("ResolveBySLAStatus");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("responseby")]
        public System.Nullable<System.DateTime> FirstResponseBy
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("responseby");
            }

            set
            {
                this.OnPropertyChanging("FirstResponseBy");
                this.SetAttributeValue("responseby", value);
                this.OnPropertyChanged("FirstResponseBy");
            }
        }

        /// <summary>
        /// contact_as_responsible_contact
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("responsiblecontactid")]
        [System.ObsoleteAttribute()]
        public Microsoft.Xrm.Sdk.EntityReference ResponsibleContact
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("responsiblecontactid");
            }

            set
            {
                this.OnPropertyChanging("ResponsibleContact");
                this.SetAttributeValue("responsiblecontactid", value);
                this.OnPropertyChanged("ResponsibleContact");
            }
        }

        /// <summary>
        /// Tells whether the incident has been routed to queue or not.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("routecase")]
        public System.Nullable<bool> RouteCase
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("routecase");
            }

            set
            {
                this.OnPropertyChanging("RouteCase");
                this.SetAttributeValue("routecase", value);
                this.OnPropertyChanged("RouteCase");
            }
        }

        /// <summary>
        /// Value derived after assessing words commonly associated with a negative, neutral, or positive sentiment that occurs in a social post. Sentiment information can also be reported as numeric values.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sentimentvalue")]
        public System.Nullable<double> SentimentValue
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<double>>("sentimentvalue");
            }

            set
            {
                this.OnPropertyChanging("SentimentValue");
                this.SetAttributeValue("sentimentvalue", value);
                this.OnPropertyChanged("SentimentValue");
            }
        }

        /// <summary>
        /// Select the stage, in the case resolution process, that the case is in.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("servicestage")]
        public System.Nullable<ServiceStage> ServiceStage
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("servicestage");
                if ((optionSet != null))
                {
                    return ((ServiceStage)(System.Enum.ToObject(typeof(ServiceStage), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("ServiceStage");
                if ((value == null))
                {
                    this.SetAttributeValue("servicestage", null);
                }
                else
                {
                    this.SetAttributeValue("servicestage", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("ServiceStage");
            }
        }

        /// <summary>
        /// Select the severity of this case to indicate the incident's impact on the customer's business.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("severitycode")]
        public System.Nullable<Case_Severity> Severity
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("severitycode");
                if ((optionSet != null))
                {
                    return ((Case_Severity)(System.Enum.ToObject(typeof(Case_Severity), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("Severity");
                if ((value == null))
                {
                    this.SetAttributeValue("severitycode", null);
                }
                else
                {
                    this.SetAttributeValue("severitycode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("Severity");
            }
        }

        /// <summary>
        /// manualsla_cases
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaid")]
        public Microsoft.Xrm.Sdk.EntityReference SLA
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slaid");
            }

            set
            {
                this.OnPropertyChanging("SLA");
                this.SetAttributeValue("slaid", value);
                this.OnPropertyChanged("SLA");
            }
        }

        /// <summary>
        /// Last SLA that was applied to this case. This field is for internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedid")]
        public Microsoft.Xrm.Sdk.EntityReference LastSLAApplied
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slainvokedid");
            }
        }

        /// <summary>
        /// socialprofile_cases
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("socialprofileid")]
        public Microsoft.Xrm.Sdk.EntityReference SocialProfile
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("socialprofileid");
            }

            set
            {
                this.OnPropertyChanging("SocialProfile");
                this.SetAttributeValue("socialprofileid", value);
                this.OnPropertyChanged("SocialProfile");
            }
        }

        /// <summary>
        /// processstage_incident
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
        public System.Nullable<System.Guid> ProcessStage
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
            }

            set
            {
                this.OnPropertyChanging("ProcessStage");
                this.SetAttributeValue("stageid", value);
                this.OnPropertyChanged("ProcessStage");
            }
        }

        /// <summary>
        /// Shows whether the case is active, resolved, or canceled. Resolved and canceled cases are read-only and can't be edited unless they are reactivated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public System.Nullable<Case_Status> Status
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
                if ((optionSet != null))
                {
                    return ((Case_Status)(System.Enum.ToObject(typeof(Case_Status), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("Status");
                if ((value == null))
                {
                    this.SetAttributeValue("statecode", null);
                }
                else
                {
                    this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("Status");
            }
        }

        /// <summary>
        /// Select the case's status.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public System.Nullable<Case_StatusReason> StatusReason
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
                if ((optionSet != null))
                {
                    return ((Case_StatusReason)(System.Enum.ToObject(typeof(Case_StatusReason), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("StatusReason");
                if ((value == null))
                {
                    this.SetAttributeValue("statuscode", null);
                }
                else
                {
                    this.SetAttributeValue("statuscode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("StatusReason");
            }
        }

        /// <summary>
        /// subject_incidents
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subjectid")]
        public Microsoft.Xrm.Sdk.EntityReference Subject
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("subjectid");
            }

            set
            {
                this.OnPropertyChanging("Subject");
                this.SetAttributeValue("subjectid", value);
                this.OnPropertyChanged("Subject");
            }
        }

        /// <summary>
        /// Shows the case number for customer reference and searching capabilities. This cannot be modified.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ticketnumber")]
        public string CaseNumber
        {
            get
            {
                return this.GetAttributeValue<string>("ticketnumber");
            }

            set
            {
                this.OnPropertyChanging("CaseNumber");
                this.SetAttributeValue("ticketnumber", value);
                this.OnPropertyChanged("CaseNumber");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> TimeZoneRuleVersionNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }

            set
            {
                this.OnPropertyChanging("TimeZoneRuleVersionNumber");
                this.SetAttributeValue("timezoneruleversionnumber", value);
                this.OnPropertyChanged("TimeZoneRuleVersionNumber");
            }
        }

        /// <summary>
        /// Type a subject or descriptive name, such as the request, issue, or company name, to identify the case in Microsoft Dynamics 365 views.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("title")]
        public string CaseTitle
        {
            get
            {
                return this.GetAttributeValue<string>("title");
            }

            set
            {
                this.OnPropertyChanging("CaseTitle");
                this.SetAttributeValue("title", value);
                this.OnPropertyChanged("CaseTitle");
            }
        }

        /// <summary>
        /// TransactionCurrency_Incident
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
        public Microsoft.Xrm.Sdk.EntityReference Currency
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
            }

            set
            {
                this.OnPropertyChanging("Currency");
                this.SetAttributeValue("transactioncurrencyid", value);
                this.OnPropertyChanged("Currency");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
        public string TraversedPath
        {
            get
            {
                return this.GetAttributeValue<string>("traversedpath");
            }

            set
            {
                this.OnPropertyChanging("TraversedPath");
                this.SetAttributeValue("traversedpath", value);
                this.OnPropertyChanged("TraversedPath");
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> UTCConversionTimeZoneCode
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }

            set
            {
                this.OnPropertyChanging("UTCConversionTimeZoneCode");
                this.SetAttributeValue("utcconversiontimezonecode", value);
                this.OnPropertyChanged("UTCConversionTimeZoneCode");
            }
        }

        /// <summary>
        /// Version number of the case.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> VersionNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N incident_activity_parties
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_activity_parties")]
        public System.Collections.Generic.IEnumerable<ActivityParty> ActivityParties_Party
        {
            get
            {
                return this.GetRelatedEntities<ActivityParty>("incident_activity_parties", null);
            }

            set
            {
                this.OnPropertyChanging("ActivityParties_Party");
                this.SetRelatedEntities<ActivityParty>("incident_activity_parties", null, value);
                this.OnPropertyChanged("ActivityParties_Party");
            }
        }

        /// <summary>
        /// 1:N Incident_ActivityPointers
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Incident_ActivityPointers")]
        public System.Collections.Generic.IEnumerable<ActivityPointer> Activities_Regarding
        {
            get
            {
                return this.GetRelatedEntities<ActivityPointer>("Incident_ActivityPointers", null);
            }

            set
            {
                this.OnPropertyChanging("Activities_Regarding");
                this.SetRelatedEntities<ActivityPointer>("Incident_ActivityPointers", null, value);
                this.OnPropertyChanged("Activities_Regarding");
            }
        }

        /// <summary>
        /// 1:N Incident_Annotation
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Incident_Annotation")]
        public System.Collections.Generic.IEnumerable<Annotation> Notes_Regarding
        {
            get
            {
                return this.GetRelatedEntities<Annotation>("Incident_Annotation", null);
            }

            set
            {
                this.OnPropertyChanging("Notes_Regarding");
                this.SetRelatedEntities<Annotation>("Incident_Annotation", null, value);
                this.OnPropertyChanged("Notes_Regarding");
            }
        }

        /// <summary>
        /// 1:N Incident_Appointments
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Incident_Appointments")]
        public System.Collections.Generic.IEnumerable<Appointment> ReserveResources_Regarding
        {
            get
            {
                return this.GetRelatedEntities<Appointment>("Incident_Appointments", null);
            }

            set
            {
                this.OnPropertyChanging("ReserveResources_Regarding");
                this.SetRelatedEntities<Appointment>("Incident_Appointments", null, value);
                this.OnPropertyChanged("ReserveResources_Regarding");
            }
        }

        /// <summary>
        /// 1:N Incident_AsyncOperations
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Incident_AsyncOperations")]
        public System.Collections.Generic.IEnumerable<SystemJob> SystemJobs_Regarding
        {
            get
            {
                return this.GetRelatedEntities<SystemJob>("Incident_AsyncOperations", null);
            }

            set
            {
                this.OnPropertyChanging("SystemJobs_Regarding");
                this.SetRelatedEntities<SystemJob>("Incident_AsyncOperations", null, value);
                this.OnPropertyChanged("SystemJobs_Regarding");
            }
        }

        /// <summary>
        /// 1:N Incident_BulkDeleteFailures
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Incident_BulkDeleteFailures")]
        public System.Collections.Generic.IEnumerable<BulkDeleteFailure> BulkDeleteFailures_Name
        {
            get
            {
                return this.GetRelatedEntities<BulkDeleteFailure>("Incident_BulkDeleteFailures", null);
            }

            set
            {
                this.OnPropertyChanging("BulkDeleteFailures_Name");
                this.SetRelatedEntities<BulkDeleteFailure>("Incident_BulkDeleteFailures", null, value);
                this.OnPropertyChanged("BulkDeleteFailures_Name");
            }
        }

        /// <summary>
        /// 1:N incident_connections1
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_connections1")]
        public System.Collections.Generic.IEnumerable<Connection> Connections_ConnectedFrom
        {
            get
            {
                return this.GetRelatedEntities<Connection>("incident_connections1", null);
            }

            set
            {
                this.OnPropertyChanging("Connections_ConnectedFrom");
                this.SetRelatedEntities<Connection>("incident_connections1", null, value);
                this.OnPropertyChanged("Connections_ConnectedFrom");
            }
        }

        /// <summary>
        /// 1:N incident_connections2
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_connections2")]
        public System.Collections.Generic.IEnumerable<Connection> Connections_ConnectedTo
        {
            get
            {
                return this.GetRelatedEntities<Connection>("incident_connections2", null);
            }

            set
            {
                this.OnPropertyChanging("Connections_ConnectedTo");
                this.SetRelatedEntities<Connection>("incident_connections2", null, value);
                this.OnPropertyChanged("Connections_ConnectedTo");
            }
        }

        /// <summary>
        /// 1:N Incident_Emails
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Incident_Emails")]
        public System.Collections.Generic.IEnumerable<Email> EmailMessages_Regarding
        {
            get
            {
                return this.GetRelatedEntities<Email>("Incident_Emails", null);
            }

            set
            {
                this.OnPropertyChanging("EmailMessages_Regarding");
                this.SetRelatedEntities<Email>("Incident_Emails", null, value);
                this.OnPropertyChanged("EmailMessages_Regarding");
            }
        }

        /// <summary>
        /// 1:N incident_existingcase
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_existingcase", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
        public System.Collections.Generic.IEnumerable<Case> Cases_ExistingCase_Referenced
        {
            get
            {
                return this.GetRelatedEntities<Case>("incident_existingcase", Microsoft.Xrm.Sdk.EntityRole.Referenced);
            }

            set
            {
                this.OnPropertyChanging("Cases_ExistingCase_Referenced");
                this.SetRelatedEntities<Case>("incident_existingcase", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
                this.OnPropertyChanged("Cases_ExistingCase_Referenced");
            }
        }

        /// <summary>
        /// 1:N Incident_MailboxTrackingFolder
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Incident_MailboxTrackingFolder")]
        public System.Collections.Generic.IEnumerable<MailboxAutoTrackingFolder> MailboxAutoTrackingFolders_RegardingObjectId
        {
            get
            {
                return this.GetRelatedEntities<MailboxAutoTrackingFolder>("Incident_MailboxTrackingFolder", null);
            }

            set
            {
                this.OnPropertyChanging("MailboxAutoTrackingFolders_RegardingObjectId");
                this.SetRelatedEntities<MailboxAutoTrackingFolder>("Incident_MailboxTrackingFolder", null, value);
                this.OnPropertyChanged("MailboxAutoTrackingFolders_RegardingObjectId");
            }
        }

        /// <summary>
        /// 1:N incident_master_incident
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_master_incident", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
        public System.Collections.Generic.IEnumerable<Case> Cases_MasterCase_Referenced
        {
            get
            {
                return this.GetRelatedEntities<Case>("incident_master_incident", Microsoft.Xrm.Sdk.EntityRole.Referenced);
            }

            set
            {
                this.OnPropertyChanging("Cases_MasterCase_Referenced");
                this.SetRelatedEntities<Case>("incident_master_incident", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
                this.OnPropertyChanged("Cases_MasterCase_Referenced");
            }
        }

        /// <summary>
        /// 1:N incident_parent_incident
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_parent_incident", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
        public System.Collections.Generic.IEnumerable<Case> Cases_ParentCase_Referenced
        {
            get
            {
                return this.GetRelatedEntities<Case>("incident_parent_incident", Microsoft.Xrm.Sdk.EntityRole.Referenced);
            }

            set
            {
                this.OnPropertyChanging("Cases_ParentCase_Referenced");
                this.SetRelatedEntities<Case>("incident_parent_incident", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
                this.OnPropertyChanged("Cases_ParentCase_Referenced");
            }
        }

        /// <summary>
        /// 1:N incident_principalobjectattributeaccess
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_principalobjectattributeaccess")]
        public System.Collections.Generic.IEnumerable<FieldSharing> FieldSharing_EntityInstance
        {
            get
            {
                return this.GetRelatedEntities<FieldSharing>("incident_principalobjectattributeaccess", null);
            }

            set
            {
                this.OnPropertyChanging("FieldSharing_EntityInstance");
                this.SetRelatedEntities<FieldSharing>("incident_principalobjectattributeaccess", null, value);
                this.OnPropertyChanged("FieldSharing_EntityInstance");
            }
        }

        /// <summary>
        /// 1:N Incident_ProcessSessions
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Incident_ProcessSessions")]
        public System.Collections.Generic.IEnumerable<ProcessSession> ProcessSessions_Regarding
        {
            get
            {
                return this.GetRelatedEntities<ProcessSession>("Incident_ProcessSessions", null);
            }

            set
            {
                this.OnPropertyChanging("ProcessSessions_Regarding");
                this.SetRelatedEntities<ProcessSession>("Incident_ProcessSessions", null, value);
                this.OnPropertyChanged("ProcessSessions_Regarding");
            }
        }

        /// <summary>
        /// 1:N Incident_QueueItem
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Incident_QueueItem")]
        public System.Collections.Generic.IEnumerable<QueueItem> QueueItems_Object
        {
            get
            {
                return this.GetRelatedEntities<QueueItem>("Incident_QueueItem", null);
            }

            set
            {
                this.OnPropertyChanging("QueueItems_Object");
                this.SetRelatedEntities<QueueItem>("Incident_QueueItem", null, value);
                this.OnPropertyChanged("QueueItems_Object");
            }
        }

        /// <summary>
        /// 1:N Incident_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Incident_RecurringAppointmentMasters")]
        public System.Collections.Generic.IEnumerable<RecurringAppointmentMaster> RecurringReserveResources_Regarding
        {
            get
            {
                return this.GetRelatedEntities<RecurringAppointmentMaster>("Incident_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding");
                this.SetRelatedEntities<RecurringAppointmentMaster>("Incident_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding");
            }
        }

        /// <summary>
        /// 1:N Incident_ServiceAppointments
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Incident_ServiceAppointments")]
        public System.Collections.Generic.IEnumerable<ServiceAppointment> Appointments_Regarding
        {
            get
            {
                return this.GetRelatedEntities<ServiceAppointment>("Incident_ServiceAppointments", null);
            }

            set
            {
                this.OnPropertyChanging("Appointments_Regarding");
                this.SetRelatedEntities<ServiceAppointment>("Incident_ServiceAppointments", null, value);
                this.OnPropertyChanged("Appointments_Regarding");
            }
        }

        /// <summary>
        /// 1:N Incident_SyncErrors
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Incident_SyncErrors")]
        public System.Collections.Generic.IEnumerable<SyncError> SyncErrors_Record
        {
            get
            {
                return this.GetRelatedEntities<SyncError>("Incident_SyncErrors", null);
            }

            set
            {
                this.OnPropertyChanging("SyncErrors_Record");
                this.SetRelatedEntities<SyncError>("Incident_SyncErrors", null, value);
                this.OnPropertyChanged("SyncErrors_Record");
            }
        }

        /// <summary>
        /// 1:N Incident_Tasks
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Incident_Tasks")]
        public System.Collections.Generic.IEnumerable<Task> Tasks_Regarding
        {
            get
            {
                return this.GetRelatedEntities<Task>("Incident_Tasks", null);
            }

            set
            {
                this.OnPropertyChanging("Tasks_Regarding");
                this.SetRelatedEntities<Task>("Incident_Tasks", null, value);
                this.OnPropertyChanged("Tasks_Regarding");
            }
        }

        /// <summary>
        /// 1:N OriginatingCase_Lead
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("OriginatingCase_Lead")]
        public System.Collections.Generic.IEnumerable<Lead> Leads_OriginatingCase
        {
            get
            {
                return this.GetRelatedEntities<Lead>("OriginatingCase_Lead", null);
            }

            set
            {
                this.OnPropertyChanging("Leads_OriginatingCase");
                this.SetRelatedEntities<Lead>("OriginatingCase_Lead", null, value);
                this.OnPropertyChanged("Leads_OriginatingCase");
            }
        }

        /// <summary>
        /// 1:N slakpiinstance_incident
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("slakpiinstance_incident")]
        public System.Collections.Generic.IEnumerable<SLAKPIInstance> SLAKPIInstances_Regarding
        {
            get
            {
                return this.GetRelatedEntities<SLAKPIInstance>("slakpiinstance_incident", null);
            }

            set
            {
                this.OnPropertyChanging("SLAKPIInstances_Regarding");
                this.SetRelatedEntities<SLAKPIInstance>("slakpiinstance_incident", null, value);
                this.OnPropertyChanged("SLAKPIInstances_Regarding");
            }
        }

        /// <summary>
        /// 1:N userentityinstancedata_incident
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("userentityinstancedata_incident")]
        public System.Collections.Generic.IEnumerable<UserEntityInstanceData> UserEntityInstanceData_ObjectId
        {
            get
            {
                return this.GetRelatedEntities<UserEntityInstanceData>("userentityinstancedata_incident", null);
            }

            set
            {
                this.OnPropertyChanging("UserEntityInstanceData_ObjectId");
                this.SetRelatedEntities<UserEntityInstanceData>("userentityinstancedata_incident", null, value);
                this.OnPropertyChanged("UserEntityInstanceData_ObjectId");
            }
        }

        /// <summary>
        /// N:N KnowledgeBaseRecord_Incident
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("KnowledgeBaseRecord_Incident")]
        public System.Collections.Generic.IEnumerable<KnowledgeBaseRecord> KnowledgeBaseRecords
        {
            get
            {
                return this.GetRelatedEntities<KnowledgeBaseRecord>("KnowledgeBaseRecord_Incident", null);
            }

            set
            {
                this.OnPropertyChanging("KnowledgeBaseRecords");
                this.SetRelatedEntities<KnowledgeBaseRecord>("KnowledgeBaseRecord_Incident", null, value);
                this.OnPropertyChanged("KnowledgeBaseRecords");
            }
        }

        /// <summary>
        /// N:N msdyn_incident_msdyn_customerasset
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_incident_msdyn_customerasset")]
        public System.Collections.Generic.IEnumerable<CustomerAsset> CustomerAssets
        {
            get
            {
                return this.GetRelatedEntities<CustomerAsset>("msdyn_incident_msdyn_customerasset", null);
            }

            set
            {
                this.OnPropertyChanging("CustomerAssets");
                this.SetRelatedEntities<CustomerAsset>("msdyn_incident_msdyn_customerasset", null, value);
                this.OnPropertyChanged("CustomerAssets");
            }
        }

        /// <summary>
        /// N:1 business_unit_incidents
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_incidents")]
        public BusinessUnit Cases_OwningBusinessUnit
        {
            get
            {
                return this.GetRelatedEntity<BusinessUnit>("business_unit_incidents", null);
            }
        }

        /// <summary>
        /// N:1 contact_as_primary_contact
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primarycontactid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_as_primary_contact")]
        public Contact Cases_Contact
        {
            get
            {
                return this.GetRelatedEntity<Contact>("contact_as_primary_contact", null);
            }

            set
            {
                this.OnPropertyChanging("Cases_Contact");
                this.SetRelatedEntity<Contact>("contact_as_primary_contact", null, value);
                this.OnPropertyChanged("Cases_Contact");
            }
        }

        /// <summary>
        /// N:1 contact_as_responsible_contact
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("responsiblecontactid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_as_responsible_contact")]
        public Contact Cases_ResponsibleContact
        {
            get
            {
                return this.GetRelatedEntity<Contact>("contact_as_responsible_contact", null);
            }

            set
            {
                this.OnPropertyChanging("Cases_ResponsibleContact");
                this.SetRelatedEntity<Contact>("contact_as_responsible_contact", null, value);
                this.OnPropertyChanged("Cases_ResponsibleContact");
            }
        }

        /// <summary>
        /// N:1 contract_cases
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contractid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contract_cases")]
        public Contract Cases_Contract
        {
            get
            {
                return this.GetRelatedEntity<Contract>("contract_cases", null);
            }

            set
            {
                this.OnPropertyChanging("Cases_Contract");
                this.SetRelatedEntity<Contract>("contract_cases", null, value);
                this.OnPropertyChanged("Cases_Contract");
            }
        }

        /// <summary>
        /// N:1 entitlement_cases
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entitlementid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlement_cases")]
        public Entitlement Cases_Entitlement
        {
            get
            {
                return this.GetRelatedEntity<Entitlement>("entitlement_cases", null);
            }

            set
            {
                this.OnPropertyChanging("Cases_Entitlement");
                this.SetRelatedEntity<Entitlement>("entitlement_cases", null, value);
                this.OnPropertyChanged("Cases_Entitlement");
            }
        }

        /// <summary>
        /// N:1 incident_customer_accounts
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_customer_accounts")]
        public Account Cases_Customer
        {
            get
            {
                return this.GetRelatedEntity<Account>("incident_customer_accounts", null);
            }

            set
            {
                this.OnPropertyChanging("Cases_Customer");
                this.SetRelatedEntity<Account>("incident_customer_accounts", null, value);
                this.OnPropertyChanged("Cases_Customer");
            }
        }

        /// <summary>
        /// N:1 incident_customer_contacts
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_customer_contacts")]
        public Contact Cases_Customer2
        {
            get
            {
                return this.GetRelatedEntity<Contact>("incident_customer_contacts", null);
            }

            set
            {
                this.OnPropertyChanging("Cases_Customer2");
                this.SetRelatedEntity<Contact>("incident_customer_contacts", null, value);
                this.OnPropertyChanged("Cases_Customer2");
            }
        }

        /// <summary>
        /// N:1 incident_existingcase
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("existingcase")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_existingcase", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
        public Case Cases_ExistingCase_Referencing
        {
            get
            {
                return this.GetRelatedEntity<Case>("incident_existingcase", Microsoft.Xrm.Sdk.EntityRole.Referencing);
            }

            set
            {
                this.OnPropertyChanging("Cases_ExistingCase_Referencing");
                this.SetRelatedEntity<Case>("incident_existingcase", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
                this.OnPropertyChanged("Cases_ExistingCase_Referencing");
            }
        }

        /// <summary>
        /// N:1 incident_master_incident
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("masterid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_master_incident", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
        public Case Cases_MasterCase_Referencing
        {
            get
            {
                return this.GetRelatedEntity<Case>("incident_master_incident", Microsoft.Xrm.Sdk.EntityRole.Referencing);
            }

            set
            {
                this.OnPropertyChanging("Cases_MasterCase_Referencing");
                this.SetRelatedEntity<Case>("incident_master_incident", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
                this.OnPropertyChanged("Cases_MasterCase_Referencing");
            }
        }

        /// <summary>
        /// N:1 incident_parent_incident
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcaseid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("incident_parent_incident", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
        public Case Cases_ParentCase_Referencing
        {
            get
            {
                return this.GetRelatedEntity<Case>("incident_parent_incident", Microsoft.Xrm.Sdk.EntityRole.Referencing);
            }

            set
            {
                this.OnPropertyChanging("Cases_ParentCase_Referencing");
                this.SetRelatedEntity<Case>("incident_parent_incident", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
                this.OnPropertyChanged("Cases_ParentCase_Referencing");
            }
        }

        /// <summary>
        /// N:1 lk_incidentbase_createdby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_incidentbase_createdby")]
        public SystemUser Cases_CreatedBy
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("lk_incidentbase_createdby", null);
            }
        }

        /// <summary>
        /// N:1 lk_incidentbase_createdonbehalfby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_incidentbase_createdonbehalfby")]
        public SystemUser Cases_CreatedBy_Delegate
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("lk_incidentbase_createdonbehalfby", null);
            }
        }

        /// <summary>
        /// N:1 lk_incidentbase_modifiedby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_incidentbase_modifiedby")]
        public SystemUser Cases_ModifiedBy
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("lk_incidentbase_modifiedby", null);
            }
        }

        /// <summary>
        /// N:1 lk_incidentbase_modifiedonbehalfby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_incidentbase_modifiedonbehalfby")]
        public SystemUser Cases_ModifiedBy_Delegate
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("lk_incidentbase_modifiedonbehalfby", null);
            }
        }

        /// <summary>
        /// N:1 manualsla_cases
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("manualsla_cases")]
        public SLA Cases_SLA
        {
            get
            {
                return this.GetRelatedEntity<SLA>("manualsla_cases", null);
            }

            set
            {
                this.OnPropertyChanging("Cases_SLA");
                this.SetRelatedEntity<SLA>("manualsla_cases", null, value);
                this.OnPropertyChanged("Cases_SLA");
            }
        }

        /// <summary>
        /// N:1 sla_cases
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("sla_cases")]
        public SLA Cases_LastSLAApplied
        {
            get
            {
                return this.GetRelatedEntity<SLA>("sla_cases", null);
            }
        }

        /// <summary>
        /// N:1 slakpiinstance_incident_firstresponsebykpi
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("firstresponsebykpiid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("slakpiinstance_incident_firstresponsebykpi")]
        public SLAKPIInstance Cases_FirstResponseByKPI
        {
            get
            {
                return this.GetRelatedEntity<SLAKPIInstance>("slakpiinstance_incident_firstresponsebykpi", null);
            }

            set
            {
                this.OnPropertyChanging("Cases_FirstResponseByKPI");
                this.SetRelatedEntity<SLAKPIInstance>("slakpiinstance_incident_firstresponsebykpi", null, value);
                this.OnPropertyChanged("Cases_FirstResponseByKPI");
            }
        }

        /// <summary>
        /// N:1 slakpiinstance_incident_resolvebykpi
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("resolvebykpiid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("slakpiinstance_incident_resolvebykpi")]
        public SLAKPIInstance Cases_ResolveByKPI
        {
            get
            {
                return this.GetRelatedEntity<SLAKPIInstance>("slakpiinstance_incident_resolvebykpi", null);
            }

            set
            {
                this.OnPropertyChanging("Cases_ResolveByKPI");
                this.SetRelatedEntity<SLAKPIInstance>("slakpiinstance_incident_resolvebykpi", null, value);
                this.OnPropertyChanged("Cases_ResolveByKPI");
            }
        }

        /// <summary>
        /// N:1 system_user_incidents
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("system_user_incidents")]
        public SystemUser Cases_OwningUser
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("system_user_incidents", null);
            }
        }

        /// <summary>
        /// N:1 team_incidents
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_incidents")]
        public Team Cases_OwningTeam
        {
            get
            {
                return this.GetRelatedEntity<Team>("team_incidents", null);
            }
        }

        /// <summary>
        /// N:1 TransactionCurrency_Incident
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Incident")]
        public Currency Cases_Currency
        {
            get
            {
                return this.GetRelatedEntity<Currency>("TransactionCurrency_Incident", null);
            }

            set
            {
                this.OnPropertyChanging("Cases_Currency");
                this.SetRelatedEntity<Currency>("TransactionCurrency_Incident", null, value);
                this.OnPropertyChanged("Cases_Currency");
            }
        }
    }
}
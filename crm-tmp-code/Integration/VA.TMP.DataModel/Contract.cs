//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using VA.TMP.DataModel.OptionSets;

namespace VA.TMP.DataModel
{
    /// <summary>
    /// Agreement to provide customer service during a specified amount of time or number of cases.
    /// </summary>
    [System.Runtime.Serialization.DataContractAttribute()]
    [Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("contract")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.1.0.71")]
    public partial class Contract : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
    {
        /// <summary>
        /// Default Constructor.
        /// </summary>
        public Contract(): base(EntityLogicalName)
        {
        }

        public const string EntityLogicalName = "contract";
        public const string EntityLogicalCollectionName = "contracts";
        public const string EntitySetName = "contracts";
        public const int EntityTypeCode = 1010;
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
        private void OnPropertyChanged(string propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }

        private void OnPropertyChanging(string propertyName)
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
            }
        }

        /// <summary>
        /// Unique identifier of the account with which the contract is associated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountid")]
        public Microsoft.Xrm.Sdk.EntityReference Account
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("accountid");
            }
        }

        /// <summary>
        /// Enter the date when the contract becomes active.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activeon")]
        public System.Nullable<System.DateTime> ContractStartDate
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("activeon");
            }

            set
            {
                this.OnPropertyChanging("ContractStartDate");
                this.SetAttributeValue("activeon", value);
                this.OnPropertyChanged("ContractStartDate");
            }
        }

        /// <summary>
        /// Type of allotment that the contract supports.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allotmenttypecode")]
        public System.Nullable<Contract_AllotmentType> AllotmentType
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("allotmenttypecode");
                if ((optionSet != null))
                {
                    return ((Contract_AllotmentType)(System.Enum.ToObject(typeof(Contract_AllotmentType), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("AllotmentType");
                if ((value == null))
                {
                    this.SetAttributeValue("allotmenttypecode", null);
                }
                else
                {
                    this.SetAttributeValue("allotmenttypecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("AllotmentType");
            }
        }

        /// <summary>
        /// Unique identifier of the account to which the contract is to be billed.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("billingaccountid")]
        public Microsoft.Xrm.Sdk.EntityReference BillingAccount
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("billingaccountid");
            }
        }

        /// <summary>
        /// Unique identifier of the contact to whom the contract is to be billed.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("billingcontactid")]
        public Microsoft.Xrm.Sdk.EntityReference BillingContact
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("billingcontactid");
            }
        }

        /// <summary>
        /// contract_billingcustomer_contacts
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("billingcustomerid")]
        public Microsoft.Xrm.Sdk.EntityReference BillToCustomer
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("billingcustomerid");
            }

            set
            {
                this.OnPropertyChanging("BillToCustomer");
                this.SetAttributeValue("billingcustomerid", value);
                this.OnPropertyChanged("BillToCustomer");
            }
        }

        /// <summary>
        /// Enter the end date for the contract's billing period to indicate the period for which the customer must pay for a service.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("billingendon")]
        public System.Nullable<System.DateTime> BillingEndDate
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("billingendon");
            }

            set
            {
                this.OnPropertyChanging("BillingEndDate");
                this.SetAttributeValue("billingendon", value);
                this.OnPropertyChanged("BillingEndDate");
            }
        }

        /// <summary>
        /// Select the billing schedule of the contract to indicate how often the customer should be invoiced.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("billingfrequencycode")]
        public System.Nullable<Contract_BillingFrequency> BillingFrequency
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("billingfrequencycode");
                if ((optionSet != null))
                {
                    return ((Contract_BillingFrequency)(System.Enum.ToObject(typeof(Contract_BillingFrequency), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("BillingFrequency");
                if ((value == null))
                {
                    this.SetAttributeValue("billingfrequencycode", null);
                }
                else
                {
                    this.SetAttributeValue("billingfrequencycode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("BillingFrequency");
            }
        }

        /// <summary>
        /// Enter the start date for the contract's billing period to indicate the period for which the customer must pay for a service. This defaults to the same date that is selected in the Contract Start Date field.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("billingstarton")]
        public System.Nullable<System.DateTime> BillingStartDate
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("billingstarton");
            }

            set
            {
                this.OnPropertyChanging("BillingStartDate");
                this.SetAttributeValue("billingstarton", value);
                this.OnPropertyChanged("BillingStartDate");
            }
        }

        /// <summary>
        /// customer_address_contracts_as_billing_address
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("billtoaddress")]
        public Microsoft.Xrm.Sdk.EntityReference BillToAddress
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("billtoaddress");
            }

            set
            {
                this.OnPropertyChanging("BillToAddress");
                this.SetAttributeValue("billtoaddress", value);
                this.OnPropertyChanged("BillToAddress");
            }
        }

        /// <summary>
        /// Shows the date and time when the contract was canceled.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cancelon")]
        public System.Nullable<System.DateTime> CancellationDate
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("cancelon");
            }
        }

        /// <summary>
        /// Unique identifier of the contact specified for the contract.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contactid")]
        public Microsoft.Xrm.Sdk.EntityReference Contact
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("contactid");
            }
        }

        /// <summary>
        /// Unique identifier of the contract.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contractid")]
        public System.Nullable<System.Guid> ContractId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("contractid");
            }

            set
            {
                this.OnPropertyChanging("ContractId");
                this.SetAttributeValue("contractid", value);
                if (value.HasValue)
                {
                    base.Id = value.Value;
                }
                else
                {
                    base.Id = System.Guid.Empty;
                }

                this.OnPropertyChanged("ContractId");
            }
        }

        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contractid")]
        public override System.Guid Id
        {
            get
            {
                return base.Id;
            }

            set
            {
                this.ContractId = value;
            }
        }

        /// <summary>
        /// Type additional information about the contract, such as the products or services provided to the customer.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contractlanguage")]
        public string Description
        {
            get
            {
                return this.GetAttributeValue<string>("contractlanguage");
            }

            set
            {
                this.OnPropertyChanging("Description");
                this.SetAttributeValue("contractlanguage", value);
                this.OnPropertyChanged("Description");
            }
        }

        /// <summary>
        /// Shows the number for the contract for customer reference and searching capabilities. You cannot modify this number.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contractnumber")]
        public string ContractID
        {
            get
            {
                return this.GetAttributeValue<string>("contractnumber");
            }

            set
            {
                this.OnPropertyChanging("ContractID");
                this.SetAttributeValue("contractnumber", value);
                this.OnPropertyChanged("ContractID");
            }
        }

        /// <summary>
        /// Select the level of service that should be provided for the contract based on your company's definition of bronze, silver, or gold.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contractservicelevelcode")]
        public System.Nullable<Contract_ServiceLevel> ServiceLevel
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("contractservicelevelcode");
                if ((optionSet != null))
                {
                    return ((Contract_ServiceLevel)(System.Enum.ToObject(typeof(Contract_ServiceLevel), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("ServiceLevel");
                if ((value == null))
                {
                    this.SetAttributeValue("contractservicelevelcode", null);
                }
                else
                {
                    this.SetAttributeValue("contractservicelevelcode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("ServiceLevel");
            }
        }

        /// <summary>
        /// Shows the abbreviation of the contract template selected when the contract is created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contracttemplateabbreviation")]
        public string TemplateAbbreviation
        {
            get
            {
                return this.GetAttributeValue<string>("contracttemplateabbreviation");
            }
        }

        /// <summary>
        /// contract_template_contracts
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contracttemplateid")]
        public Microsoft.Xrm.Sdk.EntityReference ContractTemplate
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("contracttemplateid");
            }

            set
            {
                this.OnPropertyChanging("ContractTemplate");
                this.SetAttributeValue("contracttemplateid", value);
                this.OnPropertyChanged("ContractTemplate");
            }
        }

        /// <summary>
        /// lk_contractbase_createdby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        public Microsoft.Xrm.Sdk.EntityReference CreatedBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
            }
        }

        /// <summary>
        /// Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
        public System.Nullable<System.DateTime> CreatedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
            }
        }

        /// <summary>
        /// lk_contract_createdonbehalfby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference CreatedBy_Delegate
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
            }
        }

        /// <summary>
        /// contract_customer_contacts
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerid")]
        public Microsoft.Xrm.Sdk.EntityReference Customer
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("customerid");
            }

            set
            {
                this.OnPropertyChanging("Customer");
                this.SetAttributeValue("customerid", value);
                this.OnPropertyChanged("Customer");
            }
        }

        /// <summary>
        /// Shows for the duration of the contract, in days, based on the contract start and end dates.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("duration")]
        public System.Nullable<int> Duration
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("duration");
            }
        }

        /// <summary>
        /// Days of the week and times during which customer service support is available for the duration of the contract.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("effectivitycalendar")]
        public string SupportCalendar
        {
            get
            {
                return this.GetAttributeValue<string>("effectivitycalendar");
            }

            set
            {
                this.OnPropertyChanging("SupportCalendar");
                this.SetAttributeValue("effectivitycalendar", value);
                this.OnPropertyChanged("SupportCalendar");
            }
        }

        /// <summary>
        /// The primary email address for the entity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress")]
        public string EmailAddress
        {
            get
            {
                return this.GetAttributeValue<string>("emailaddress");
            }

            set
            {
                this.OnPropertyChanging("EmailAddress");
                this.SetAttributeValue("emailaddress", value);
                this.OnPropertyChanged("EmailAddress");
            }
        }

        /// <summary>
        /// The default image for the entity.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage")]
        public byte[] EntityImage
        {
            get
            {
                return this.GetAttributeValue<byte[]>("entityimage");
            }

            set
            {
                this.OnPropertyChanging("EntityImage");
                this.SetAttributeValue("entityimage", value);
                this.OnPropertyChanged("EntityImage");
            }
        }

        /// <summary>
        /// 
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_timestamp")]
        public System.Nullable<long> EntityImage_Timestamp
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("entityimage_timestamp");
            }
        }

        /// <summary>
        /// 
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_url")]
        public string EntityImage_URL
        {
            get
            {
                return this.GetAttributeValue<string>("entityimage_url");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimageid")]
        public System.Nullable<System.Guid> EntityImageId
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.Guid>>("entityimageid");
            }
        }

        /// <summary>
        /// Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
        public System.Nullable<decimal> ExchangeRate
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
            }
        }

        /// <summary>
        /// Enter the date when the contract expires.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("expireson")]
        public System.Nullable<System.DateTime> ContractEndDate
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("expireson");
            }

            set
            {
                this.OnPropertyChanging("ContractEndDate");
                this.SetAttributeValue("expireson", value);
                this.OnPropertyChanged("ContractEndDate");
            }
        }

        /// <summary>
        /// Unique identifier of the data import or data migration that created this record.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
        public System.Nullable<int> ImportSequenceNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
            }

            set
            {
                this.OnPropertyChanging("ImportSequenceNumber");
                this.SetAttributeValue("importsequencenumber", value);
                this.OnPropertyChanged("ImportSequenceNumber");
            }
        }

        /// <summary>
        /// lk_contractbase_modifiedby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
            }
        }

        /// <summary>
        /// Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
        public System.Nullable<System.DateTime> ModifiedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
            }
        }

        /// <summary>
        /// lk_contract_modifiedonbehalfby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        public Microsoft.Xrm.Sdk.EntityReference ModifiedBy_Delegate
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
            }
        }

        /// <summary>
        /// Shows the total charge to the customer for the service contract, calculated as the sum of values in the Net field for each existing contract line related to the contract.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("netprice")]
        public Microsoft.Xrm.Sdk.Money NetPrice
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("netprice");
            }
        }

        /// <summary>
        /// Shows the Net Price field converted to the system's default base currency for reporting purposes. The calculations use the exchange rate specified in the Currencies area.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("netprice_base")]
        public Microsoft.Xrm.Sdk.Money NetPrice_Base
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("netprice_base");
            }
        }

        /// <summary>
        /// contract_originating_contract
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("originatingcontract")]
        public Microsoft.Xrm.Sdk.EntityReference OriginatingContract
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("originatingcontract");
            }

            set
            {
                this.OnPropertyChanging("OriginatingContract");
                this.SetAttributeValue("originatingcontract", value);
                this.OnPropertyChanged("OriginatingContract");
            }
        }

        /// <summary>
        /// Date and time that the record was migrated.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
        public System.Nullable<System.DateTime> RecordCreatedOn
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
            }

            set
            {
                this.OnPropertyChanging("RecordCreatedOn");
                this.SetAttributeValue("overriddencreatedon", value);
                this.OnPropertyChanged("RecordCreatedOn");
            }
        }

        /// <summary>
        /// owner_contracts
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
        public Microsoft.Xrm.Sdk.EntityReference Owner
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
            }

            set
            {
                this.OnPropertyChanging("Owner");
                this.SetAttributeValue("ownerid", value);
                this.OnPropertyChanged("Owner");
            }
        }

        /// <summary>
        /// business_unit_service_contracts
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
            }
        }

        /// <summary>
        /// team_service_contracts
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        public Microsoft.Xrm.Sdk.EntityReference OwningTeam
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
            }
        }

        /// <summary>
        /// system_user_service_contracts
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        public Microsoft.Xrm.Sdk.EntityReference OwningUser
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
            }
        }

        /// <summary>
        /// customer_address_contracts_as_service_address
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serviceaddress")]
        public Microsoft.Xrm.Sdk.EntityReference ContractAddress
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("serviceaddress");
            }

            set
            {
                this.OnPropertyChanging("ContractAddress");
                this.SetAttributeValue("serviceaddress", value);
                this.OnPropertyChanged("ContractAddress");
            }
        }

        /// <summary>
        /// Shows whether the contract is in draft, invoiced, active, on hold, canceled, or expired. You can edit only the contracts that are in draft status.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
        public System.Nullable<Contract_Status> Status
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
                if ((optionSet != null))
                {
                    return ((Contract_Status)(System.Enum.ToObject(typeof(Contract_Status), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("Status");
                if ((value == null))
                {
                    this.SetAttributeValue("statecode", null);
                }
                else
                {
                    this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("Status");
            }
        }

        /// <summary>
        /// Select the contract's status.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
        public System.Nullable<Contract_StatusReason> StatusReason
        {
            get
            {
                Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
                if ((optionSet != null))
                {
                    return ((Contract_StatusReason)(System.Enum.ToObject(typeof(Contract_StatusReason), optionSet.Value)));
                }
                else
                {
                    return null;
                }
            }

            set
            {
                this.OnPropertyChanging("StatusReason");
                if ((value == null))
                {
                    this.SetAttributeValue("statuscode", null);
                }
                else
                {
                    this.SetAttributeValue("statuscode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
                }

                this.OnPropertyChanged("StatusReason");
            }
        }

        /// <summary>
        /// For internal use only.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
        public System.Nullable<int> TimeZoneRuleVersionNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
            }

            set
            {
                this.OnPropertyChanging("TimeZoneRuleVersionNumber");
                this.SetAttributeValue("timezoneruleversionnumber", value);
                this.OnPropertyChanged("TimeZoneRuleVersionNumber");
            }
        }

        /// <summary>
        /// Type a title or name for the contract that indicates the purpose of the contract.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("title")]
        public string ContractName
        {
            get
            {
                return this.GetAttributeValue<string>("title");
            }

            set
            {
                this.OnPropertyChanging("ContractName");
                this.SetAttributeValue("title", value);
                this.OnPropertyChanged("ContractName");
            }
        }

        /// <summary>
        /// Shows the total discount applied to the contract's service charges, calculated as the sum of values in the Discount fields for each existing contract line related to the contract.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totaldiscount")]
        public Microsoft.Xrm.Sdk.Money TotalDiscount
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("totaldiscount");
            }
        }

        /// <summary>
        /// Shows the Total Discount field converted to the system's default base currency for reporting purposes. The calculations use the exchange rate specified in the Currencies area.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totaldiscount_base")]
        public Microsoft.Xrm.Sdk.Money TotalDiscount_Base
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("totaldiscount_base");
            }
        }

        /// <summary>
        /// Shows the total service charge for the contract, before any discounts are credited. This is calculated as the sum of values in the Total Price field for each existing contract line related to the contract.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totalprice")]
        public Microsoft.Xrm.Sdk.Money TotalPrice
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("totalprice");
            }
        }

        /// <summary>
        /// Shows the Total Price field converted to the system's default base currency for reporting purposes. The calculations use the exchange rate specified in the Currencies area.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totalprice_base")]
        public Microsoft.Xrm.Sdk.Money TotalPrice_Base
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("totalprice_base");
            }
        }

        /// <summary>
        /// transactioncurrency_contract
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
        public Microsoft.Xrm.Sdk.EntityReference Currency
        {
            get
            {
                return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
            }

            set
            {
                this.OnPropertyChanging("Currency");
                this.SetAttributeValue("transactioncurrencyid", value);
                this.OnPropertyChanged("Currency");
            }
        }

        /// <summary>
        /// Select whether the discounts entered on contract lines for this contract should be entered as a percentage or a fixed dollar value.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("usediscountaspercentage")]
        public System.Nullable<bool> Discount
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<bool>>("usediscountaspercentage");
            }

            set
            {
                this.OnPropertyChanging("Discount");
                this.SetAttributeValue("usediscountaspercentage", value);
                this.OnPropertyChanged("Discount");
            }
        }

        /// <summary>
        /// Time zone code that was in use when the record was created.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
        public System.Nullable<int> UTCConversionTimeZoneCode
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
            }

            set
            {
                this.OnPropertyChanging("UTCConversionTimeZoneCode");
                this.SetAttributeValue("utcconversiontimezonecode", value);
                this.OnPropertyChanged("UTCConversionTimeZoneCode");
            }
        }

        /// <summary>
        /// Version number of the contract.
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
        public System.Nullable<long> VersionNumber
        {
            get
            {
                return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
            }
        }

        /// <summary>
        /// 1:N contract_activity_parties
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contract_activity_parties")]
        public System.Collections.Generic.IEnumerable<ActivityParty> ActivityParties_Party
        {
            get
            {
                return this.GetRelatedEntities<ActivityParty>("contract_activity_parties", null);
            }

            set
            {
                this.OnPropertyChanging("ActivityParties_Party");
                this.SetRelatedEntities<ActivityParty>("contract_activity_parties", null, value);
                this.OnPropertyChanged("ActivityParties_Party");
            }
        }

        /// <summary>
        /// 1:N Contract_ActivityPointers
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contract_ActivityPointers")]
        public System.Collections.Generic.IEnumerable<ActivityPointer> Activities_Regarding
        {
            get
            {
                return this.GetRelatedEntities<ActivityPointer>("Contract_ActivityPointers", null);
            }

            set
            {
                this.OnPropertyChanging("Activities_Regarding");
                this.SetRelatedEntities<ActivityPointer>("Contract_ActivityPointers", null, value);
                this.OnPropertyChanged("Activities_Regarding");
            }
        }

        /// <summary>
        /// 1:N Contract_Annotation
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contract_Annotation")]
        public System.Collections.Generic.IEnumerable<Annotation> Notes_Regarding
        {
            get
            {
                return this.GetRelatedEntities<Annotation>("Contract_Annotation", null);
            }

            set
            {
                this.OnPropertyChanging("Notes_Regarding");
                this.SetRelatedEntities<Annotation>("Contract_Annotation", null, value);
                this.OnPropertyChanged("Notes_Regarding");
            }
        }

        /// <summary>
        /// 1:N Contract_Appointments
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contract_Appointments")]
        public System.Collections.Generic.IEnumerable<Appointment> ReserveResources_Regarding
        {
            get
            {
                return this.GetRelatedEntities<Appointment>("Contract_Appointments", null);
            }

            set
            {
                this.OnPropertyChanging("ReserveResources_Regarding");
                this.SetRelatedEntities<Appointment>("Contract_Appointments", null, value);
                this.OnPropertyChanged("ReserveResources_Regarding");
            }
        }

        /// <summary>
        /// 1:N Contract_AsyncOperations
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contract_AsyncOperations")]
        public System.Collections.Generic.IEnumerable<SystemJob> SystemJobs_Regarding
        {
            get
            {
                return this.GetRelatedEntities<SystemJob>("Contract_AsyncOperations", null);
            }

            set
            {
                this.OnPropertyChanging("SystemJobs_Regarding");
                this.SetRelatedEntities<SystemJob>("Contract_AsyncOperations", null, value);
                this.OnPropertyChanged("SystemJobs_Regarding");
            }
        }

        /// <summary>
        /// 1:N Contract_BulkDeleteFailures
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contract_BulkDeleteFailures")]
        public System.Collections.Generic.IEnumerable<BulkDeleteFailure> BulkDeleteFailures_Name
        {
            get
            {
                return this.GetRelatedEntities<BulkDeleteFailure>("Contract_BulkDeleteFailures", null);
            }

            set
            {
                this.OnPropertyChanging("BulkDeleteFailures_Name");
                this.SetRelatedEntities<BulkDeleteFailure>("Contract_BulkDeleteFailures", null, value);
                this.OnPropertyChanged("BulkDeleteFailures_Name");
            }
        }

        /// <summary>
        /// 1:N contract_cases
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contract_cases")]
        public System.Collections.Generic.IEnumerable<Case> Cases_Contract
        {
            get
            {
                return this.GetRelatedEntities<Case>("contract_cases", null);
            }

            set
            {
                this.OnPropertyChanging("Cases_Contract");
                this.SetRelatedEntities<Case>("contract_cases", null, value);
                this.OnPropertyChanged("Cases_Contract");
            }
        }

        /// <summary>
        /// 1:N contract_connections1
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contract_connections1")]
        public System.Collections.Generic.IEnumerable<Connection> Connections_ConnectedFrom
        {
            get
            {
                return this.GetRelatedEntities<Connection>("contract_connections1", null);
            }

            set
            {
                this.OnPropertyChanging("Connections_ConnectedFrom");
                this.SetRelatedEntities<Connection>("contract_connections1", null, value);
                this.OnPropertyChanged("Connections_ConnectedFrom");
            }
        }

        /// <summary>
        /// 1:N contract_connections2
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contract_connections2")]
        public System.Collections.Generic.IEnumerable<Connection> Connections_ConnectedTo
        {
            get
            {
                return this.GetRelatedEntities<Connection>("contract_connections2", null);
            }

            set
            {
                this.OnPropertyChanging("Connections_ConnectedTo");
                this.SetRelatedEntities<Connection>("contract_connections2", null, value);
                this.OnPropertyChanged("Connections_ConnectedTo");
            }
        }

        /// <summary>
        /// 1:N Contract_Emails
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contract_Emails")]
        public System.Collections.Generic.IEnumerable<Email> EmailMessages_Regarding
        {
            get
            {
                return this.GetRelatedEntities<Email>("Contract_Emails", null);
            }

            set
            {
                this.OnPropertyChanging("EmailMessages_Regarding");
                this.SetRelatedEntities<Email>("Contract_Emails", null, value);
                this.OnPropertyChanged("EmailMessages_Regarding");
            }
        }

        /// <summary>
        /// 1:N Contract_MailboxTrackingFolder
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contract_MailboxTrackingFolder")]
        public System.Collections.Generic.IEnumerable<MailboxAutoTrackingFolder> MailboxAutoTrackingFolders_RegardingObjectId
        {
            get
            {
                return this.GetRelatedEntities<MailboxAutoTrackingFolder>("Contract_MailboxTrackingFolder", null);
            }

            set
            {
                this.OnPropertyChanging("MailboxAutoTrackingFolders_RegardingObjectId");
                this.SetRelatedEntities<MailboxAutoTrackingFolder>("Contract_MailboxTrackingFolder", null, value);
                this.OnPropertyChanged("MailboxAutoTrackingFolders_RegardingObjectId");
            }
        }

        /// <summary>
        /// 1:N contract_originating_contract
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contract_originating_contract", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
        public System.Collections.Generic.IEnumerable<Contract> Contracts_OriginatingContract_Referenced
        {
            get
            {
                return this.GetRelatedEntities<Contract>("contract_originating_contract", Microsoft.Xrm.Sdk.EntityRole.Referenced);
            }

            set
            {
                this.OnPropertyChanging("Contracts_OriginatingContract_Referenced");
                this.SetRelatedEntities<Contract>("contract_originating_contract", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
                this.OnPropertyChanged("Contracts_OriginatingContract_Referenced");
            }
        }

        /// <summary>
        /// 1:N contract_principalobjectattributeaccess
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contract_principalobjectattributeaccess")]
        public System.Collections.Generic.IEnumerable<FieldSharing> FieldSharing_EntityInstance
        {
            get
            {
                return this.GetRelatedEntities<FieldSharing>("contract_principalobjectattributeaccess", null);
            }

            set
            {
                this.OnPropertyChanging("FieldSharing_EntityInstance");
                this.SetRelatedEntities<FieldSharing>("contract_principalobjectattributeaccess", null, value);
                this.OnPropertyChanged("FieldSharing_EntityInstance");
            }
        }

        /// <summary>
        /// 1:N Contract_ProcessSessions
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contract_ProcessSessions")]
        public System.Collections.Generic.IEnumerable<ProcessSession> ProcessSessions_Regarding
        {
            get
            {
                return this.GetRelatedEntities<ProcessSession>("Contract_ProcessSessions", null);
            }

            set
            {
                this.OnPropertyChanging("ProcessSessions_Regarding");
                this.SetRelatedEntities<ProcessSession>("Contract_ProcessSessions", null, value);
                this.OnPropertyChanged("ProcessSessions_Regarding");
            }
        }

        /// <summary>
        /// 1:N Contract_RecurringAppointmentMasters
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contract_RecurringAppointmentMasters")]
        public System.Collections.Generic.IEnumerable<RecurringAppointmentMaster> RecurringReserveResources_Regarding
        {
            get
            {
                return this.GetRelatedEntities<RecurringAppointmentMaster>("Contract_RecurringAppointmentMasters", null);
            }

            set
            {
                this.OnPropertyChanging("RecurringReserveResources_Regarding");
                this.SetRelatedEntities<RecurringAppointmentMaster>("Contract_RecurringAppointmentMasters", null, value);
                this.OnPropertyChanged("RecurringReserveResources_Regarding");
            }
        }

        /// <summary>
        /// 1:N Contract_ServiceAppointments
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contract_ServiceAppointments")]
        public System.Collections.Generic.IEnumerable<ServiceAppointment> Appointments_Regarding
        {
            get
            {
                return this.GetRelatedEntities<ServiceAppointment>("Contract_ServiceAppointments", null);
            }

            set
            {
                this.OnPropertyChanging("Appointments_Regarding");
                this.SetRelatedEntities<ServiceAppointment>("Contract_ServiceAppointments", null, value);
                this.OnPropertyChanged("Appointments_Regarding");
            }
        }

        /// <summary>
        /// 1:N Contract_SyncErrors
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contract_SyncErrors")]
        public System.Collections.Generic.IEnumerable<SyncError> SyncErrors_Record
        {
            get
            {
                return this.GetRelatedEntities<SyncError>("Contract_SyncErrors", null);
            }

            set
            {
                this.OnPropertyChanging("SyncErrors_Record");
                this.SetRelatedEntities<SyncError>("Contract_SyncErrors", null, value);
                this.OnPropertyChanged("SyncErrors_Record");
            }
        }

        /// <summary>
        /// 1:N Contract_Tasks
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contract_Tasks")]
        public System.Collections.Generic.IEnumerable<Task> Tasks_Regarding
        {
            get
            {
                return this.GetRelatedEntities<Task>("Contract_Tasks", null);
            }

            set
            {
                this.OnPropertyChanging("Tasks_Regarding");
                this.SetRelatedEntities<Task>("Contract_Tasks", null, value);
                this.OnPropertyChanged("Tasks_Regarding");
            }
        }

        /// <summary>
        /// 1:N userentityinstancedata_contract
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("userentityinstancedata_contract")]
        public System.Collections.Generic.IEnumerable<UserEntityInstanceData> UserEntityInstanceData_ObjectId
        {
            get
            {
                return this.GetRelatedEntities<UserEntityInstanceData>("userentityinstancedata_contract", null);
            }

            set
            {
                this.OnPropertyChanging("UserEntityInstanceData_ObjectId");
                this.SetRelatedEntities<UserEntityInstanceData>("userentityinstancedata_contract", null, value);
                this.OnPropertyChanged("UserEntityInstanceData_ObjectId");
            }
        }

        /// <summary>
        /// N:N servicecontractcontacts_association
        /// </summary>
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("servicecontractcontacts_association")]
        public System.Collections.Generic.IEnumerable<Contact> Patients
        {
            get
            {
                return this.GetRelatedEntities<Contact>("servicecontractcontacts_association", null);
            }

            set
            {
                this.OnPropertyChanging("Patients");
                this.SetRelatedEntities<Contact>("servicecontractcontacts_association", null, value);
                this.OnPropertyChanged("Patients");
            }
        }

        /// <summary>
        /// N:1 business_unit_service_contracts
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_service_contracts")]
        public BusinessUnit Contracts_OwningBusinessUnit
        {
            get
            {
                return this.GetRelatedEntity<BusinessUnit>("business_unit_service_contracts", null);
            }
        }

        /// <summary>
        /// N:1 contract_billingcustomer_accounts
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("billingcustomerid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contract_billingcustomer_accounts")]
        public Account Contracts_BillToCustomer
        {
            get
            {
                return this.GetRelatedEntity<Account>("contract_billingcustomer_accounts", null);
            }

            set
            {
                this.OnPropertyChanging("Contracts_BillToCustomer");
                this.SetRelatedEntity<Account>("contract_billingcustomer_accounts", null, value);
                this.OnPropertyChanged("Contracts_BillToCustomer");
            }
        }

        /// <summary>
        /// N:1 contract_billingcustomer_contacts
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("billingcustomerid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contract_billingcustomer_contacts")]
        public Contact Contracts_BillToCustomer2
        {
            get
            {
                return this.GetRelatedEntity<Contact>("contract_billingcustomer_contacts", null);
            }

            set
            {
                this.OnPropertyChanging("Contracts_BillToCustomer2");
                this.SetRelatedEntity<Contact>("contract_billingcustomer_contacts", null, value);
                this.OnPropertyChanged("Contracts_BillToCustomer2");
            }
        }

        /// <summary>
        /// N:1 contract_customer_accounts
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contract_customer_accounts")]
        public Account Contracts_Customer
        {
            get
            {
                return this.GetRelatedEntity<Account>("contract_customer_accounts", null);
            }

            set
            {
                this.OnPropertyChanging("Contracts_Customer");
                this.SetRelatedEntity<Account>("contract_customer_accounts", null, value);
                this.OnPropertyChanged("Contracts_Customer");
            }
        }

        /// <summary>
        /// N:1 contract_customer_contacts
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contract_customer_contacts")]
        public Contact Contracts_Customer2
        {
            get
            {
                return this.GetRelatedEntity<Contact>("contract_customer_contacts", null);
            }

            set
            {
                this.OnPropertyChanging("Contracts_Customer2");
                this.SetRelatedEntity<Contact>("contract_customer_contacts", null, value);
                this.OnPropertyChanged("Contracts_Customer2");
            }
        }

        /// <summary>
        /// N:1 contract_originating_contract
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("originatingcontract")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contract_originating_contract", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
        public Contract Contracts_OriginatingContract_Referencing
        {
            get
            {
                return this.GetRelatedEntity<Contract>("contract_originating_contract", Microsoft.Xrm.Sdk.EntityRole.Referencing);
            }

            set
            {
                this.OnPropertyChanging("Contracts_OriginatingContract_Referencing");
                this.SetRelatedEntity<Contract>("contract_originating_contract", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
                this.OnPropertyChanged("Contracts_OriginatingContract_Referencing");
            }
        }

        /// <summary>
        /// N:1 lk_contract_createdonbehalfby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_contract_createdonbehalfby")]
        public SystemUser Contracts_CreatedBy_Delegate
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("lk_contract_createdonbehalfby", null);
            }
        }

        /// <summary>
        /// N:1 lk_contract_modifiedonbehalfby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_contract_modifiedonbehalfby")]
        public SystemUser Contracts_ModifiedBy_Delegate
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("lk_contract_modifiedonbehalfby", null);
            }
        }

        /// <summary>
        /// N:1 lk_contractbase_createdby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_contractbase_createdby")]
        public SystemUser Contracts_CreatedBy
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("lk_contractbase_createdby", null);
            }
        }

        /// <summary>
        /// N:1 lk_contractbase_modifiedby
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_contractbase_modifiedby")]
        public SystemUser Contracts_ModifiedBy
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("lk_contractbase_modifiedby", null);
            }
        }

        /// <summary>
        /// N:1 system_user_service_contracts
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("system_user_service_contracts")]
        public SystemUser Contracts_OwningUser
        {
            get
            {
                return this.GetRelatedEntity<SystemUser>("system_user_service_contracts", null);
            }
        }

        /// <summary>
        /// N:1 team_service_contracts
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_service_contracts")]
        public Team Contracts_OwningTeam
        {
            get
            {
                return this.GetRelatedEntity<Team>("team_service_contracts", null);
            }
        }

        /// <summary>
        /// N:1 transactioncurrency_contract
        /// </summary>
        [Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
        [Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_contract")]
        public Currency Contracts_Currency
        {
            get
            {
                return this.GetRelatedEntity<Currency>("transactioncurrency_contract", null);
            }

            set
            {
                this.OnPropertyChanging("Contracts_Currency");
                this.SetRelatedEntity<Currency>("transactioncurrency_contract", null, value);
                this.OnPropertyChanged("Contracts_Currency");
            }
        }
    }
}
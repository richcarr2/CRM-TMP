//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ec.VirtualMeetingRoom.Services.Vyopta.UcManager {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScheduleMeetingRequest", Namespace="http://schemas.datacontract.org/2004/07/Vyopta.UcManager")]
    [System.SerializableAttribute()]
    public partial class ScheduleMeetingRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EncounterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GuestNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GuestPinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostPinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MeetingRoomNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiscDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EncounterId {
            get {
                return this.EncounterIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EncounterIdField, value) != true)) {
                    this.EncounterIdField = value;
                    this.RaisePropertyChanged("EncounterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GuestName {
            get {
                return this.GuestNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GuestNameField, value) != true)) {
                    this.GuestNameField = value;
                    this.RaisePropertyChanged("GuestName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GuestPin {
            get {
                return this.GuestPinField;
            }
            set {
                if ((object.ReferenceEquals(this.GuestPinField, value) != true)) {
                    this.GuestPinField = value;
                    this.RaisePropertyChanged("GuestPin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostName {
            get {
                return this.HostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HostNameField, value) != true)) {
                    this.HostNameField = value;
                    this.RaisePropertyChanged("HostName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HostPin {
            get {
                return this.HostPinField;
            }
            set {
                if ((object.ReferenceEquals(this.HostPinField, value) != true)) {
                    this.HostPinField = value;
                    this.RaisePropertyChanged("HostPin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MeetingRoomName {
            get {
                return this.MeetingRoomNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MeetingRoomNameField, value) != true)) {
                    this.MeetingRoomNameField = value;
                    this.RaisePropertyChanged("MeetingRoomName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiscData {
            get {
                return this.MiscDataField;
            }
            set {
                if ((object.ReferenceEquals(this.MiscDataField, value) != true)) {
                    this.MiscDataField = value;
                    this.RaisePropertyChanged("MiscData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScheduleMeetingResponse", Namespace="http://schemas.datacontract.org/2004/07/Vyopta.UcManager")]
    [System.SerializableAttribute()]
    public partial class ScheduleMeetingResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DialingAliasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EncounterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiscDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DialingAlias {
            get {
                return this.DialingAliasField;
            }
            set {
                if ((object.ReferenceEquals(this.DialingAliasField, value) != true)) {
                    this.DialingAliasField = value;
                    this.RaisePropertyChanged("DialingAlias");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EncounterId {
            get {
                return this.EncounterIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EncounterIdField, value) != true)) {
                    this.EncounterIdField = value;
                    this.RaisePropertyChanged("EncounterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiscData {
            get {
                return this.MiscDataField;
            }
            set {
                if ((object.ReferenceEquals(this.MiscDataField, value) != true)) {
                    this.MiscDataField = value;
                    this.RaisePropertyChanged("MiscData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeleteMeetingRequest", Namespace="http://schemas.datacontract.org/2004/07/Vyopta.UcManager")]
    [System.SerializableAttribute()]
    public partial class DeleteMeetingRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EncounterIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiscDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EncounterId {
            get {
                return this.EncounterIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EncounterIdField, value) != true)) {
                    this.EncounterIdField = value;
                    this.RaisePropertyChanged("EncounterId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiscData {
            get {
                return this.MiscDataField;
            }
            set {
                if ((object.ReferenceEquals(this.MiscDataField, value) != true)) {
                    this.MiscDataField = value;
                    this.RaisePropertyChanged("MiscData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeleteMeetingResponse", Namespace="http://schemas.datacontract.org/2004/07/Vyopta.UcManager")]
    [System.SerializableAttribute()]
    public partial class DeleteMeetingResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MiscDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiscData {
            get {
                return this.MiscDataField;
            }
            set {
                if ((object.ReferenceEquals(this.MiscDataField, value) != true)) {
                    this.MiscDataField = value;
                    this.RaisePropertyChanged("MiscData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="Vyopta.UcManager", ConfigurationName="Vyopta.UcManager.IUcManagerService")]
    public interface IUcManagerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="Vyopta.UcManager/IUcManagerService/ScheduleMeeting", ReplyAction="Vyopta.UcManager/IUcManagerService/ScheduleMeetingResponse")]
        Ec.VirtualMeetingRoom.Services.Vyopta.UcManager.ScheduleMeetingResponse ScheduleMeeting(Ec.VirtualMeetingRoom.Services.Vyopta.UcManager.ScheduleMeetingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Vyopta.UcManager/IUcManagerService/ScheduleMeeting", ReplyAction="Vyopta.UcManager/IUcManagerService/ScheduleMeetingResponse")]
        System.Threading.Tasks.Task<Ec.VirtualMeetingRoom.Services.Vyopta.UcManager.ScheduleMeetingResponse> ScheduleMeetingAsync(Ec.VirtualMeetingRoom.Services.Vyopta.UcManager.ScheduleMeetingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Vyopta.UcManager/IUcManagerService/DeleteMeeting", ReplyAction="Vyopta.UcManager/IUcManagerService/DeleteMeetingResponse")]
        Ec.VirtualMeetingRoom.Services.Vyopta.UcManager.DeleteMeetingResponse DeleteMeeting(Ec.VirtualMeetingRoom.Services.Vyopta.UcManager.DeleteMeetingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="Vyopta.UcManager/IUcManagerService/DeleteMeeting", ReplyAction="Vyopta.UcManager/IUcManagerService/DeleteMeetingResponse")]
        System.Threading.Tasks.Task<Ec.VirtualMeetingRoom.Services.Vyopta.UcManager.DeleteMeetingResponse> DeleteMeetingAsync(Ec.VirtualMeetingRoom.Services.Vyopta.UcManager.DeleteMeetingRequest request);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUcManagerServiceChannel : Ec.VirtualMeetingRoom.Services.Vyopta.UcManager.IUcManagerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UcManagerServiceClient : System.ServiceModel.ClientBase<Ec.VirtualMeetingRoom.Services.Vyopta.UcManager.IUcManagerService>, Ec.VirtualMeetingRoom.Services.Vyopta.UcManager.IUcManagerService {
        
        public UcManagerServiceClient() {
        }
        
        public UcManagerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UcManagerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UcManagerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UcManagerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Ec.VirtualMeetingRoom.Services.Vyopta.UcManager.ScheduleMeetingResponse ScheduleMeeting(Ec.VirtualMeetingRoom.Services.Vyopta.UcManager.ScheduleMeetingRequest request) {
            return base.Channel.ScheduleMeeting(request);
        }
        
        public System.Threading.Tasks.Task<Ec.VirtualMeetingRoom.Services.Vyopta.UcManager.ScheduleMeetingResponse> ScheduleMeetingAsync(Ec.VirtualMeetingRoom.Services.Vyopta.UcManager.ScheduleMeetingRequest request) {
            return base.Channel.ScheduleMeetingAsync(request);
        }
        
        public Ec.VirtualMeetingRoom.Services.Vyopta.UcManager.DeleteMeetingResponse DeleteMeeting(Ec.VirtualMeetingRoom.Services.Vyopta.UcManager.DeleteMeetingRequest request) {
            return base.Channel.DeleteMeeting(request);
        }
        
        public System.Threading.Tasks.Task<Ec.VirtualMeetingRoom.Services.Vyopta.UcManager.DeleteMeetingResponse> DeleteMeetingAsync(Ec.VirtualMeetingRoom.Services.Vyopta.UcManager.DeleteMeetingRequest request) {
            return base.Channel.DeleteMeetingAsync(request);
        }
    }
}
